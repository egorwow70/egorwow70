{"version":3,"sources":["webpack:///src/app/guards/user-list/can-leave-registration.guard.ts","webpack:///src/app/guards/user-list/can-proceed-to-registration.guard.ts","webpack:///src/app/models/user-list/registration-type.ts","webpack:///src/app/registration/registration-routing.module.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/registration/registration.module.ts"],"names":["CanLeaveRegistrationGuard","component","canDeactivate","CanProceedToRegistrationGuard","next","currentRegistrationMode","params","registrationMode","RM","LM","errorMessage","Error","RegistrationType","routes","path","pathMatch","redirectTo","canActivate","RegistrationRoutingModule","forChild","imports","exports","RegistrationComponent","_store$","_router","_facadeUserListService","_activatedRoute","_destroySubject$","initLoginForm","initRegistrateForm","myFormLogin","userName","required","userNameValidator","userSurname","userSurnameValidator","userPassword","userPasswordValidator","myFormRegistrate","userEmail","pattern","userAge","userAgeValidator","userRepeatPassword","userRepeatPasswordValidator","control","currentUserName","value","minNumberOfCharacters","maxNumberOfCharacters","isValidUserName","isValidUserNameOrSurname","userNameInputControlName","currentUserSurname","isValidUserSurname","userSurnameInputControlName","currentUserAge","Boolean","isNaN","minAge","maxAge","isValidUserAgeYearsOld","userAgeInputControlName","currentUserPassword","isUserPasswordValidMatch","length","enteredUserPassword","userPasswordInputControlName","currentUserRepeatPassword","userRepeatPasswordInputControlName","newRegistrationUser","dash","firstLetterOfNameForId","newUserName","toUpperCase","firstLetterOfSurnameForId","newUserSurname","defaultNewUserId","String","newUserAge","Number","controls","newUserEmail","newUserPassword","newUserRepeatPassword","getRegistrationFormValue","pipe","subscribe","_registrationModeName","select","userList","_userList","complete","registrationModeAfterSwitch","navigate","loginUserName","loginUserSurname","loginUserPassword","defaultUserLoginId","userLogsIn","currentUser","find","user","loginEquals","initUser","markAsTouched","newUserRegistrationDate","Date","defaultNewUserDonationList","deafultNewUserCountry","defaultNewUserMedicalPoints","getNewUserId","defaultNewUser","_isUserRegistrated","initNewUser","deactivateQuestion","isAnyValuesEnteredInRegistrationForm","confirm","content","onlyLatinCharactersNumbersAndUnderscoreMatch","RegExp","test","userNameOrSurname","includes","minNumbers","maxNumbers","search","validMatch","isContentIncludeNumbers","isUserNameOrSurnameIncludeNumbers","isContentValidMatch","isUserNameOrSurnameValidMatch","isValidNumberOfContentCharacters","isValidUserNameOrSurnameNumberOfCharacters","isContentIncludeUnderscore","isUserNameOrSurnameIncludesUnderscore","login","switchRegistrationMode","registrate","selector","templateUrl","styleUrls","RegistrationModule","declarations","providers","bootstrap"],"mappings":"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","file":"registration-registration-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { CanComponentDeactivate } from '../../models/can-component-deactivate/can-component-deactivate-interface';\n\n@Injectable()\nexport class CanLeaveRegistrationGuard implements CanDeactivate<CanComponentDeactivate> {\n\tpublic canDeactivate(component: CanComponentDeactivate): boolean {\n\t\treturn component.canDeactivate ? component.canDeactivate() : true;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { RegistrationType } from '../../models/user-list/registration-type';\n\n@Injectable()\nexport class CanProceedToRegistrationGuard implements CanActivate {\n\tpublic canActivate(next: ActivatedRouteSnapshot): boolean {\n\t\tconst currentRegistrationMode: string = next.params.registrationMode;\n\t\tif (currentRegistrationMode !== RegistrationType.RM && currentRegistrationMode !== RegistrationType.LM) {\n\t\t\tconst errorMessage: string = `This mode (${currentRegistrationMode}) does not exist, try registration-mode or login-mode`;\n\t\t\tthrow new Error(errorMessage);\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","export enum RegistrationType {\r\n\tLM = 'login-mode',\r\n\tRM = 'registration-mode'\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { RegistrationComponent } from '../registration/registration.component';\r\nimport { CanLeaveRegistrationGuard } from '../guards/user-list/can-leave-registration.guard';\r\nimport { CanProceedToRegistrationGuard } from '../guards/user-list/can-proceed-to-registration.guard';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tpathMatch: 'full',\r\n\t\tredirectTo: 'mode/login-mode'\r\n\t},\r\n\t{\r\n\t\tpath: 'mode/:registrationMode',\r\n\t\tcomponent: RegistrationComponent,\r\n\t\tcanActivate: [CanProceedToRegistrationGuard],\r\n\t\tcanDeactivate: [CanLeaveRegistrationGuard]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class RegistrationRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from '../models/user-list/user';\nimport { Store } from '@ngrx/store';\nimport { selectUserList } from '../store/user-list/user-list.selectors';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Donation } from '../models/donation-list/donation';\nimport { Country } from '../models/country-list/country';\nimport { FacadeServiceUserList } from '../store/user-list/user-list.facade';\nimport { RegistrationFormInterface } from '../models/user-list/registration-form-interface';\nimport { RegistrationType } from '../models/user-list/registration-type';\n\n@Component({\n\tselector: 'app-registration',\n\ttemplateUrl: './registration.component.html',\n\tstyleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n\n\tpublic static enteredUserPassword: string;\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _registrationModeName: string;\n\tprivate _isUserRegistrated: boolean;\n\n\tprivate _userList: User[];\n\n\tpublic registrationMode: boolean;\n\n\tpublic myFormLogin: FormGroup;\n\tpublic myFormRegistrate: FormGroup;\n\n\tconstructor(\n\t\tprivate _store$: Store,\n\t\tprivate _router: Router,\n\t\tprivate _facadeUserListService: FacadeServiceUserList,\n\t\tprivate _activatedRoute: ActivatedRoute\n\t) {\n\t\tthis.initLoginForm();\n\t\tthis.initRegistrateForm();\n\t}\n\n\tpublic static validMatch(content: string): boolean {\n\t\tconst onlyLatinCharactersNumbersAndUnderscoreMatch: RegExp = new RegExp('^[a-zA-Z_0-9]*$');\n\t\treturn (onlyLatinCharactersNumbersAndUnderscoreMatch.test(content))\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isUserNameOrSurnameIncludesUnderscore(userNameOrSurname: string): boolean {\n\t\treturn Boolean(userNameOrSurname.includes('_'))\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isValidUserNameOrSurnameNumberOfCharacters(\n\t\tuserNameOrSurname: string,\n\t\tminNumbers: number,\n\t\tmaxNumbers: number\n\t): boolean {\n\t\treturn (\n\t\t\tuserNameOrSurname.length >= minNumbers\n\t\t\t&& userNameOrSurname.length <= maxNumbers\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isUserNameOrSurnameIncludeNumbers(userNameOrSurname: string): boolean {\n\t\treturn (Boolean(userNameOrSurname.search(/\\d/) >= 0))\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isUserNameOrSurnameValidMatch(userNameOrSurname: string): boolean {\n\t\treturn RegistrationComponent.validMatch(userNameOrSurname);\n\t}\n\n\tpublic static isValidUserNameOrSurname(\n\t\tuserNameOrSurname: string,\n\t\tminNumbers: number,\n\t\tmaxNumbers: number\n\t): boolean {\n\t\tif (Boolean(userNameOrSurname)) {\n\t\t\tconst isContentIncludeNumbers: boolean = RegistrationComponent.isUserNameOrSurnameIncludeNumbers(userNameOrSurname);\n\t\t\tconst isContentValidMatch: boolean = RegistrationComponent.isUserNameOrSurnameValidMatch(userNameOrSurname);\n\t\t\tconst isValidNumberOfContentCharacters: boolean = RegistrationComponent.isValidUserNameOrSurnameNumberOfCharacters(\n\t\t\t\tuserNameOrSurname,\n\t\t\t\tminNumbers,\n\t\t\t\tmaxNumbers\n\t\t\t);\n\t\t\tconst isContentIncludeUnderscore: boolean = RegistrationComponent.isUserNameOrSurnameIncludesUnderscore(userNameOrSurname);\n\t\t\tif (\n\t\t\t\t!isContentIncludeNumbers\n\t\t\t\t&& isContentValidMatch\n\t\t\t\t&& isValidNumberOfContentCharacters\n\t\t\t\t&& !isContentIncludeUnderscore\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic static isValidUserAgeYearsOld(\n\t\tuserAge: number,\n\t\tminAge: number,\n\t\tmaxAge: number\n\t): boolean {\n\t\treturn (\n\t\t\tuserAge >= minAge\n\t\t\t&& userAge <= maxAge\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isUserPasswordValidMatch(userPassword: string): boolean {\n\t\treturn RegistrationComponent.validMatch(userPassword);\n\t}\n\n\tprivate initLoginForm(): void {\n\t\tthis.myFormLogin = new FormGroup({\n\t\t\tuserName: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userNameValidator\n\t\t\t]),\n\t\t\tuserSurname: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userSurnameValidator\n\t\t\t]),\n\t\t\tuserPassword: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userPasswordValidator\n\t\t\t])\n\t\t});\n\t}\n\n\tprivate initRegistrateForm(): void {\n\t\tthis.myFormRegistrate = new FormGroup({\n\t\t\tuserName: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userNameValidator\n\t\t\t]),\n\t\t\tuserSurname: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userSurnameValidator\n\t\t\t]),\n\t\t\tuserEmail: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.pattern('^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$')\n\t\t\t]),\n\t\t\tuserAge: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userAgeValidator\n\t\t\t]),\n\t\t\tuserPassword: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userPasswordValidator\n\t\t\t]),\n\t\t\tuserRepeatPassword: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userRepeatPasswordValidator\n\t\t\t])\n\t\t});\n\t}\n\n\tprivate userNameValidator(control: FormControl): { [s: string]: boolean } {\n\t\tconst currentUserName: string = control.value;\n\n\t\tconst minNumberOfCharacters: number = 3;\n\t\tconst maxNumberOfCharacters: number = 12;\n\n\t\tconst isValidUserName: boolean = RegistrationComponent.isValidUserNameOrSurname(\n\t\t\tcurrentUserName,\n\t\t\tminNumberOfCharacters,\n\t\t\tmaxNumberOfCharacters\n\t\t);\n\t\tif (isValidUserName) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn { userNameInputControlName: true };\n\t\t}\n\t}\n\n\tprivate userSurnameValidator(control: FormControl): { [s: string]: boolean } {\n\t\tconst currentUserSurname: string = control.value;\n\n\t\tconst minNumberOfCharacters: number = 3;\n\t\tconst maxNumberOfCharacters: number = 20;\n\n\t\tconst isValidUserSurname: boolean = RegistrationComponent.isValidUserNameOrSurname(\n\t\t\tcurrentUserSurname,\n\t\t\tminNumberOfCharacters,\n\t\t\tmaxNumberOfCharacters\n\t\t);\n\t\tif (isValidUserSurname) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn { userSurnameInputControlName: true };\n\t\t}\n\t}\n\n\tprivate userAgeValidator(control: FormControl): { [s: string]: boolean } {\n\t\tconst currentUserAge: number = control.value;\n\n\t\tif (Boolean(currentUserAge) && !isNaN(currentUserAge)) {\n\t\t\tconst minAge: number = 12;\n\t\t\tconst maxAge: number = 150;\n\n\t\t\tconst isValidUserAgeYearsOld: boolean = RegistrationComponent.isValidUserAgeYearsOld(\n\t\t\t\tcurrentUserAge,\n\t\t\t\tminAge,\n\t\t\t\tmaxAge\n\t\t\t);\n\t\t\tif (isValidUserAgeYearsOld) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { userAgeInputControlName: true };\n\t\t\t}\n\t\t} else {\n\t\t\treturn { userAgeInputControlName: true };\n\t\t}\n\t}\n\n\tprivate userPasswordValidator(control: FormControl): { [s: string]: boolean } {\n\t\tconst currentUserPassword: string = control.value;\n\n\t\tconst minNumberOfCharacters: number = 6;\n\t\tconst maxNumberOfCharacters: number = 15;\n\n\t\tconst isUserPasswordValidMatch: boolean = RegistrationComponent.isUserPasswordValidMatch(currentUserPassword);\n\t\tif (Boolean(currentUserPassword)) {\n\t\t\tif (\n\t\t\t\tisUserPasswordValidMatch\n\t\t\t\t&& currentUserPassword.length >= minNumberOfCharacters\n\t\t\t\t&& currentUserPassword.length <= maxNumberOfCharacters\n\t\t\t) {\n\t\t\t\tRegistrationComponent.enteredUserPassword = currentUserPassword;\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { userPasswordInputControlName: true };\n\t\t\t}\n\t\t} else {\n\t\t\treturn { userPasswordInputControlName: true };\n\t\t}\n\t}\n\n\tprivate userRepeatPasswordValidator(control: FormControl): { [s: string]: boolean } {\n\t\tconst currentUserPassword: string = RegistrationComponent.enteredUserPassword;\n\t\tconst currentUserRepeatPassword: string = control.value;\n\n\t\tif (\n\t\t\tBoolean(currentUserPassword)\n\t\t\t&& currentUserRepeatPassword === currentUserPassword\n\t\t) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn { userRepeatPasswordInputControlName: true };\n\t\t}\n\t}\n\n\tprivate getNewUserId(newRegistrationUser: RegistrationFormInterface): string {\n\t\tconst dash: string = '-';\n\t\tconst firstLetterOfNameForId: string = newRegistrationUser.newUserName[0].toUpperCase();\n\t\tconst firstLetterOfSurnameForId: string = newRegistrationUser.newUserSurname[0].toUpperCase();\n\t\tconst defaultNewUserId: string = firstLetterOfNameForId + firstLetterOfSurnameForId + dash\n\t\t\t+ String(newRegistrationUser.newUserAge);\n\t\treturn defaultNewUserId;\n\t}\n\n\tprivate getRegistrationFormValue(): RegistrationFormInterface {\n\t\tconst userAge: number = Number(this.myFormRegistrate.controls.userAge.value);\n\t\tconst userName: string = this.myFormRegistrate.controls.userName.value;\n\t\tconst userSurname: string = this.myFormRegistrate.controls.userSurname.value;\n\t\tconst userPassword: string = this.myFormRegistrate.controls.userPassword.value;\n\t\tconst userRepeatPassword: string = this.myFormRegistrate.controls.userRepeatPassword.value;\n\t\tconst userEmail: string = this.myFormRegistrate.controls.userEmail.value;\n\t\treturn {\n\t\t\tnewUserName: userName,\n\t\t\tnewUserSurname: userSurname,\n\t\t\tnewUserEmail: userEmail,\n\t\t\tnewUserAge: userAge,\n\t\t\tnewUserPassword: userPassword,\n\t\t\tnewUserRepeatPassword: userRepeatPassword\n\t\t};\n\t}\n\n\tprivate isAnyValuesEnteredInRegistrationForm(): boolean {\n\t\tconst newRegistrationUser: RegistrationFormInterface = this.getRegistrationFormValue();\n\t\tif (\n\t\t\tBoolean(newRegistrationUser.newUserAge)\n\t\t\t|| Boolean(newRegistrationUser.newUserName)\n\t\t\t|| Boolean(newRegistrationUser.newUserSurname)\n\t\t\t|| Boolean(newRegistrationUser.newUserPassword)\n\t\t\t|| Boolean(newRegistrationUser.newUserEmail)\n\t\t) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis._activatedRoute.params\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((params: Params) => {\n\t\t\t\tthis._registrationModeName = params.registrationMode;\n\t\t\t\tif (this._registrationModeName === RegistrationType.RM) {\n\t\t\t\t\tthis.registrationMode = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis._store$.select(selectUserList)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((userList: User[]) => {\n\t\t\t\tthis._userList = userList;\n\t\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic switchRegistrationMode(): void {\n\t\tconst registrationModeAfterSwitch: string = (this._registrationModeName === RegistrationType.LM)\n\t\t\t? RegistrationType.RM\n\t\t\t: RegistrationType.LM;\n\t\tthis._router.navigate([\n\t\t\t'/registration',\n\t\t\t'mode',\n\t\t\tregistrationModeAfterSwitch\n\t\t]);\n\t\tthis.registrationMode = !this.registrationMode;\n\t}\n\n\tpublic login(): void {\n\t\tconst loginUserName: string = this.myFormLogin.controls.userName.value;\n\t\tconst loginUserSurname: string = this.myFormLogin.controls.userSurname.value;\n\t\tconst loginUserPassword: string = this.myFormLogin.controls.userPassword.value;\n\t\tconst defaultUserLoginId: string = '1';\n\n\t\tconst userLogsIn: User = new User(\n\t\t\tdefaultUserLoginId,\n\t\t\tloginUserName,\n\t\t\tloginUserSurname,\n\t\t\tloginUserPassword\n\t\t);\n\t\tconst currentUser: User = this._userList.find((user: User) => {\n\t\t\treturn userLogsIn.loginEquals(user);\n\t\t});\n\n\t\tif (Boolean(currentUser)) {\n\t\t\tthis._facadeUserListService.initUser(currentUser);\n\t\t\tthis._router.navigate(['/user-profile']);\n\t\t} else {\n\t\t\tthis.initLoginForm();\n\t\t\tthis.myFormLogin.controls.userName.markAsTouched();\n\t\t\tthis.myFormLogin.controls.userSurname.markAsTouched();\n\t\t\tthis.myFormLogin.controls.userPassword.markAsTouched();\n\t\t}\n\t}\n\n\tpublic registrate(): void {\n\t\tconst newRegistrationUser: RegistrationFormInterface = this.getRegistrationFormValue();\n\n\t\tconst newUserRegistrationDate: Date = new Date();\n\t\tconst defaultNewUserDonationList: Donation[] = null;\n\t\tconst deafultNewUserCountry: Country = null;\n\t\tconst defaultNewUserMedicalPoints: number = 0;\n\t\tconst defaultNewUserId: string = this.getNewUserId(newRegistrationUser);\n\n\t\tconst defaultNewUser: User = new User(\n\t\t\tdefaultNewUserId,\n\t\t\tnewRegistrationUser.newUserName,\n\t\t\tnewRegistrationUser.newUserSurname,\n\t\t\tnewRegistrationUser.newUserPassword,\n\t\t\tnewRegistrationUser.newUserEmail,\n\t\t\t'',\n\t\t\tnewRegistrationUser.newUserAge,\n\t\t\tnewUserRegistrationDate,\n\t\t\tdeafultNewUserCountry,\n\t\t\tdefaultNewUserDonationList,\n\t\t\tdefaultNewUserMedicalPoints\n\t\t);\n\n\t\tthis._isUserRegistrated = true;\n\n\t\tthis._facadeUserListService.initNewUser(defaultNewUser);\n\n\t\tthis.initRegistrateForm();\n\t}\n\n\tpublic canDeactivate(): boolean {\n\t\tlet deactivateQuestion: string;\n\t\tdeactivateQuestion = 'You filled in the form fields but did not registrate. Are you sure that you want to go from this page?';\n\t\treturn (!this._isUserRegistrated && this.isAnyValuesEnteredInRegistrationForm())\n\t\t\t? confirm(deactivateQuestion)\n\t\t\t: true;\n\t}\n}\n","<div class=\"-app-registration\">\n    <div \n        class=\"-app-registration-form__top-decoration\"\n        [class.-app-registration-form__top-decoration_registration-mode]=\"registrationMode\">\n    </div>\n    <form\n        class=\"-app-registration-form\"\n        [class.-app-registration-form_not-login-mode]=\"registrationMode\"\n        [formGroup]=\"myFormLogin\"\n        (ngSubmit)=\"login()\">  \n    <h2 class=\"-app-registration-form__title\">\n        Login\n    </h2>\n    <div class=\"-app-registration-form__item\">\n        <input \n            class=\"-app-registration-form__item-input\"\n            name=\"name\"\n            type=\"text\"\n            formControlName=\"userName\"\n            autocomplete=\"off\">\n        <span \n            class=\"-app-registration-form__item-line\"\n            [class.-app-registration-form__item-line_valid]=\"myFormLogin.controls['userName'].touched\n                && myFormLogin.controls['userName'].valid\">\n        </span>\n        <label \n            class=\"-app-registration-form__item-label\"\n            [class.-app-registration-form__item-label_invisible]=\"myFormLogin.controls['userName'].dirty\">\n            Name\n        </label>\n        <span \n            class=\"-app-registration-form__item-warning\"\n            [class.-app-registration-form__item-warning_login]=\"!registrationMode\"\n            [class.-app-registration-form__item-warning_invalid]=\"myFormLogin.controls['userName'].touched\n                && myFormLogin.controls['userName'].invalid\"\n            title=\"Invalid value. Maximum number of characters from 3 to 12\n            and without any characters and numbers\">\n        </span>\n        <span \n            class=\"-app-registration-form__item-check\"\n            [class.-app-registration-form__item-check_login]=\"!registrationMode\"\n            [class.-app-registration-form__item-check_valid]=\"myFormLogin.controls['userName'].touched\n                && myFormLogin.controls['userName'].valid\">\n        </span>\n    </div>\n    <div class=\"-app-registration-form__item\">\n        <input \n            class=\"-app-registration-form__item-input\"\n            name=\"surname\"\n            type=\"text\"\n            formControlName=\"userSurname\"\n            autocomplete=\"off\">\n        <span \n            class=\"-app-registration-form__item-line\"\n            [class.-app-registration-form__item-line_valid]=\"myFormLogin.controls['userSurname'].touched\n                && myFormLogin.controls['userName'].valid\">\n        </span>\n        <label \n            class=\"-app-registration-form__item-label\"\n            [class.-app-registration-form__item-label_invisible]=\"myFormLogin.controls['userSurname'].dirty\">\n            Surname\n        </label>\n        <span \n            class=\"-app-registration-form__item-warning\"\n            [class.-app-registration-form__item-warning_login]=\"!registrationMode\"\n            [class.-app-registration-form__item-warning_invalid]=\"myFormLogin.controls['userSurname'].touched\n                && myFormLogin.controls['userSurname'].invalid\"\n            title=\"Invalid value. Maximum number of characters from 3 to 20\n                and without any characters and numbers\">\n        </span>\n        <span \n            class=\"-app-registration-form__item-check\"\n            [class.-app-registration-form__item-check_login]=\"!registrationMode\"\n            [class.-app-registration-form__item-check_valid]=\"myFormLogin.controls['userSurname'].touched\n                && myFormLogin.controls['userSurname'].valid\">\n        </span>\n    </div>\n    <div class=\"-app-registration-form__item\">\n        <input \n            class=\"-app-registration-form__item-input\"\n            name=\"password\"\n            type=\"password\"\n            formControlName=\"userPassword\"\n            autocomplete=\"off\">\n        <span \n            class=\"-app-registration-form__item-line\"\n            [class.-app-registration-form__item-line_valid]=\"myFormLogin.controls['userPassword'].touched\n                && myFormLogin.controls['userPassword'].valid\">\n        </span>\n        <label \n            class=\"-app-registration-form__item-label\"\n            [class.-app-registration-form__item-label_invisible]=\"myFormLogin.controls['userPassword'].dirty\">\n            Password\n        </label>\n        <span \n            class=\"-app-registration-form__item-warning\"\n            [class.-app-registration-form__item-warning_login]=\"!registrationMode\"\n            [class.-app-registration-form__item-warning_invalid]=\"myFormLogin.controls['userPassword'].touched\n                && myFormLogin.controls['userPassword'].invalid\"\n            title=\"Invalid value. User password must contain only numbers, characters and underscore\n                and password length must be in diapazon from 6 to 15 symbols\">\n        </span>\n        <span \n            class=\"-app-registration-form__item-check\"\n            [class.-app-registration-form__item-check_login]=\"!registrationMode\"\n            [class.-app-registration-form__item-check_valid]=\"myFormLogin.controls['userPassword'].touched\n                && myFormLogin.controls['userPassword'].valid\">\n        </span>\n    </div>  \n    <button \n        class=\"-app-registration-form__button -app-registration-form__button_login\"\n        type=\"submit\"\n        [disabled]=\"myFormLogin.controls['userName'].invalid \n            || myFormLogin.controls['userSurname'].invalid\n            || myFormLogin.controls['userPassword'].invalid\">\n        Go\n    </button>\n    <h4     \n        class=\"-app-registration-form__sub-title\"\n        (click)=\"switchRegistrationMode()\">\n        Are you not registrated?\n    </h4>\n    </form>\n    <div\n        class=\"-app-registration-form__shape-button\"\n        [class.-app-registration-form__shape-button_registration-mode]=\"registrationMode\">\n        <button\n            class=\"-app-registration-form__plus\"\n            [class.-app-registration-form__plus_registration-mode]=\"registrationMode\"\n            (click)=\"switchRegistrationMode()\">\n        </button>\n        <form \n            class=\"-app-registration-form\"\n            [class.-app-registration-form_registrate]=\"!registrationMode\"\n            [class.-app-registration-form_registration-mode]=\"registrationMode\"\n            [formGroup]=\"myFormRegistrate\"\n            (ngSubmit)=\"registrate()\">\n            <h2 class=\"-app-registration-form__title\">\n                Registrate\n            </h2>\n            <div class=\"-app-registration-form__item\">\n                <input \n                    class=\"-app-registration-form__item-input\"\n                    name=\"name\"\n                    type=\"text\"\n                    formControlName=\"userName\"\n                    autocomplete=\"off\">\n                <span \n                    class=\"-app-registration-form__item-line\"\n                    [class.-app-registration-form__item-line_valid]=\"myFormRegistrate.controls['userName'].touched\n                        && myFormRegistrate.controls['userName'].valid\">\n                </span>\n                <label \n                    class=\"-app-registration-form__item-label\"\n                    [class.-app-registration-form__item-label_registration-mode]=\"registrationMode\"\n                    [class.-app-registration-form__item-label_invisible]=\"myFormRegistrate.controls['userName'].dirty\">\n                    Name\n                </label>\n                <span \n                    class=\"-app-registration-form__item-warning\" \n                    [class.-app-registration-form__item-warning_invalid]=\"myFormRegistrate.controls['userName'].touched\n                        && myFormRegistrate.controls['userName'].invalid\"\n                    title=\"Invalid value. Maximum number of characters from 3 to 12\n                        and without any characters and numbers\">\n                </span>\n                <span \n                    class=\"-app-registration-form__item-check\" \n                    [class.-app-registration-form__item-check_valid]=\"myFormRegistrate.controls['userName'].touched\n                        && myFormRegistrate.controls['userName'].valid\">\n                </span>\n            </div>\n            <div class=\"-app-registration-form__item\">\n                <input \n                    class=\"-app-registration-form__item-input\"\n                    name=\"surname\"\n                    type=\"text\"\n                    formControlName=\"userSurname\"\n                    autocomplete=\"off\">\n                <span \n                    class=\"-app-registration-form__item-line\"\n                    [class.-app-registration-form__item-line_valid]=\"myFormRegistrate.controls['userSurname'].touched\n                        && myFormRegistrate.controls['userSurname'].valid\">\n                </span>\n                <label \n                    class=\"-app-registration-form__item-label\"\n                    [class.-app-registration-form__item-label_registration-mode]=\"registrationMode\"\n                    [class.-app-registration-form__item-label_invisible]=\"myFormRegistrate.controls['userSurname'].dirty\">\n                    Surname\n                </label>\n                <span \n                    class=\"-app-registration-form__item-warning\" \n                    [class.-app-registration-form__item-warning_invalid]=\"myFormRegistrate.controls['userSurname'].touched\n                        && myFormRegistrate.controls['userSurname'].invalid\"\n                    title=\"Invalid value. Maximum number of characters from 3 to 20\n                        and without any characters and numbers\">\n                </span>\n                <span \n                    class=\"-app-registration-form__item-check\" \n                    [class.-app-registration-form__item-check_valid]=\"myFormRegistrate.controls['userSurname'].touched\n                        && myFormRegistrate.controls['userSurname'].valid\">\n                </span>\n            </div>\n            <div class=\"-app-registration-form__item\">\n                <input \n                    class=\"-app-registration-form__item-input\"\n                    name=\"email\"\n                    type=\"email\"\n                    formControlName=\"userEmail\">\n                <span \n                    class=\"-app-registration-form__item-line\"\n                    [class.-app-registration-form__item-line_valid]=\"myFormRegistrate.controls['userEmail'].touched\n                        && myFormRegistrate.controls['userEmail'].valid\">\n                </span>\n                <label \n                    class=\"-app-registration-form__item-label\"\n                    [class.-app-registration-form__item-label_registration-mode]=\"registrationMode\"\n                    [class.-app-registration-form__item-label_invisible]=\"myFormRegistrate.controls['userEmail'].dirty\">\n                    Email\n                </label>\n                <span \n                    class=\"-app-registration-form__item-warning\" \n                    [class.-app-registration-form__item-warning_invalid]=\"myFormRegistrate.controls['userEmail'].touched\n                        && myFormRegistrate.controls['userEmail'].invalid\"\n                    title=\"Invalid value. Example: egor@g.c\">\n                </span>\n                <span \n                    class=\"-app-registration-form__item-check\" \n                    [class.-app-registration-form__item-check_valid]=\"myFormRegistrate.controls['userEmail'].touched\n                        && myFormRegistrate.controls['userEmail'].valid\">\n                </span>\n            </div>\n            <div class=\"-app-registration-form__item\">\n                <input \n                    class=\"-app-registration-form__item-input\"\n                    name=\"age\"\n                    type=\"text\"\n                    formControlName=\"userAge\"\n                    autocomplete=\"off\">\n                <span \n                    class=\"-app-registration-form__item-line\"\n                    [class.-app-registration-form__item-line_valid]=\"myFormRegistrate.controls['userAge'].touched\n                        && myFormRegistrate.controls['userAge'].valid\">\n                </span>\n                <label \n                    class=\"-app-registration-form__item-label\"\n                    [class.-app-registration-form__item-label_registration-mode]=\"registrationMode\"\n                    [class.-app-registration-form__item-label_invisible]=\"myFormRegistrate.controls['userAge'].dirty\">\n                    Age\n                </label>\n                <span \n                    class=\"-app-registration-form__item-warning\" \n                    [class.-app-registration-form__item-warning_invalid]=\"myFormRegistrate.controls['userAge'].touched\n                        && myFormRegistrate.controls['userAge'].invalid\"\n                    title=\"Invalid value. User age must not be more than 150 and less than 12 years old\">\n                </span>\n                <span \n                    class=\"-app-registration-form__item-check\" \n                    [class.-app-registration-form__item-check_valid]=\"myFormRegistrate.controls['userAge'].touched\n                        && myFormRegistrate.controls['userAge'].valid\">\n                </span>\n            </div>\n            <div class=\"-app-registration-form__item\">\n                <input \n                    class=\"-app-registration-form__item-input\"\n                    name=\"password\"\n                    type=\"password\"\n                    formControlName=\"userPassword\"\n                    autocomplete=\"off\">\n                <span \n                    class=\"-app-registration-form__item-line\"\n                    [class.-app-registration-form__item-line_valid]=\"myFormRegistrate.controls['userPassword'].touched\n                        && myFormRegistrate.controls['userPassword'].valid\">\n                </span>\n                <label \n                    class=\"-app-registration-form__item-label\"\n                    [class.-app-registration-form__item-label_registration-mode]=\"registrationMode\"\n                    [class.-app-registration-form__item-label_invisible]=\"myFormRegistrate.controls['userPassword'].dirty\">\n                    Password\n                </label>\n                <span \n                    class=\"-app-registration-form__item-warning\" \n                    [class.-app-registration-form__item-warning_invalid]=\"myFormRegistrate.controls['userPassword'].touched\n                        && myFormRegistrate.controls['userPassword'].invalid\"\n                    title=\"Invalid value. User password must contain only numbers, characters and underscore\n                        and password length must be in diapazon from 6 to 15 symbols\">\n                </span>\n                <span \n                    class=\"-app-registration-form__item-check\" \n                    [class.-app-registration-form__item-check_valid]=\"myFormRegistrate.controls['userPassword'].touched\n                        && myFormRegistrate.controls['userPassword'].valid\">\n                </span>\n            </div> \n            <div class=\"-app-registration-form__item\">\n                <input \n                    class=\"-app-registration-form__item-input\"\n                    name=\"repeatPassword\"\n                    type=\"password\"\n                    formControlName=\"userRepeatPassword\"\n                    autocomplete=\"off\">\n                <span \n                    class=\"-app-registration-form__item-line\"\n                    [class.-app-registration-form__item-line_valid]=\"myFormRegistrate.controls['userRepeatPassword'].touched\n                        && myFormRegistrate.controls['userRepeatPassword'].valid\">\n                </span>\n                <label\n                    class=\"-app-registration-form__item-label\"\n                    [class.-app-registration-form__item-label_registration-mode]=\"registrationMode\"\n                    [class.-app-registration-form__item-label_invisible]=\"myFormRegistrate.controls['userRepeatPassword'].dirty\">\n                    Repeat Password\n                </label>\n                <span \n                    class=\"-app-registration-form__item-warning\" \n                    [class.-app-registration-form__item-warning_invalid]=\"myFormRegistrate.controls['userRepeatPassword'].touched\n                        && myFormRegistrate.controls['userRepeatPassword'].invalid\"\n                    title=\"Invalid value. you should enter the same password\">\n                </span>\n                <span \n                    class=\"-app-registration-form__item-check\" \n                    [class.-app-registration-form__item-check_valid]=\"myFormRegistrate.controls['userRepeatPassword'].touched\n                        && myFormRegistrate.controls['userRepeatPassword'].valid\">\n                </span>\n            </div> \n            <button \n                class=\"-app-registration-form__button -app-registration-form__button_registrate\"\n                type=\"submit\"\n                (click)=\"switchRegistrationMode()\"\n                [disabled]=\"myFormRegistrate.controls['userName'].invalid \n                    || myFormRegistrate.controls['userSurname'].invalid\n                    || myFormRegistrate.controls['userEmail'].invalid\n                    || myFormRegistrate.controls['userAge'].invalid\n                    || myFormRegistrate.controls['userPassword'].invalid\n                    || myFormRegistrate.controls['userRepeatPassword'].invalid\">\n                Next\n            </button>\n        </form>\n    </div>\n</div>\n\n\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RegistrationComponent } from '../registration/registration.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RegistrationRoutingModule } from './registration-routing.module';\r\nimport { CanLeaveRegistrationGuard } from '../guards/user-list/can-leave-registration.guard';\r\nimport { CanProceedToRegistrationGuard } from '../guards/user-list/can-proceed-to-registration.guard';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tRegistrationComponent\r\n\t],\r\n\timports: [\r\n\t\tRegistrationRoutingModule,\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t],\r\n\tproviders: [\r\n\t\tCanProceedToRegistrationGuard,\r\n\t\tCanLeaveRegistrationGuard\r\n\t],\r\n\tbootstrap: [RegistrationComponent]\r\n})\r\nexport class RegistrationModule {\r\n\r\n}\r\n"]}