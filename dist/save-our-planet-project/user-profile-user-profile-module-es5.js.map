{"version":3,"sources":["webpack:///src/app/guards/user-list/can-leave-user-profile.guard.ts","webpack:///src/app/guards/user-list/can-proceed-to-user-profile.guard.ts","webpack:///src/app/user-profile-donation/user-profile-donation.component.ts","webpack:///src/app/user-profile-donation/user-profile-donation.component.html","webpack:///src/app/user-profile/user-profile-routing.module.ts","webpack:///src/app/user-profile/user-profile.component.ts","webpack:///src/app/user-profile/user-profile.component.html","webpack:///src/app/user-profile/user-profile.module.ts"],"names":["CanLeaveUserProfileGuard","component","canDeactivate","CanProceedToUserProfileGuard","_store$","_router","currentUser","select","subscribe","user","unsubscribe","navigate","UserProfileDonationComponent","selector","templateUrl","styleUrls","routes","path","canActivate","UserProfileRoutingModule","forChild","imports","exports","UserProfileComponent","_facadeUserListService","_facadeDonationListService","_destroySubject$","initImageForm","initApplyInsuranceForm","myFormNewImage","userNewImage","required","myFormApplyInsurance","userMedicalPoints","medicalPointsValidator","userMessage","control","medicalPointsInputControlName","isNaN","value","Number","currentUserMedicalPoints","Boolean","controls","pipe","clone","medicalPoints","initUserDonationList","id","userDonationList","initUserDonationListSuccess","isInitedUserDonationList","next","complete","imageMode","newImage","changeCurrentUserImage","toggleImageMode","medicalFormMode","_isGettedMedicalInsurance","invalid","markAsTouched","numberOfGetMedicalPoints","pickUpPointsFromUser","toggleFillMedicalForm","deactivateQuestion","isAnyValuesEnteredInMedicalInsuranceForm","confirm","UserProfileModule","declarations","providers","bootstrap"],"mappings":"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","file":"user-profile-user-profile-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { CanComponentDeactivate } from '../../models/can-component-deactivate/can-component-deactivate-interface';\n\n@Injectable()\nexport class CanLeaveUserProfileGuard implements CanDeactivate<CanComponentDeactivate> {\n\tpublic canDeactivate(component: CanComponentDeactivate): boolean {\n\t\treturn component.canDeactivate ? component.canDeactivate() : true;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { selectUser } from '../../store/user-list/user-list.selectors';\nimport { Store } from '@ngrx/store';\nimport { User } from '../../models/user-list/user';\n\n@Injectable()\nexport class CanProceedToUserProfileGuard implements CanActivate {\n\n\tconstructor(\n\t\tprivate _store$: Store,\n\t\tprivate _router: Router\n\t) {\n\n\t}\n\n\tpublic canActivate(): boolean {\n\t\tlet currentUser: User;\n\t\tthis._store$.select(selectUser)\n\t\t\t.subscribe((user: User) => {\n\t\t\t\tcurrentUser = user;\n\t\t\t}).unsubscribe();\n\t\tif (currentUser) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis._router.navigate(['/registration', 'mode', 'login-mode']);\n\t\t\treturn false;\n\t\t}\n\t}\n}\n","import { Component, Input } from '@angular/core';\nimport { Donation } from '../models/donation-list/donation';\n\n@Component({\n\tselector: 'app-user-profile-donation',\n\ttemplateUrl: './user-profile-donation.component.html',\n\tstyleUrls: ['./user-profile-donation.component.scss']\n})\nexport class UserProfileDonationComponent {\n\n\t@Input()\n\tpublic donation: Donation;\n\n\t// tslint:disable-next-line: no-empty\n\tconstructor() { }\n\n}\n","<div class=\"-app-user-profile-donation\">\n    <div class=\"-app-user-profile-donation__item\">\n        <div class=\"-app-user-profile-donation__item-title\">\n            tree name:            \n        </div>\n        <div class=\"-app-user-profile-donation__item-info\">\n            {{donation.treeDonation.tree.name}}\n        </div>\n    </div>\n    <div class=\"-app-user-profile-donation__item\">\n        <div class=\"-app-user-profile-donation__item-title\">\n            tree type:            \n        </div>\n        <div class=\"-app-user-profile-donation__item-info\">\n            {{donation.treeDonation.tree.type}}\n        </div>\n    </div>\n    <div class=\"-app-user-profile-donation__item\">\n        <div class=\"-app-user-profile-donation__item-title\">\n            tree number:            \n        </div>\n        <div class=\"-app-user-profile-donation__item-info\">\n            {{donation.treeDonation.amount}}\n        </div>\n    </div>\n    <div class=\"-app-user-profile-donation__item\">\n        <div class=\"-app-user-profile-donation__item-title\">\n            cost:            \n        </div>\n        <div class=\"-app-user-profile-donation__item-info\">\n            {{donation.treeDonation.amount}}\n        </div>\n    </div>\n    <div class=\"-app-user-profile-donation__item\">\n        <div class=\"-app-user-profile-donation__item-title\">\n            date:            \n        </div>\n        <div class=\"-app-user-profile-donation__item-info\">\n            {{donation.date | date}}\n        </div>\n    </div>\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { UserProfileComponent } from './user-profile.component';\r\nimport { CanProceedToUserProfileGuard } from '../guards/user-list/can-proceed-to-user-profile.guard';\r\nimport { CanLeaveUserProfileGuard } from '../guards/user-list/can-leave-user-profile.guard';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: UserProfileComponent,\r\n\t\tcanActivate: [CanProceedToUserProfileGuard],\r\n\t\tcanDeactivate: [CanLeaveUserProfileGuard]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class UserProfileRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectUser } from '../store/user-list/user-list.selectors';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { User } from '../models/user-list/user';\nimport { Router } from '@angular/router';\nimport { FacadeServiceUserList } from '../store/user-list/user-list.facade';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Donation } from '../models/donation-list/donation';\nimport { selectUserDonationList, selectIsInitedUserDonationList } from '../store/donation-list/donation-list.selectors';\nimport { FacadeServiceDonationList } from '../store/donation-list/donation-list.facade';\n\n@Component({\n\tselector: 'app-user-profile',\n\ttemplateUrl: './user-profile.component.html',\n\tstyleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n\n\tpublic static currentUserMedicalPoints: number;\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _isGettedMedicalInsurance: boolean;\n\n\tpublic user: User;\n\n\tpublic userDonationList: Donation[];\n\tpublic isInitedUserDonationList: boolean;\n\n\tpublic myFormNewImage: FormGroup;\n\tpublic imageMode: boolean;\n\n\tpublic myFormApplyInsurance: FormGroup;\n\tpublic medicalFormMode: boolean;\n\n\tconstructor(\n\t\tprivate _store$: Store,\n\t\tprivate _router: Router,\n\t\tprivate _facadeUserListService: FacadeServiceUserList,\n\t\tprivate _facadeDonationListService: FacadeServiceDonationList\n\t) {\n\t\tthis.initImageForm();\n\t\tthis.initApplyInsuranceForm();\n\t}\n\n\tprivate initImageForm(): void {\n\t\tthis.myFormNewImage = new FormGroup({\n\t\t\tuserNewImage: new FormControl('', Validators.required)\n\t\t});\n\t}\n\n\tprivate initApplyInsuranceForm(): void {\n\t\tthis.myFormApplyInsurance = new FormGroup({\n\t\t\tuserMedicalPoints: new FormControl('', [Validators.required, this.medicalPointsValidator]),\n\t\t\tuserMessage: new FormControl('', Validators.required)\n\t\t});\n\t}\n\n\tprivate medicalPointsValidator(control: FormControl): { [s: string]: boolean } {\n\t\tconst medicalPointsInputControlName: string = 'userMedicalPoints';\n\t\tif (!isNaN(control.value) && control.value > 0 && Number(control.value) <= UserProfileComponent.currentUserMedicalPoints) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn { medicalPointsInputControlName: true };\n\t\t}\n\n\t}\n\n\tprivate isAnyValuesEnteredInMedicalInsuranceForm(): boolean {\n\t\tif (\n\t\t\tBoolean(this.myFormApplyInsurance.controls.userMedicalPoints.value)\n\t\t\t|| Boolean(this.myFormApplyInsurance.controls.userMessage.value)\n\t\t) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis._store$.select(selectUser)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((user: User) => {\n\t\t\t\tif (Boolean(user)) {\n\t\t\t\t\tUserProfileComponent.currentUserMedicalPoints = user.clone().medicalPoints;\n\t\t\t\t\tthis.user = user;\n\t\t\t\t\tthis._facadeDonationListService.initUserDonationList(this.user.id);\n\t\t\t\t}\n\t\t\t});\n\t\tthis._store$.select(selectUserDonationList)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((userDonationList: Donation[]) => {\n\t\t\t\tthis.userDonationList = userDonationList;\n\t\t\t\tthis._facadeDonationListService.initUserDonationListSuccess();\n\t\t\t});\n\t\tthis._store$.select(selectIsInitedUserDonationList)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((isInitedUserDonationList: boolean) => {\n\t\t\t\tthis.isInitedUserDonationList = isInitedUserDonationList;\n\t\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic toggleImageMode(): void {\n\t\tthis.imageMode = !this.imageMode;\n\t}\n\n\tpublic changeImage(): void {\n\t\tconst newImage: string = this.myFormNewImage.controls.userNewImage.value;\n\t\tthis._facadeUserListService.changeCurrentUserImage(newImage);\n\t\tthis.toggleImageMode();\n\t}\n\n\tpublic startDonation(): void {\n\t\tthis._router.navigate(['/donation']);\n\t}\n\n\tpublic toggleFillMedicalForm(): void {\n\t\tthis.medicalFormMode = !this.medicalFormMode;\n\t}\n\n\tpublic applyInsurance(): void {\n\t\tthis._isGettedMedicalInsurance = true;\n\n\t\tif (this.myFormApplyInsurance.invalid) {\n\t\t\tthis.myFormApplyInsurance.controls.userMedicalPoints.markAsTouched();\n\t\t\tthis.myFormApplyInsurance.controls.userMessage.markAsTouched();\n\t\t\treturn;\n\t\t}\n\t\tconst numberOfGetMedicalPoints: number = Number(this.myFormApplyInsurance.controls.userMedicalPoints.value);\n\t\tthis._facadeUserListService.pickUpPointsFromUser(this.user.id, numberOfGetMedicalPoints);\n\t\tif (this.medicalFormMode) {\n\t\t\tthis.toggleFillMedicalForm();\n\t\t}\n\t\tthis.initApplyInsuranceForm();\n\t}\n\n\tpublic canDeactivate(): boolean {\n\t\tconst deactivateQuestion: string = 'You filled in the form fields but did not get insurance. Are you sure that you want to go from this page?';\n\t\treturn (!this._isGettedMedicalInsurance && this.isAnyValuesEnteredInMedicalInsuranceForm())\n\t\t\t? confirm(deactivateQuestion)\n\t\t\t: true;\n\t}\n\n}\n","<div \n    *ngIf=\"!user\"\n    class=\"-app-user-profile\">\n</div>\n<div  *ngIf=\"user\"\n    class=\"-app-user-profile\">\n    <div \n        class=\"-app-user-profile__image-container\"\n        (click)=\"toggleImageMode()\">\n        <div *ngTemplateOutlet=\"user.profileImage ? profileImage : defaultProfileImage\"></div>\n        <ng-template #profileImage>\n            <img class=\"-app-user-profile__image\" src=\"{{ user.profileImage }}\">\n        </ng-template>\n        <ng-template #defaultProfileImage>\n            <div class=\"-app-user-profile__image -app-user-profile__image_default\">\n                no image\n            </div>\n        </ng-template>\n    </div>\n    <div \n        class=\"-app-user-profile__donation-list\"\n        [class.-app-user-profile__donation-list_image-mode]=\"imageMode\">\n        <h2 class=\"-app-user-profile__donation-list-title\">\n            donations\n        </h2>\n        <div\n            class=\"-app-user-profile__donation-list-wrapper\"\n            *ngIf=\"isInitedUserDonationList\">\n            <app-user-profile-donation\n            class=\"-app-user-profile__current-donation\"\n            *ngFor=\"let donation of userDonationList\"\n            [donation]=\"donation\">\n            </app-user-profile-donation>\n        </div>\n        <div \n            class=\"-app-user-profile__start-donation\"\n            *ngIf=\"!isInitedUserDonationList\"\n            [class.-app-user-profile__start-donation_image-mode]=\"imageMode\">\n            <h3 class=\"-app-user-profile__start-donation-title\">           \n                you have not donated ever\n            </h3>\n            <h3 class=\"-app-user-profile__start-donation-sub-title\">\n                start your donation history by clicking on the button below\n            </h3>\n            <button \n                class=\"-app-user-profile__start-donation-button\"\n                (click)=\"startDonation()\">\n                start\n            </button>\n        </div>\n    </div>\n    <div class=\"-app-user-profile__info-list-wrapper\">\n        <div \n            class=\"-app-user-profile__info-list\"\n            [class.-app-user-profile__info-list_medical-mode]=\"medicalFormMode\">\n            <div class=\"-app-user-profile__info-item\">\n                {{ user.name }}\n            </div>\n            <div class=\"-app-user-profile__info-item\">\n                {{ user.surName }}\n            </div>\n            <div class=\"-app-user-profile__info-item\">\n                {{ user.email }}\n            </div>\n            <div class=\"-app-user-profile__info-item\">\n                Age: {{ user.age }}\n            </div>\n            <div class=\"-app-user-profile__info-item\">\n                Join our project: {{ user.date | date }}\n            </div>\n            <div \n                class=\"-app-user-profile__info-item\"\n                *ngIf=\"user.country\">\n                Country: {{ user.country.name }}\n            </div>\n            <div \n                class=\"-app-user-profile__info-item\"\n                title=\"1 medical point = 1 donation $\">\n                Medical Points: {{ user.medicalPoints }}\n            </div>\n            <button\n                class=\"-app-user-profile__info-list-button\"\n                title=\"get medical insurance\"\n                [disabled]=\"!user.medicalPoints\"\n                (click)=\"toggleFillMedicalForm()\">\n            </button>\n        </div>\n        <form \n            class=\"-app-user-profile__info-list-form -app-user-profile__info-list-form_medical\"\n            [class.-app-user-profile__info-list-form_medical-mode]=\"medicalFormMode\"\n            [formGroup]=\"myFormApplyInsurance\"\n            (ngSubmit)=\"applyInsurance()\">\n            <button \n                class=\"-app-user-profile__info-list-form-back\"\n                (click)=\"toggleFillMedicalForm()\">\n            </button>\n            <h2 class=\"-app-user-profile__info-list-form-title\">medical insurance</h2>\n            <div class=\"-app-user-profile__info-list-form-item\">\n                <input \n                    class=\"-app-user-profile__info-list-form-item-input -app-user-profile__info-list-form-item-input_name\"\n                    name=\"medicalPoints\"\n                    type=\"text\"\n                    formControlName=\"userMedicalPoints\"\n                    autocomplete=\"off\">\n                <span class=\"-app-user-profile__info-list-form-item-line\"></span>\n                <label \n                    class=\"-app-user-profile__info-list-form-item-label\"\n                    [class.-app-user-profile__info-list-form-item-label_invisible]=\"myFormApplyInsurance.controls['userMedicalPoints'].dirty\">\n                    points number\n                </label>\n                <span \n                    class=\"-app-user-profile__info-list-form-warning -app-user-profile__info-list-form-warning_item\" \n                    [class.-app-user-profile__info-list-form-warning_item-invalid]=\"myFormApplyInsurance.controls['userMedicalPoints'].touched\n                        && myFormApplyInsurance.controls['userMedicalPoints'].invalid\"\n                    title=\"Enter only values ​​within your medical points\">\n                </span>\n            </div>\n            <div class=\"-app-user-profile__info-list-form-message\">\n                <textarea class=\"-app-user-profile__info-list-form-message-textarea\"\n                    placeholder=\"Write your message\"\n                    formControlName=\"userMessage\"\n                    title=\"Enter only values ​​within your medical points\"></textarea>\n                    <span \n                    class=\"-app-user-profile__info-list-form-warning -app-user-profile__info-list-form-warning_message\"\n                    [class.-app-user-profile__info-list-form-warning_message-invalid]=\"myFormApplyInsurance.controls['userMessage'].touched\n                        && myFormApplyInsurance.controls['userMessage'].invalid\"\n                    title=\"Enter some message to us\">\n                    </span>\n            </div>\n            <button \n                class=\"-app-user-profile__info-list-form-button\"\n                type=\"submit\"\n                [disabled]=\"myFormApplyInsurance.controls['userMedicalPoints'].invalid \n                    || myFormApplyInsurance.controls['userMessage'].invalid\">get</button>\n        </form>\n    </div>\n    <div \n        class=\"-app-user-profile__change\"\n        [class.-app-user-profile__change_image-mode]=\"imageMode\">\n        <div \n            class=\"-app-user-profile__change-title\"\n            [class.-app-user-profile__change-title_image-mode]=\"imageMode\">\n            Enter the url of any picture, which you want to see in your profile\n        </div>\n        <img \n            class=\"-app-user-profile__change-image\"\n            [class.-app-user-profile__change-image_image-mode]=\"imageMode\"\n            src=\"{{myFormNewImage.controls['userNewImage'].value}}\">\n        <form \n            class=\"-app-user-profile__change-form\"\n            [class.-app-user-profile__change-form_image-mode]=\"imageMode\"\n            [formGroup]=\"myFormNewImage\"\n            (ngSubmit)=\"changeImage()\">\n            <input \n                class=\"-app-user-profile__change-input\" \n                [class.-app-user-profile__change-input_image-mode]=\"imageMode\"\n                type=\"text\"\n                name=\"imageUrl\"\n                placeholder=\"Enter url of the picture\"\n                formControlName=\"userNewImage\"\n                autocomplete=\"off\">\n            <span \n                class=\"-app-user-profile__change-input-line\" \n                [class.-app-user-profile__change-input-line_image-mode]=\"imageMode\">\n            </span>\n            <button\n                class=\"-app-user-profile__change-switch-button\" \n                [class.-app-user-profile__change-switch-button_image-mode]=\"imageMode\"\n                type=\"submit\">\n                Change\n            </button>\n        </form>\n        <button \n            class=\"-app-user-profile__change-return-button\"\n            [class.-app-user-profile__change-return-button_image-mode]=\"imageMode\"\n            (click)=\"toggleImageMode()\">\n        </button>\n    </div>\n</div>\n\n\n\n\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserProfileComponent } from './user-profile.component';\r\nimport { UserProfileDonationComponent } from '../user-profile-donation/user-profile-donation.component';\r\nimport { UserProfileRoutingModule } from './user-profile-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CanProceedToUserProfileGuard } from '../guards/user-list/can-proceed-to-user-profile.guard';\r\nimport { CanLeaveUserProfileGuard } from '../guards/user-list/can-leave-user-profile.guard';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tUserProfileComponent,\r\n\t\tUserProfileDonationComponent\r\n\t],\r\n\timports: [\r\n\t\tUserProfileRoutingModule,\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t],\r\n\tproviders: [\r\n\t\tCanProceedToUserProfileGuard,\r\n\t\tCanLeaveUserProfileGuard\r\n\t],\r\n\tbootstrap: [UserProfileComponent]\r\n})\r\nexport class UserProfileModule {\r\n\r\n}\r\n"]}