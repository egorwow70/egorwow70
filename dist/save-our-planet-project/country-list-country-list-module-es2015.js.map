{"version":3,"sources":["./src/app/country-list/country-list-routing.module.ts","./src/app/country-list/country-list.component.ts","./src/app/country-list/country-list.component.html","./src/app/country-list/country-list.module.ts","./src/app/country-name/country-name.component.ts","./src/app/country-name/country-name.component.html","./src/app/country/country.component.ts","./src/app/country/country.component.html","./src/app/guards/country-list/can-leave-country.guard.ts","./src/app/guards/country-list/can-proceed-to-country.guard.ts","./src/app/guards/country-list/can-proceed-to-region.guard.ts","./src/app/pipes/country-list/format-area.pipe.ts","./src/app/pipes/country-list/format-forest-area.pipe.ts","./src/app/pipes/country-list/format-region-title.pipe.ts","./src/app/region/region.component.ts","./src/app/region/region.component.html"],"names":[],"mappings":"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","file":"country-list-country-list-module-es2015.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CountryListComponent } from './country-list.component';\r\nimport { RegionComponent } from '../region/region.component';\r\nimport { CountryComponent } from '../country/country.component';\r\nimport { CanProceedToRegionGuard } from '../guards/country-list/can-proceed-to-region.guard';\r\nimport { CanProceedToCountryGuard } from '../guards/country-list/can-proceed-to-country.guard';\r\nimport { CanLeaveCountryGuard } from '../guards/country-list/can-leave-country.guard';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: CountryListComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'region/:regionName/:subRegionName',\r\n\t\tcomponent: RegionComponent,\r\n\t\tcanActivate: [CanProceedToRegionGuard],\r\n\t\tchildren: [{\r\n\t\t\tpath: 'country/:countryName',\r\n\t\t\tcomponent: CountryComponent,\r\n\t\t\tcanActivate: [CanProceedToCountryGuard],\r\n\t\t\tcanDeactivate: [CanLeaveCountryGuard]\r\n\t\t}]\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class CountryListRoutingModule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-country-list',\n\ttemplateUrl: './country-list.component.html',\n\tstyleUrls: ['./country-list.component.scss']\n})\nexport class CountryListComponent {\n\n\tpublic menuMode: boolean = false;\n\n\tpublic asiaMenuMode: boolean = false;\n\tpublic europeMenuMode: boolean = false;\n\tpublic africaMenuMode: boolean = false;\n\tpublic oceaniaMenuMode: boolean = false;\n\tpublic americaMenuMode: boolean = false;\n\n\tconstructor(\n\t\tprivate _router: Router\n\t) {\n\n\t}\n\n\tprivate takeNameOfContent(htmlElement: HTMLElement): string {\n\t\tconst currentSubRegionContent: string[] = htmlElement.innerHTML.split(' ').filter((name: string) => Boolean(name));\n\t\treturn currentSubRegionContent[0].toLowerCase();\n\t}\n\n\tpublic toggleMenuMode(): void {\n\t\tthis.menuMode = !this.menuMode;\n\t}\n\n\tpublic returnMenuMode(): void {\n\t\tthis.menuMode = !this.menuMode;\n\t\tthis.asiaMenuMode = false;\n\t\tthis.europeMenuMode = false;\n\t\tthis.africaMenuMode = false;\n\t\tthis.oceaniaMenuMode = false;\n\t\tthis.americaMenuMode = false;\n\t}\n\n\tpublic toggleAsiaMenuMode(): void {\n\t\tthis.asiaMenuMode = !this.asiaMenuMode;\n\t}\n\n\tpublic toggleEuropeMenuMode(): void {\n\t\tthis.europeMenuMode = !this.europeMenuMode;\n\t}\n\n\tpublic toggleOceaniaMenuMode(): void {\n\t\tthis.oceaniaMenuMode = !this.oceaniaMenuMode;\n\t}\n\n\tpublic toggleAfricaMenuMode(): void {\n\t\tthis.africaMenuMode = !this.africaMenuMode;\n\t}\n\n\tpublic toggleAmericaMenuMode(): void {\n\t\tthis.americaMenuMode = !this.americaMenuMode;\n\t}\n\n\tpublic switchRouter(regionHtmlElement: HTMLElement, subRegionHtmlElement: HTMLElement): void {\n\t\tconst regionName: string = this.takeNameOfContent(regionHtmlElement);\n\t\tconst subRegionName: string = this.takeNameOfContent(subRegionHtmlElement);\n\t\tthis._router.navigate(['/countries', 'region', regionName, subRegionName]);\n\t}\n\n}\n","<div class=\"-app-countries\">\n    <div \n        class=\"-app-countries__start-menu\"\n        [class.-app-countries__start-menu_menu-mode]=\"menuMode\">\n        <div\n            class=\"-app-countries__start-menu-title\"\n            (click)=\"toggleMenuMode()\">\n            Menu\n        </div>\n        <span \n            class=\"-app-countries__start-menu-search\">\n        </span>  \n    </div>\n    <div class=\"-app-countries__menu -app-countries__menu_bg\"\n        [class.-app-countries__menu_bg-menu-mode]=\"menuMode\">\n        <span \n            class=\"-app-countries__menu-return\"\n            [class.-app-countries__menu-return_visible]=\"menuMode\"\n            (click)=\"returnMenuMode()\"></span> \n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || americaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_asia]=\"menuMode\"\n            [class.-app-countries__menu-list_asia-menu-mode]=\"asiaMenuMode\"\n            (click)=\"toggleAsiaMenuMode()\"\n            #asia>\n            Asia\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-southern-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, southernAsia)\"\n                #southernAsia>\n                Southern Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-western-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, westernAsia)\"\n                #westernAsia>\n                Western Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-central-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, centralAsia)\"\n                #centralAsia>\n                Central Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-eastern-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, easternAsia)\"\n                #easternAsia>\n                Eastern Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item -app-countries__menu-item_south-eastern-asia\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-south-eastern-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, southEasternAsia)\"\n                #southEasternAsia>\n                South-Eastern Asia\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || americaMenuMode || asiaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_europe]=\"menuMode\"\n            [class.-app-countries__menu-list_europe-menu-mode]=\"europeMenuMode\"\n            (click)=\"toggleEuropeMenuMode()\"\n            #europe>\n            Europe\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-northern-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, northernEurope)\"\n                #northernEurope>\n                Northern Europe\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-southern-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, southernEurope)\"\n                #southernEurope>\n                Southern Europe\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-western-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, westernEurope)\"\n                #westernEurope>\n                Western Europe\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-eastern-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, easternEurope)\"\n                #easternEurope>\n                Eastern Europe\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || asiaMenuMode || americaMenuMode\"\n            [class.-app-countries__menu-list_africa]=\"menuMode\"\n            [class.-app-countries__menu-list_africa-menu-mode]=\"africaMenuMode\"\n            (click)=\"toggleAfricaMenuMode()\"\n            #africa>\n            Africa\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-northern-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, northernAfrica)\"\n                #northernAfrica>\n                Northern Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-middle-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, middleAfrica)\"\n                #middleAfrica>\n                Middle Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-southern-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, southernAfrica)\"\n                #southernAfrica>\n                Southern Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-eastern-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, easternAfrica)\"\n                #easternAfrica>\n                Eastern Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-western-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, westernAfrica)\"\n                #westernAfrica>\n                Western Africa\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"americaMenuMode || europeMenuMode || asiaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_oceania]=\"menuMode\"\n            [class.-app-countries__menu-list_oceania-menu-mode]=\"oceaniaMenuMode\"\n            (click)=\"toggleOceaniaMenuMode()\"\n            #oceania>\n            Oceania\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-polynesia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, polynesia)\"\n                #polynesia>\n                Polynesia\n            </div>\n            <div \n                class=\"-app-countries__menu-item -app-countries__menu-item_australia-oceania\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-australia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, australia)\"\n                #australia>\n                Australia And New Zealand\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-melanesia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, melanesia)\"\n                #melanesia>\n                Melanesia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-micronesia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, micronesia)\"\n                #micronesia>\n                Micronesia\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || asiaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_america]=\"menuMode\"\n            [class.-app-countries__menu-list_america-menu-mode]=\"americaMenuMode\"\n            (click)=\"toggleAmericaMenuMode()\"\n            #america>\n            Americas\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-central-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, centralAmerica)\"\n                #centralAmerica>\n                Central America\n            </div>\n            <div \n                class=\"-app-countries__menu-item -app-countries__menu-item_australia-oceania\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-northern-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, northernAmerica)\"\n                #northernAmerica>\n                Northern America\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-south-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, southAmerica)\"\n                #southAmerica>\n                South America\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-caribbean-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, caribbean)\"\n                #caribbean>\n                Caribbean\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryListComponent } from './country-list.component';\r\nimport { CountryListRoutingModule } from './country-list-routing.module';\r\nimport { CountryComponent } from '../country/country.component';\r\nimport { RegionComponent } from '../region/region.component';\r\nimport { CountryNameComponent } from '../country-name/country-name.component';\r\nimport { CanProceedToRegionGuard } from '../guards/country-list/can-proceed-to-region.guard';\r\nimport { CanProceedToCountryGuard } from '../guards/country-list/can-proceed-to-country.guard';\r\nimport { CanLeaveCountryGuard } from '../guards/country-list/can-leave-country.guard';\r\nimport { FormatForestAreaPipe } from '../pipes/country-list/format-forest-area.pipe';\r\nimport { FormatAreaPipe } from '../pipes/country-list/format-area.pipe';\r\nimport { FormatRegionTitlePipe } from '../pipes/country-list/format-region-title.pipe';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tCountryListComponent,\r\n\t\tCountryComponent,\r\n\t\tRegionComponent,\r\n\t\tCountryNameComponent,\r\n\t\tFormatForestAreaPipe,\r\n\t\tFormatAreaPipe,\r\n\t\tFormatRegionTitlePipe\r\n\t],\r\n\timports: [\r\n\t\tCountryListRoutingModule,\r\n\t\tCommonModule\r\n\t],\r\n\tproviders: [\r\n\t\tCanProceedToRegionGuard,\r\n\t\tCanProceedToCountryGuard,\r\n\t\tCanLeaveCountryGuard\r\n\t],\r\n\tbootstrap: [CountryListComponent]\r\n})\r\nexport class CountryListModule {\r\n\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Country } from '../models/country-list/country';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n\tselector: 'app-country-name',\n\ttemplateUrl: './country-name.component.html',\n\tstyleUrls: ['./country-name.component.scss']\n})\nexport class CountryNameComponent implements OnInit, OnDestroy {\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _regionName: string;\n\tprivate _subRegionName: string;\n\n\t@Input()\n\tpublic country: Country;\n\n\tconstructor(\n\t\tprivate _router: Router,\n\t\tprivate _activatedRoute: ActivatedRoute,\n\t) { }\n\n\tpublic ngOnInit(): void {\n\t\tthis._activatedRoute.params\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$),\n\t\t\t).subscribe((params: Params) => {\n\t\t\t\tthis._regionName = params.regionName;\n\t\t\t\tthis._subRegionName = params.subRegionName;\n\t\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic goToCurrentCountryRouter(): void {\n\t\tconst countryName: string = this.country.name.replace(/\\./g, '')\n\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t.toLowerCase()\n\t\t\t.split(' ')\n\t\t\t.join('-');\n\t\tthis._router.navigate(['/countries', 'region', this._regionName, this._subRegionName, 'country', countryName]);\n\t}\n\n}\n","\n<div class=\"-app-country\">\n    <div \n        class=\"-app-country__name\"\n        (click)=\"goToCurrentCountryRouter()\">\n        {{ country.name }}\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Country } from '../models/country-list/country';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { takeUntil, delay } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport {\n\tselectSearchCountry,\n\tselectIsCountrySearchLoading,\n\tselectSearchNextCountry,\n\tselectSearchPreviousCountry\n} from '../store/country-list/country-list.selectors';\nimport { FacadeServiceDonationList } from '../store/donation-list/donation-list.facade';\nimport { FacadeServiceCountryList } from '../store/country-list/country-list.facade';\nimport { selectCountriesForDonation } from '../store/donation-list/donation-list.selectors';\n\n@Component({\n\tselector: 'app-country',\n\ttemplateUrl: './country.component.html',\n\tstyleUrls: ['./country.component.scss']\n})\nexport class CountryComponent implements OnInit, OnDestroy {\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _appNavigationDonationButton: HTMLElement;\n\n\tprivate _isChosenAtLeastOneCountry: boolean;\n\n\tprivate _selectedCountriesForDonation: Country[];\n\n\tpublic isSearchLoading: boolean = true;\n\n\tpublic country: Country;\n\tpublic previousCountry: Country;\n\tpublic nextCountry: Country;\n\n\tpublic isPreviousCountry: boolean;\n\tpublic isNextCountry: boolean;\n\n\tpublic isCanChosenCountry: boolean = true;\n\n\tconstructor(\n\t\tprivate _store$: Store,\n\t\tprivate _activatedRoute: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _facadeDonationListService: FacadeServiceDonationList,\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList\n\t) { }\n\n\tprivate canChosenCountry(countryName: string): boolean {\n\t\tif (Boolean(this._selectedCountriesForDonation)) {\n\t\t\tconst chosenCountry: Country = this._selectedCountriesForDonation.find((country: Country) => country.name === countryName);\n\t\t\treturn !Boolean(chosenCountry);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate switchRouterToSomeCountry(countryName: string): void {\n\t\tconst countryRouterName: string = countryName.replace(/\\./g, '')\n\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t.toLowerCase()\n\t\t\t.split(' ')\n\t\t\t.join('-');\n\n\t\tconst countryRegionName: string = this.country.region;\n\t\tconst countrySubRegionName: string = this.country.subRegion;\n\t\tconst countryRegionRouterName: string = this.takeRouterNameOfRegionOrSubRegion(countryRegionName);\n\t\tconst countrySubRegionRouterName: string = this.takeRouterNameOfRegionOrSubRegion(countrySubRegionName);\n\n\t\tthis._router.navigate([\n\t\t\t'/countries',\n\t\t\t'region',\n\t\t\tcountryRegionRouterName,\n\t\t\tcountrySubRegionRouterName,\n\t\t\t'country',\n\t\t\tcountryRouterName\n\t\t]);\n\t}\n\n\tprivate takeRouterNameOfRegionOrSubRegion(name: string): string {\n\t\treturn name.toLowerCase().split(' ')[0];\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis._activatedRoute.params\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((params: Params) => {\n\t\t\t\tthis._appNavigationDonationButton = document.querySelector('.-app-navigation__donation-button');\n\t\t\t\tthis._appNavigationDonationButton.classList.remove('-app-navigation__donation-button_blinking');\n\t\t\t\tthis._facadeCountryListService.searchCountry(params.countryName);\n\t\t\t});\n\n\t\tthis._store$.select(selectCountriesForDonation)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((selectedCountriesForDonation: Country[]) => {\n\t\t\t\tif (Boolean(selectedCountriesForDonation)) {\n\t\t\t\t\tthis._isChosenAtLeastOneCountry = true;\n\t\t\t\t\tthis._selectedCountriesForDonation = selectedCountriesForDonation;\n\t\t\t\t}\n\t\t\t});\n\t\tconst countrySearchDelay: number = 3000;\n\t\tthis._store$.select(selectSearchCountry)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$),\n\t\t\t\tdelay(countrySearchDelay)\n\t\t\t).subscribe((country: Country) => {\n\t\t\t\tif (Boolean(country)) {\n\t\t\t\t\tthis.country = country;\n\t\t\t\t\tthis.isCanChosenCountry = this.canChosenCountry(this.country.name);\n\t\t\t\t\tthis._facadeCountryListService.searchCountrySuccess();\n\t\t\t\t}\n\t\t\t});\n\t\tthis._store$.select(selectSearchPreviousCountry)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((previousCountry: Country) => {\n\t\t\t\tif (Boolean(previousCountry)) {\n\t\t\t\t\tthis.previousCountry = previousCountry;\n\t\t\t\t\tthis.isPreviousCountry = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.isPreviousCountry = false;\n\t\t\t\t}\n\t\t\t});\n\t\tthis._store$.select(selectSearchNextCountry)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((nextCountry: Country) => {\n\t\t\t\tif (Boolean(nextCountry)) {\n\t\t\t\t\tthis.nextCountry = nextCountry;\n\t\t\t\t\tthis.isNextCountry = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.isNextCountry = false;\n\t\t\t\t}\n\t\t\t});\n\t\tthis._store$.select(selectIsCountrySearchLoading)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((isSearchLoading: boolean) => {\n\t\t\t\tthis.isSearchLoading = isSearchLoading;\n\t\t\t});\n\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic choose(): void {\n\t\tthis._appNavigationDonationButton.classList.add('-app-navigation__donation-button_blinking');\n\n\t\tthis.isCanChosenCountry = false;\n\t\tthis._facadeDonationListService.initNewCountryForDonation(this.country);\n\t}\n\n\tpublic unchoose(): void {\n\t\tthis.isCanChosenCountry = true;\n\t\tthis._facadeDonationListService.deleteNewCountryForDonation(this.country);\n\t}\n\n\tpublic switchToPreviousCountry(): void {\n\t\tconst previousCountryName: string = this.previousCountry.name;\n\t\tthis.switchRouterToSomeCountry(previousCountryName);\n\t}\n\n\tpublic switchToNextCountry(): void {\n\t\tconst nextCountryName: string = this.nextCountry.name;\n\t\tthis.switchRouterToSomeCountry(nextCountryName);\n\t}\n\n\tpublic canDeactivate(): boolean {\n\t\tconst deactivateQuestion: string = 'You haven’t chosen country. Are you sure that you want to go from this page? For donation you need at least one country';\n\t\treturn (!this._isChosenAtLeastOneCountry)\n\t\t\t? confirm(deactivateQuestion)\n\t\t\t: true;\n\t}\n\n}\n","<div \n    *ngIf=\"!isSearchLoading\"\n    class=\"-app-country\">\n    <div class=\"-app-country-wrapper\">\n        <div \n            class=\"-app-country__current-country\">\n            <div class=\"-app-country__header\">\n                <div class=\"-app-country__header-info\">\n                    <h2 class=\"-app-country__header-info-title\">\n                        {{ country.name }}\n                    </h2>\n                    <img \n                        class=\"-app-country__header-info-image\" \n                        src=\"{{country.flag}}\">\n                </div>\n                <div class=\"-app-country__header-info\">\n                    <h3 class=\"-app-country__header-info-capital-title\">\n                        Capital\n                    </h3>\n                    <h3 class=\"-app-country__header-info-capital-name\">\n                        Name: {{ country.capital.name }}\n                    </h3>\n                    <h3 class=\"-app-country__header-info-capital-latitude\">\n                        Latitude: {{ country.capital.latitude }}\n                    </h3>\n                    <h3 class=\"-app-country__header-info-capital-longitude\">\n                        Longitude: {{ country.capital.longitude }}\n                    </h3>\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Region:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.region }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Sub Region:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.subRegion }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Area:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.area | formatArea }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Forest Area:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.forestArea | formatForestArea }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Native Name:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.nativeName }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Time Zone:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.timeZone }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"-app-country__button-container\">\n        <button \n            class=\"-app-country__button-slide -app-country__button-slide_left\"\n            [disabled]=\"!isPreviousCountry\"\n            (click)=\"switchToPreviousCountry()\">\n        </button>\n        <button \n            class=\"-app-country__button -app-country__button_choose\"\n            [class.-app-country__button_choose-invisible]=\"!isCanChosenCountry\"\n            (click)=\"choose()\">\n            choose\n        </button>\n        <button \n            class=\"-app-country__button -app-country__button_unchoose\"\n            [class.-app-country__button_unchoose-visible]=\"!isCanChosenCountry\"\n            (click)=\"unchoose()\">\n            unchoose\n        </button>\n        <button \n            class=\"-app-country__button-slide -app-country__button-slide_right\"\n            [disabled]=\"!isNextCountry\"\n            (click)=\"switchToNextCountry()\">\n        </button>\n    </div>\n</div>\n\n<div \n    *ngIf=\"isSearchLoading\"\n    class=\"-app-loader\">\n    <div class=\"-app-loader__ball -app-loader__ball_first\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_second\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_third\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_fourth\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_fifth\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_sixth\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_center\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { CanComponentDeactivate } from '../../models/can-component-deactivate/can-component-deactivate-interface';\n\n@Injectable()\nexport class CanLeaveCountryGuard implements CanDeactivate<CanComponentDeactivate> {\n\tpublic canDeactivate(component: CanComponentDeactivate): boolean {\n\t\treturn component.canDeactivate ? component.canDeactivate() : true;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Country } from '../../models/country-list/country';\nimport { selectCountryList } from '../../store/country-list/country-list.selectors';\n\n@Injectable()\nexport class CanProceedToCountryGuard implements CanActivate {\n\n\tprivate _countryList: Country[];\n\n\tprivate _currentUrl: string;\n\n\tconstructor(\n\t\tprivate _store$: Store\n\t) { }\n\n\tprivate takeNameOfRegionOrSubRegion(name: string): string {\n\t\treturn name.toLowerCase().split(' ')[0];\n\t}\n\n\tprivate isExistRegionOrSubRegionRouteName(name: string): boolean {\n\t\tconst currentCountryRegionOrSubRegionRouteName: string = this.takeNameOfRegionOrSubRegion(name);\n\t\tif (this._currentUrl.includes(currentCountryRegionOrSubRegionRouteName)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate checkCountry(countryRouterName: string): void {\n\t\tlet isExistCurrentUrlCountry: boolean;\n\t\tconst searchCountry: Country = this._countryList.find((country: Country) => {\n\t\t\tif (Boolean(country)) {\n\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\n\t\t\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.split(' ')\n\t\t\t\t\t.join('-');\n\t\t\t\tif (currentCountryRouterName === countryRouterName) {\n\t\t\t\t\treturn country;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (Boolean(searchCountry)) {\n\t\t\tisExistCurrentUrlCountry = this.isExistRegionOrSubRegionRouteName(searchCountry.region);\n\t\t\tisExistCurrentUrlCountry = this.isExistRegionOrSubRegionRouteName(searchCountry.subRegion);\n\t\t}\n\t\tif (!isExistCurrentUrlCountry) {\n\t\t\tconst errorMessage: string = `There is no country with this name (${countryRouterName}) in this region and sub-region`;\n\t\t\tthrow new Error(errorMessage);\n\t\t}\n\t}\n\n\tpublic canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\tthis._currentUrl = state.url;\n\t\tconst currentCountryName: string = next.params.countryName;\n\t\tthis._store$.select(selectCountryList)\n\t\t\t.subscribe((countryList: Country[]) => {\n\t\t\t\tthis._countryList = countryList;\n\t\t\t\tthis.checkCountry(currentCountryName);\n\t\t\t}).unsubscribe();\n\n\t\treturn true;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { selectCountryList } from '../../store/country-list/country-list.selectors';\nimport { Country } from '../../models/country-list/country';\n\n@Injectable()\nexport class CanProceedToRegionGuard implements CanActivate {\n\n\tprivate _countryList: Country[];\n\n\tconstructor(\n\t\tprivate _store$: Store\n\t) { }\n\n\tprivate checkRouterParams(regionName: string, subRegionName: string): void {\n\t\tconst currentRegionSubRegionCountry: Country = this._countryList.find((country: Country) => {\n\t\t\tif (Boolean(country)) {\n\t\t\t\tconst currentCountryRegionName: string = country.region.split(' ')[0].toLowerCase();\n\t\t\t\tconst currentCountrySubRegionName: string = country.subRegion.split(' ')[0].toLowerCase();\n\t\t\t\tif (currentCountryRegionName === regionName && currentCountrySubRegionName === subRegionName) {\n\t\t\t\t\treturn country;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (!Boolean(currentRegionSubRegionCountry)) {\n\t\t\tconst errorMessage: string = `There are no countries in such region (${regionName}) and sub-region (${subRegionName})`;\n\t\t\tthrow new Error(errorMessage);\n\t\t}\n\t}\n\n\tpublic canActivate(next: ActivatedRouteSnapshot): boolean {\n\t\tconst currentRegion: string = next.params.regionName;\n\t\tconst currentSubRegion: string = next.params.subRegionName;\n\n\t\tthis._store$.select(selectCountryList)\n\t\t\t.subscribe((countryList: Country[]) => {\n\t\t\t\tthis._countryList = countryList;\n\t\t\t}).unsubscribe();\n\n\t\tthis.checkRouterParams(currentRegion, currentSubRegion);\n\t\treturn true;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatArea'\n})\nexport class FormatAreaPipe implements PipeTransform {\n\n\tpublic transform(value: number): string {\n\t\tconst currentCountryArea: string = value.toString();\n\t\tconst currentCountryAreaInfoWithSpacesAfterEachThirdCharacters: string = currentCountryArea\n\t\t\t.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, '$1' + ' ');\n\t\tconst countryAreaInfo: string = currentCountryAreaInfoWithSpacesAfterEachThirdCharacters + ' sq/km';\n\t\treturn countryAreaInfo;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatForestArea'\n})\nexport class FormatForestAreaPipe implements PipeTransform {\n\n\tpublic transform(value: number): string {\n\t\tconst currentCountryForestArea: number = value;\n\t\tconst currentCountryForestAreaInfo: string = `${currentCountryForestArea}%`;\n\t\treturn currentCountryForestAreaInfo;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatRegionTitle'\n})\nexport class FormatRegionTitlePipe implements PipeTransform {\n\n\tpublic transform(value: string): string {\n\t\treturn value.split('-').map((currentWord: string) => {\n\t\t\treturn currentWord[0].toUpperCase() + currentWord.slice(1);\n\t\t}).join(' ');\n\t}\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { Country } from '../models/country-list/country';\nimport { selectSubRegionsCountries } from '../store/country-list/country-list.selectors';\nimport { FacadeServiceCountryList } from '../store/country-list/country-list.facade';\n\n@Component({\n\tselector: 'app-region',\n\ttemplateUrl: './region.component.html',\n\tstyleUrls: ['./region.component.scss']\n})\nexport class RegionComponent implements OnInit, OnDestroy {\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _windowScrollHeight: Number = 2;\n\tprivate _scrollBlock: HTMLElement;\n\n\tpublic regionName: string;\n\tpublic subRegionName: string;\n\n\tpublic subRegionsCountries: Country[];\n\n\tconstructor(\n\t\tprivate _store$: Store,\n\t\tprivate _router: Router,\n\t\tprivate _activatedRoute: ActivatedRoute,\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList,\n\t) { }\n\n\tprivate navigateToCurrentSubRegionRoute(): void {\n\t\tconst firstSubRegionCountryName: string = this.subRegionsCountries[0].name;\n\t\tconst firstSubRegionCountryRouterName: string = firstSubRegionCountryName.replace(/\\./g, '')\n\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t.toLowerCase()\n\t\t\t.split(' ')\n\t\t\t.join('-');\n\t\tthis._router.navigate(['/countries', 'region', this.regionName, this.subRegionName, 'country', firstSubRegionCountryRouterName]);\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tconst scrollUpButton: HTMLElement = document.querySelector('.-app-scroll-up-button_sub-region-category');\n\t\tthis._scrollBlock = document.querySelector('.-app-region');\n\n\t\tthis._scrollBlock.addEventListener('scroll', () => {\n\t\t\tif (this._scrollBlock.scrollTop > this._windowScrollHeight) {\n\t\t\t\tscrollUpButton.classList.add('-app-scroll-up-button_sub-region-category-visible');\n\t\t\t} else {\n\t\t\t\tscrollUpButton.classList.remove('-app-scroll-up-button_sub-region-category-visible');\n\t\t\t}\n\t\t});\n\n\t\tthis._activatedRoute.params\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((params: Params) => {\n\t\t\t\tthis.regionName = params.regionName;\n\t\t\t\tthis.subRegionName = params.subRegionName;\n\t\t\t\tthis._facadeCountryListService.searchSubRegionCountries(this.regionName, this.subRegionName);\n\t\t\t});\n\n\t\tthis._store$.select(selectSubRegionsCountries)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((subRegionsCountries: Country[]) => {\n\t\t\t\tif (Boolean(subRegionsCountries)) {\n\t\t\t\t\tthis.subRegionsCountries = subRegionsCountries;\n\t\t\t\t\tthis.navigateToCurrentSubRegionRoute();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic scrollTop(): void {\n\t\tthis._scrollBlock.scrollTo(0, 0);\n\t}\n\n}\n","<div class=\"-app-region\">\n    <h2 class=\"-app-region__title\">\n        {{ regionName | formatRegionTitle }} Region\n    </h2>\n    <h3  class=\"-app-region__sub-title\">\n        {{ subRegionName | formatRegionTitle }} Subregion\n    </h3>\n    <div class=\"-app-region__country-list\">\n        <app-country-name \n            *ngFor=\"let country of subRegionsCountries\" \n            [country]=\"country\">\n        </app-country-name>\n    </div>\n    <a \n        class=\"-app-scroll-up-button -app-scroll-up-button_sub-region-category\"\n        (click)=\"scrollTop()\">\n    </a>\n</div>\n<div class=\"-app-region__current-country\">\n    <router-outlet></router-outlet>\n</div>\n"],"sourceRoot":"webpack:///"}