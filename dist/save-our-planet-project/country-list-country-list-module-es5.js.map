{"version":3,"sources":["webpack:///src/app/country-list/country-list-routing.module.ts","webpack:///src/app/country-list/country-list.component.ts","webpack:///src/app/country-list/country-list.component.html","webpack:///src/app/country-list/country-list.module.ts","webpack:///src/app/country-name/country-name.component.ts","webpack:///src/app/country-name/country-name.component.html","webpack:///src/app/country/country.component.ts","webpack:///src/app/country/country.component.html","webpack:///src/app/guards/country-list/can-leave-country.guard.ts","webpack:///src/app/guards/country-list/can-proceed-to-country.guard.ts","webpack:///src/app/guards/country-list/can-proceed-to-region.guard.ts","webpack:///src/app/pipes/country-list/format-area.pipe.ts","webpack:///src/app/pipes/country-list/format-forest-area.pipe.ts","webpack:///src/app/pipes/country-list/format-region-title.pipe.ts","webpack:///src/app/region/region.component.ts","webpack:///src/app/region/region.component.html"],"names":["routes","path","component","canActivate","children","canDeactivate","CountryListRoutingModule","forChild","imports","exports","CountryListComponent","_router","menuMode","asiaMenuMode","europeMenuMode","africaMenuMode","oceaniaMenuMode","americaMenuMode","htmlElement","currentSubRegionContent","innerHTML","split","filter","name","Boolean","toLowerCase","regionHtmlElement","subRegionHtmlElement","regionName","takeNameOfContent","subRegionName","navigate","toggleMenuMode","returnMenuMode","toggleAsiaMenuMode","switchRouter","toggleEuropeMenuMode","toggleAfricaMenuMode","toggleOceaniaMenuMode","toggleAmericaMenuMode","selector","templateUrl","styleUrls","CountryListModule","declarations","providers","bootstrap","CountryNameComponent","_activatedRoute","_destroySubject$","params","pipe","subscribe","_regionName","_subRegionName","next","complete","countryName","country","replace","join","goToCurrentCountryRouter","CountryComponent","_store$","_facadeDonationListService","_facadeCountryListService","isSearchLoading","isCanChosenCountry","_selectedCountriesForDonation","chosenCountry","find","countryRouterName","countryRegionName","region","countrySubRegionName","subRegion","countryRegionRouterName","takeRouterNameOfRegionOrSubRegion","countrySubRegionRouterName","_appNavigationDonationButton","document","querySelector","classList","remove","searchCountry","select","selectedCountriesForDonation","_isChosenAtLeastOneCountry","countrySearchDelay","canChosenCountry","searchCountrySuccess","previousCountry","isPreviousCountry","nextCountry","isNextCountry","add","initNewCountryForDonation","deleteNewCountryForDonation","previousCountryName","switchRouterToSomeCountry","nextCountryName","deactivateQuestion","confirm","CanLeaveCountryGuard","CanProceedToCountryGuard","currentCountryRegionOrSubRegionRouteName","takeNameOfRegionOrSubRegion","_currentUrl","includes","isExistCurrentUrlCountry","_countryList","currentCountryRouterName","isExistRegionOrSubRegionRouteName","errorMessage","Error","state","url","currentCountryName","countryList","checkCountry","unsubscribe","CanProceedToRegionGuard","currentRegionSubRegionCountry","currentCountryRegionName","currentCountrySubRegionName","currentRegion","currentSubRegion","checkRouterParams","FormatAreaPipe","value","currentCountryArea","toString","currentCountryAreaInfoWithSpacesAfterEachThirdCharacters","countryAreaInfo","FormatForestAreaPipe","currentCountryForestArea","currentCountryForestAreaInfo","FormatRegionTitlePipe","map","currentWord","toUpperCase","slice","RegionComponent","_windowScrollHeight","firstSubRegionCountryName","subRegionsCountries","firstSubRegionCountryRouterName","scrollUpButton","_scrollBlock","addEventListener","scrollTop","searchSubRegionCountries","navigateToCurrentSubRegionRoute","scrollTo"],"mappings":"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","file":"country-list-country-list-module-es5.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CountryListComponent } from './country-list.component';\r\nimport { RegionComponent } from '../region/region.component';\r\nimport { CountryComponent } from '../country/country.component';\r\nimport { CanProceedToRegionGuard } from '../guards/country-list/can-proceed-to-region.guard';\r\nimport { CanProceedToCountryGuard } from '../guards/country-list/can-proceed-to-country.guard';\r\nimport { CanLeaveCountryGuard } from '../guards/country-list/can-leave-country.guard';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: CountryListComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'region/:regionName/:subRegionName',\r\n\t\tcomponent: RegionComponent,\r\n\t\tcanActivate: [CanProceedToRegionGuard],\r\n\t\tchildren: [{\r\n\t\t\tpath: 'country/:countryName',\r\n\t\t\tcomponent: CountryComponent,\r\n\t\t\tcanActivate: [CanProceedToCountryGuard],\r\n\t\t\tcanDeactivate: [CanLeaveCountryGuard]\r\n\t\t}]\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class CountryListRoutingModule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-country-list',\n\ttemplateUrl: './country-list.component.html',\n\tstyleUrls: ['./country-list.component.scss']\n})\nexport class CountryListComponent {\n\n\tpublic menuMode: boolean = false;\n\n\tpublic asiaMenuMode: boolean = false;\n\tpublic europeMenuMode: boolean = false;\n\tpublic africaMenuMode: boolean = false;\n\tpublic oceaniaMenuMode: boolean = false;\n\tpublic americaMenuMode: boolean = false;\n\n\tconstructor(\n\t\tprivate _router: Router\n\t) {\n\n\t}\n\n\tprivate takeNameOfContent(htmlElement: HTMLElement): string {\n\t\tconst currentSubRegionContent: string[] = htmlElement.innerHTML.split(' ').filter((name: string) => Boolean(name));\n\t\treturn currentSubRegionContent[0].toLowerCase();\n\t}\n\n\tpublic toggleMenuMode(): void {\n\t\tthis.menuMode = !this.menuMode;\n\t}\n\n\tpublic returnMenuMode(): void {\n\t\tthis.menuMode = !this.menuMode;\n\t\tthis.asiaMenuMode = false;\n\t\tthis.europeMenuMode = false;\n\t\tthis.africaMenuMode = false;\n\t\tthis.oceaniaMenuMode = false;\n\t\tthis.americaMenuMode = false;\n\t}\n\n\tpublic toggleAsiaMenuMode(): void {\n\t\tthis.asiaMenuMode = !this.asiaMenuMode;\n\t}\n\n\tpublic toggleEuropeMenuMode(): void {\n\t\tthis.europeMenuMode = !this.europeMenuMode;\n\t}\n\n\tpublic toggleOceaniaMenuMode(): void {\n\t\tthis.oceaniaMenuMode = !this.oceaniaMenuMode;\n\t}\n\n\tpublic toggleAfricaMenuMode(): void {\n\t\tthis.africaMenuMode = !this.africaMenuMode;\n\t}\n\n\tpublic toggleAmericaMenuMode(): void {\n\t\tthis.americaMenuMode = !this.americaMenuMode;\n\t}\n\n\tpublic switchRouter(regionHtmlElement: HTMLElement, subRegionHtmlElement: HTMLElement): void {\n\t\tconst regionName: string = this.takeNameOfContent(regionHtmlElement);\n\t\tconst subRegionName: string = this.takeNameOfContent(subRegionHtmlElement);\n\t\tthis._router.navigate(['/countries', 'region', regionName, subRegionName]);\n\t}\n\n}\n","<div class=\"-app-countries\">\n    <div \n        class=\"-app-countries__start-menu\"\n        [class.-app-countries__start-menu_menu-mode]=\"menuMode\">\n        <div\n            class=\"-app-countries__start-menu-title\"\n            (click)=\"toggleMenuMode()\">\n            Menu\n        </div>\n        <span \n            class=\"-app-countries__start-menu-search\">\n        </span>  \n    </div>\n    <div class=\"-app-countries__menu -app-countries__menu_bg\"\n        [class.-app-countries__menu_bg-menu-mode]=\"menuMode\">\n        <span \n            class=\"-app-countries__menu-return\"\n            [class.-app-countries__menu-return_visible]=\"menuMode\"\n            (click)=\"returnMenuMode()\"></span> \n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || americaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_asia]=\"menuMode\"\n            [class.-app-countries__menu-list_asia-menu-mode]=\"asiaMenuMode\"\n            (click)=\"toggleAsiaMenuMode()\"\n            #asia>\n            Asia\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-southern-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, southernAsia)\"\n                #southernAsia>\n                Southern Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-western-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, westernAsia)\"\n                #westernAsia>\n                Western Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-central-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, centralAsia)\"\n                #centralAsia>\n                Central Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-eastern-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, easternAsia)\"\n                #easternAsia>\n                Eastern Asia\n            </div>\n            <div \n                class=\"-app-countries__menu-item -app-countries__menu-item_south-eastern-asia\"\n                [class.-app-countries__menu-item_visible]=\"asiaMenuMode\"\n                [class.-app-countries__menu-item_visible-south-eastern-asia]=\"asiaMenuMode\"\n                (click)=\"switchRouter(asia, southEasternAsia)\"\n                #southEasternAsia>\n                South-Eastern Asia\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || americaMenuMode || asiaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_europe]=\"menuMode\"\n            [class.-app-countries__menu-list_europe-menu-mode]=\"europeMenuMode\"\n            (click)=\"toggleEuropeMenuMode()\"\n            #europe>\n            Europe\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-northern-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, northernEurope)\"\n                #northernEurope>\n                Northern Europe\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-southern-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, southernEurope)\"\n                #southernEurope>\n                Southern Europe\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-western-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, westernEurope)\"\n                #westernEurope>\n                Western Europe\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"europeMenuMode\"\n                [class.-app-countries__menu-item_visible-eastern-europe]=\"europeMenuMode\"\n                (click)=\"switchRouter(europe, easternEurope)\"\n                #easternEurope>\n                Eastern Europe\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || asiaMenuMode || americaMenuMode\"\n            [class.-app-countries__menu-list_africa]=\"menuMode\"\n            [class.-app-countries__menu-list_africa-menu-mode]=\"africaMenuMode\"\n            (click)=\"toggleAfricaMenuMode()\"\n            #africa>\n            Africa\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-northern-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, northernAfrica)\"\n                #northernAfrica>\n                Northern Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-middle-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, middleAfrica)\"\n                #middleAfrica>\n                Middle Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-southern-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, southernAfrica)\"\n                #southernAfrica>\n                Southern Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-eastern-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, easternAfrica)\"\n                #easternAfrica>\n                Eastern Africa\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"africaMenuMode\"\n                [class.-app-countries__menu-item_visible-western-africa]=\"africaMenuMode\"\n                (click)=\"switchRouter(africa, westernAfrica)\"\n                #westernAfrica>\n                Western Africa\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"americaMenuMode || europeMenuMode || asiaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_oceania]=\"menuMode\"\n            [class.-app-countries__menu-list_oceania-menu-mode]=\"oceaniaMenuMode\"\n            (click)=\"toggleOceaniaMenuMode()\"\n            #oceania>\n            Oceania\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-polynesia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, polynesia)\"\n                #polynesia>\n                Polynesia\n            </div>\n            <div \n                class=\"-app-countries__menu-item -app-countries__menu-item_australia-oceania\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-australia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, australia)\"\n                #australia>\n                Australia And New Zealand\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-melanesia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, melanesia)\"\n                #melanesia>\n                Melanesia\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"oceaniaMenuMode\"\n                [class.-app-countries__menu-item_visible-micronesia-oceania]=\"oceaniaMenuMode\"\n                (click)=\"switchRouter(oceania, micronesia)\"\n                #micronesia>\n                Micronesia\n            </div>\n        </div>\n        <div \n            class=\"-app-countries__menu-list\"\n            [class.-app-countries__menu-list_invisible]=\"oceaniaMenuMode || europeMenuMode || asiaMenuMode || africaMenuMode\"\n            [class.-app-countries__menu-list_america]=\"menuMode\"\n            [class.-app-countries__menu-list_america-menu-mode]=\"americaMenuMode\"\n            (click)=\"toggleAmericaMenuMode()\"\n            #america>\n            Americas\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-central-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, centralAmerica)\"\n                #centralAmerica>\n                Central America\n            </div>\n            <div \n                class=\"-app-countries__menu-item -app-countries__menu-item_australia-oceania\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-northern-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, northernAmerica)\"\n                #northernAmerica>\n                Northern America\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-south-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, southAmerica)\"\n                #southAmerica>\n                South America\n            </div>\n            <div \n                class=\"-app-countries__menu-item\"\n                [class.-app-countries__menu-item_visible]=\"americaMenuMode\"\n                [class.-app-countries__menu-item_visible-caribbean-america]=\"americaMenuMode\"\n                (click)=\"switchRouter(america, caribbean)\"\n                #caribbean>\n                Caribbean\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryListComponent } from './country-list.component';\r\nimport { CountryListRoutingModule } from './country-list-routing.module';\r\nimport { CountryComponent } from '../country/country.component';\r\nimport { RegionComponent } from '../region/region.component';\r\nimport { CountryNameComponent } from '../country-name/country-name.component';\r\nimport { CanProceedToRegionGuard } from '../guards/country-list/can-proceed-to-region.guard';\r\nimport { CanProceedToCountryGuard } from '../guards/country-list/can-proceed-to-country.guard';\r\nimport { CanLeaveCountryGuard } from '../guards/country-list/can-leave-country.guard';\r\nimport { FormatForestAreaPipe } from '../pipes/country-list/format-forest-area.pipe';\r\nimport { FormatAreaPipe } from '../pipes/country-list/format-area.pipe';\r\nimport { FormatRegionTitlePipe } from '../pipes/country-list/format-region-title.pipe';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tCountryListComponent,\r\n\t\tCountryComponent,\r\n\t\tRegionComponent,\r\n\t\tCountryNameComponent,\r\n\t\tFormatForestAreaPipe,\r\n\t\tFormatAreaPipe,\r\n\t\tFormatRegionTitlePipe\r\n\t],\r\n\timports: [\r\n\t\tCountryListRoutingModule,\r\n\t\tCommonModule\r\n\t],\r\n\tproviders: [\r\n\t\tCanProceedToRegionGuard,\r\n\t\tCanProceedToCountryGuard,\r\n\t\tCanLeaveCountryGuard\r\n\t],\r\n\tbootstrap: [CountryListComponent]\r\n})\r\nexport class CountryListModule {\r\n\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Country } from '../models/country-list/country';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n\tselector: 'app-country-name',\n\ttemplateUrl: './country-name.component.html',\n\tstyleUrls: ['./country-name.component.scss']\n})\nexport class CountryNameComponent implements OnInit, OnDestroy {\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _regionName: string;\n\tprivate _subRegionName: string;\n\n\t@Input()\n\tpublic country: Country;\n\n\tconstructor(\n\t\tprivate _router: Router,\n\t\tprivate _activatedRoute: ActivatedRoute,\n\t) { }\n\n\tpublic ngOnInit(): void {\n\t\tthis._activatedRoute.params\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$),\n\t\t\t).subscribe((params: Params) => {\n\t\t\t\tthis._regionName = params.regionName;\n\t\t\t\tthis._subRegionName = params.subRegionName;\n\t\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic goToCurrentCountryRouter(): void {\n\t\tconst countryName: string = this.country.name.replace(/\\./g, '')\n\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t.toLowerCase()\n\t\t\t.split(' ')\n\t\t\t.join('-');\n\t\tthis._router.navigate(['/countries', 'region', this._regionName, this._subRegionName, 'country', countryName]);\n\t}\n\n}\n","\n<div class=\"-app-country\">\n    <div \n        class=\"-app-country__name\"\n        (click)=\"goToCurrentCountryRouter()\">\n        {{ country.name }}\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Country } from '../models/country-list/country';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { takeUntil, delay } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport {\n\tselectSearchCountry,\n\tselectIsCountrySearchLoading,\n\tselectSearchNextCountry,\n\tselectSearchPreviousCountry\n} from '../store/country-list/country-list.selectors';\nimport { FacadeServiceDonationList } from '../store/donation-list/donation-list.facade';\nimport { FacadeServiceCountryList } from '../store/country-list/country-list.facade';\nimport { selectCountriesForDonation } from '../store/donation-list/donation-list.selectors';\n\n@Component({\n\tselector: 'app-country',\n\ttemplateUrl: './country.component.html',\n\tstyleUrls: ['./country.component.scss']\n})\nexport class CountryComponent implements OnInit, OnDestroy {\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _appNavigationDonationButton: HTMLElement;\n\n\tprivate _isChosenAtLeastOneCountry: boolean;\n\n\tprivate _selectedCountriesForDonation: Country[];\n\n\tpublic isSearchLoading: boolean = true;\n\n\tpublic country: Country;\n\tpublic previousCountry: Country;\n\tpublic nextCountry: Country;\n\n\tpublic isPreviousCountry: boolean;\n\tpublic isNextCountry: boolean;\n\n\tpublic isCanChosenCountry: boolean = true;\n\n\tconstructor(\n\t\tprivate _store$: Store,\n\t\tprivate _activatedRoute: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _facadeDonationListService: FacadeServiceDonationList,\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList\n\t) { }\n\n\tprivate canChosenCountry(countryName: string): boolean {\n\t\tif (Boolean(this._selectedCountriesForDonation)) {\n\t\t\tconst chosenCountry: Country = this._selectedCountriesForDonation.find((country: Country) => country.name === countryName);\n\t\t\treturn !Boolean(chosenCountry);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate switchRouterToSomeCountry(countryName: string): void {\n\t\tconst countryRouterName: string = countryName.replace(/\\./g, '')\n\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t.toLowerCase()\n\t\t\t.split(' ')\n\t\t\t.join('-');\n\n\t\tconst countryRegionName: string = this.country.region;\n\t\tconst countrySubRegionName: string = this.country.subRegion;\n\t\tconst countryRegionRouterName: string = this.takeRouterNameOfRegionOrSubRegion(countryRegionName);\n\t\tconst countrySubRegionRouterName: string = this.takeRouterNameOfRegionOrSubRegion(countrySubRegionName);\n\n\t\tthis._router.navigate([\n\t\t\t'/countries',\n\t\t\t'region',\n\t\t\tcountryRegionRouterName,\n\t\t\tcountrySubRegionRouterName,\n\t\t\t'country',\n\t\t\tcountryRouterName\n\t\t]);\n\t}\n\n\tprivate takeRouterNameOfRegionOrSubRegion(name: string): string {\n\t\treturn name.toLowerCase().split(' ')[0];\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis._activatedRoute.params\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((params: Params) => {\n\t\t\t\tthis._appNavigationDonationButton = document.querySelector('.-app-navigation__donation-button');\n\t\t\t\tthis._appNavigationDonationButton.classList.remove('-app-navigation__donation-button_blinking');\n\t\t\t\tthis._facadeCountryListService.searchCountry(params.countryName);\n\t\t\t});\n\n\t\tthis._store$.select(selectCountriesForDonation)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((selectedCountriesForDonation: Country[]) => {\n\t\t\t\tif (Boolean(selectedCountriesForDonation)) {\n\t\t\t\t\tthis._isChosenAtLeastOneCountry = true;\n\t\t\t\t\tthis._selectedCountriesForDonation = selectedCountriesForDonation;\n\t\t\t\t}\n\t\t\t});\n\t\tconst countrySearchDelay: number = 3000;\n\t\tthis._store$.select(selectSearchCountry)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$),\n\t\t\t\tdelay(countrySearchDelay)\n\t\t\t).subscribe((country: Country) => {\n\t\t\t\tif (Boolean(country)) {\n\t\t\t\t\tthis.country = country;\n\t\t\t\t\tthis.isCanChosenCountry = this.canChosenCountry(this.country.name);\n\t\t\t\t\tthis._facadeCountryListService.searchCountrySuccess();\n\t\t\t\t}\n\t\t\t});\n\t\tthis._store$.select(selectSearchPreviousCountry)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((previousCountry: Country) => {\n\t\t\t\tif (Boolean(previousCountry)) {\n\t\t\t\t\tthis.previousCountry = previousCountry;\n\t\t\t\t\tthis.isPreviousCountry = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.isPreviousCountry = false;\n\t\t\t\t}\n\t\t\t});\n\t\tthis._store$.select(selectSearchNextCountry)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((nextCountry: Country) => {\n\t\t\t\tif (Boolean(nextCountry)) {\n\t\t\t\t\tthis.nextCountry = nextCountry;\n\t\t\t\t\tthis.isNextCountry = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.isNextCountry = false;\n\t\t\t\t}\n\t\t\t});\n\t\tthis._store$.select(selectIsCountrySearchLoading)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((isSearchLoading: boolean) => {\n\t\t\t\tthis.isSearchLoading = isSearchLoading;\n\t\t\t});\n\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic choose(): void {\n\t\tthis._appNavigationDonationButton.classList.add('-app-navigation__donation-button_blinking');\n\n\t\tthis.isCanChosenCountry = false;\n\t\tthis._facadeDonationListService.initNewCountryForDonation(this.country);\n\t}\n\n\tpublic unchoose(): void {\n\t\tthis.isCanChosenCountry = true;\n\t\tthis._facadeDonationListService.deleteNewCountryForDonation(this.country);\n\t}\n\n\tpublic switchToPreviousCountry(): void {\n\t\tconst previousCountryName: string = this.previousCountry.name;\n\t\tthis.switchRouterToSomeCountry(previousCountryName);\n\t}\n\n\tpublic switchToNextCountry(): void {\n\t\tconst nextCountryName: string = this.nextCountry.name;\n\t\tthis.switchRouterToSomeCountry(nextCountryName);\n\t}\n\n\tpublic canDeactivate(): boolean {\n\t\tconst deactivateQuestion: string = 'You haven’t chosen country. Are you sure that you want to go from this page? For donation you need at least one country';\n\t\treturn (!this._isChosenAtLeastOneCountry)\n\t\t\t? confirm(deactivateQuestion)\n\t\t\t: true;\n\t}\n\n}\n","<div \n    *ngIf=\"!isSearchLoading\"\n    class=\"-app-country\">\n    <div class=\"-app-country-wrapper\">\n        <div \n            class=\"-app-country__current-country\">\n            <div class=\"-app-country__header\">\n                <div class=\"-app-country__header-info\">\n                    <h2 class=\"-app-country__header-info-title\">\n                        {{ country.name }}\n                    </h2>\n                    <img \n                        class=\"-app-country__header-info-image\" \n                        src=\"{{country.flag}}\">\n                </div>\n                <div class=\"-app-country__header-info\">\n                    <h3 class=\"-app-country__header-info-capital-title\">\n                        Capital\n                    </h3>\n                    <h3 class=\"-app-country__header-info-capital-name\">\n                        Name: {{ country.capital.name }}\n                    </h3>\n                    <h3 class=\"-app-country__header-info-capital-latitude\">\n                        Latitude: {{ country.capital.latitude }}\n                    </h3>\n                    <h3 class=\"-app-country__header-info-capital-longitude\">\n                        Longitude: {{ country.capital.longitude }}\n                    </h3>\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Region:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.region }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Sub Region:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.subRegion }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Area:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.area | formatArea }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Forest Area:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.forestArea | formatForestArea }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Native Name:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.nativeName }}\n                </div>\n            </div>\n            <div class=\"-app-country__item\">\n                <div class=\"-app-country__item-title\">\n                    Time Zone:\n                </div>\n                <div class=\"-app-country__item-info\">\n                    {{ country.timeZone }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"-app-country__button-container\">\n        <button \n            class=\"-app-country__button-slide -app-country__button-slide_left\"\n            [disabled]=\"!isPreviousCountry\"\n            (click)=\"switchToPreviousCountry()\">\n        </button>\n        <button \n            class=\"-app-country__button -app-country__button_choose\"\n            [class.-app-country__button_choose-invisible]=\"!isCanChosenCountry\"\n            (click)=\"choose()\">\n            choose\n        </button>\n        <button \n            class=\"-app-country__button -app-country__button_unchoose\"\n            [class.-app-country__button_unchoose-visible]=\"!isCanChosenCountry\"\n            (click)=\"unchoose()\">\n            unchoose\n        </button>\n        <button \n            class=\"-app-country__button-slide -app-country__button-slide_right\"\n            [disabled]=\"!isNextCountry\"\n            (click)=\"switchToNextCountry()\">\n        </button>\n    </div>\n</div>\n\n<div \n    *ngIf=\"isSearchLoading\"\n    class=\"-app-loader\">\n    <div class=\"-app-loader__ball -app-loader__ball_first\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_second\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_third\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_fourth\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_fifth\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_sixth\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n    <div class=\"-app-loader__ball -app-loader__ball_center\">\n        <div class=\"-app-loader__inner\">\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { CanComponentDeactivate } from '../../models/can-component-deactivate/can-component-deactivate-interface';\n\n@Injectable()\nexport class CanLeaveCountryGuard implements CanDeactivate<CanComponentDeactivate> {\n\tpublic canDeactivate(component: CanComponentDeactivate): boolean {\n\t\treturn component.canDeactivate ? component.canDeactivate() : true;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Country } from '../../models/country-list/country';\nimport { selectCountryList } from '../../store/country-list/country-list.selectors';\n\n@Injectable()\nexport class CanProceedToCountryGuard implements CanActivate {\n\n\tprivate _countryList: Country[];\n\n\tprivate _currentUrl: string;\n\n\tconstructor(\n\t\tprivate _store$: Store\n\t) { }\n\n\tprivate takeNameOfRegionOrSubRegion(name: string): string {\n\t\treturn name.toLowerCase().split(' ')[0];\n\t}\n\n\tprivate isExistRegionOrSubRegionRouteName(name: string): boolean {\n\t\tconst currentCountryRegionOrSubRegionRouteName: string = this.takeNameOfRegionOrSubRegion(name);\n\t\tif (this._currentUrl.includes(currentCountryRegionOrSubRegionRouteName)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate checkCountry(countryRouterName: string): void {\n\t\tlet isExistCurrentUrlCountry: boolean;\n\t\tconst searchCountry: Country = this._countryList.find((country: Country) => {\n\t\t\tif (Boolean(country)) {\n\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\n\t\t\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.split(' ')\n\t\t\t\t\t.join('-');\n\t\t\t\tif (currentCountryRouterName === countryRouterName) {\n\t\t\t\t\treturn country;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (Boolean(searchCountry)) {\n\t\t\tisExistCurrentUrlCountry = this.isExistRegionOrSubRegionRouteName(searchCountry.region);\n\t\t\tisExistCurrentUrlCountry = this.isExistRegionOrSubRegionRouteName(searchCountry.subRegion);\n\t\t}\n\t\tif (!isExistCurrentUrlCountry) {\n\t\t\tconst errorMessage: string = `There is no country with this name (${countryRouterName}) in this region and sub-region`;\n\t\t\tthrow new Error(errorMessage);\n\t\t}\n\t}\n\n\tpublic canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\tthis._currentUrl = state.url;\n\t\tconst currentCountryName: string = next.params.countryName;\n\t\tthis._store$.select(selectCountryList)\n\t\t\t.subscribe((countryList: Country[]) => {\n\t\t\t\tthis._countryList = countryList;\n\t\t\t\tthis.checkCountry(currentCountryName);\n\t\t\t}).unsubscribe();\n\n\t\treturn true;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { selectCountryList } from '../../store/country-list/country-list.selectors';\nimport { Country } from '../../models/country-list/country';\n\n@Injectable()\nexport class CanProceedToRegionGuard implements CanActivate {\n\n\tprivate _countryList: Country[];\n\n\tconstructor(\n\t\tprivate _store$: Store\n\t) { }\n\n\tprivate checkRouterParams(regionName: string, subRegionName: string): void {\n\t\tconst currentRegionSubRegionCountry: Country = this._countryList.find((country: Country) => {\n\t\t\tif (Boolean(country)) {\n\t\t\t\tconst currentCountryRegionName: string = country.region.split(' ')[0].toLowerCase();\n\t\t\t\tconst currentCountrySubRegionName: string = country.subRegion.split(' ')[0].toLowerCase();\n\t\t\t\tif (currentCountryRegionName === regionName && currentCountrySubRegionName === subRegionName) {\n\t\t\t\t\treturn country;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (!Boolean(currentRegionSubRegionCountry)) {\n\t\t\tconst errorMessage: string = `There are no countries in such region (${regionName}) and sub-region (${subRegionName})`;\n\t\t\tthrow new Error(errorMessage);\n\t\t}\n\t}\n\n\tpublic canActivate(next: ActivatedRouteSnapshot): boolean {\n\t\tconst currentRegion: string = next.params.regionName;\n\t\tconst currentSubRegion: string = next.params.subRegionName;\n\n\t\tthis._store$.select(selectCountryList)\n\t\t\t.subscribe((countryList: Country[]) => {\n\t\t\t\tthis._countryList = countryList;\n\t\t\t}).unsubscribe();\n\n\t\tthis.checkRouterParams(currentRegion, currentSubRegion);\n\t\treturn true;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatArea'\n})\nexport class FormatAreaPipe implements PipeTransform {\n\n\tpublic transform(value: number): string {\n\t\tconst currentCountryArea: string = value.toString();\n\t\tconst currentCountryAreaInfoWithSpacesAfterEachThirdCharacters: string = currentCountryArea\n\t\t\t.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, '$1' + ' ');\n\t\tconst countryAreaInfo: string = currentCountryAreaInfoWithSpacesAfterEachThirdCharacters + ' sq/km';\n\t\treturn countryAreaInfo;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatForestArea'\n})\nexport class FormatForestAreaPipe implements PipeTransform {\n\n\tpublic transform(value: number): string {\n\t\tconst currentCountryForestArea: number = value;\n\t\tconst currentCountryForestAreaInfo: string = `${currentCountryForestArea}%`;\n\t\treturn currentCountryForestAreaInfo;\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'formatRegionTitle'\n})\nexport class FormatRegionTitlePipe implements PipeTransform {\n\n\tpublic transform(value: string): string {\n\t\treturn value.split('-').map((currentWord: string) => {\n\t\t\treturn currentWord[0].toUpperCase() + currentWord.slice(1);\n\t\t}).join(' ');\n\t}\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { Country } from '../models/country-list/country';\nimport { selectSubRegionsCountries } from '../store/country-list/country-list.selectors';\nimport { FacadeServiceCountryList } from '../store/country-list/country-list.facade';\n\n@Component({\n\tselector: 'app-region',\n\ttemplateUrl: './region.component.html',\n\tstyleUrls: ['./region.component.scss']\n})\nexport class RegionComponent implements OnInit, OnDestroy {\n\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\n\n\tprivate _windowScrollHeight: Number = 2;\n\tprivate _scrollBlock: HTMLElement;\n\n\tpublic regionName: string;\n\tpublic subRegionName: string;\n\n\tpublic subRegionsCountries: Country[];\n\n\tconstructor(\n\t\tprivate _store$: Store,\n\t\tprivate _router: Router,\n\t\tprivate _activatedRoute: ActivatedRoute,\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList,\n\t) { }\n\n\tprivate navigateToCurrentSubRegionRoute(): void {\n\t\tconst firstSubRegionCountryName: string = this.subRegionsCountries[0].name;\n\t\tconst firstSubRegionCountryRouterName: string = firstSubRegionCountryName.replace(/\\./g, '')\n\t\t\t.replace(/\\(|\\)/g, '')\n\t\t\t.toLowerCase()\n\t\t\t.split(' ')\n\t\t\t.join('-');\n\t\tthis._router.navigate(['/countries', 'region', this.regionName, this.subRegionName, 'country', firstSubRegionCountryRouterName]);\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tconst scrollUpButton: HTMLElement = document.querySelector('.-app-scroll-up-button_sub-region-category');\n\t\tthis._scrollBlock = document.querySelector('.-app-region');\n\n\t\tthis._scrollBlock.addEventListener('scroll', () => {\n\t\t\tif (this._scrollBlock.scrollTop > this._windowScrollHeight) {\n\t\t\t\tscrollUpButton.classList.add('-app-scroll-up-button_sub-region-category-visible');\n\t\t\t} else {\n\t\t\t\tscrollUpButton.classList.remove('-app-scroll-up-button_sub-region-category-visible');\n\t\t\t}\n\t\t});\n\n\t\tthis._activatedRoute.params\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((params: Params) => {\n\t\t\t\tthis.regionName = params.regionName;\n\t\t\t\tthis.subRegionName = params.subRegionName;\n\t\t\t\tthis._facadeCountryListService.searchSubRegionCountries(this.regionName, this.subRegionName);\n\t\t\t});\n\n\t\tthis._store$.select(selectSubRegionsCountries)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroySubject$)\n\t\t\t).subscribe((subRegionsCountries: Country[]) => {\n\t\t\t\tif (Boolean(subRegionsCountries)) {\n\t\t\t\t\tthis.subRegionsCountries = subRegionsCountries;\n\t\t\t\t\tthis.navigateToCurrentSubRegionRoute();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis._destroySubject$.next(true);\n\t\tthis._destroySubject$.complete();\n\t}\n\n\tpublic scrollTop(): void {\n\t\tthis._scrollBlock.scrollTo(0, 0);\n\t}\n\n}\n","<div class=\"-app-region\">\n    <h2 class=\"-app-region__title\">\n        {{ regionName | formatRegionTitle }} Region\n    </h2>\n    <h3  class=\"-app-region__sub-title\">\n        {{ subRegionName | formatRegionTitle }} Subregion\n    </h3>\n    <div class=\"-app-region__country-list\">\n        <app-country-name \n            *ngFor=\"let country of subRegionsCountries\" \n            [country]=\"country\">\n        </app-country-name>\n    </div>\n    <a \n        class=\"-app-scroll-up-button -app-scroll-up-button_sub-region-category\"\n        (click)=\"scrollTop()\">\n    </a>\n</div>\n<div class=\"-app-region__current-country\">\n    <router-outlet></router-outlet>\n</div>\n"]}