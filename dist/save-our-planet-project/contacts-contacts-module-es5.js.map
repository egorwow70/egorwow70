{"version":3,"sources":["webpack:///src/app/contacts/contacts-routing.module.ts","webpack:///src/app/contacts/contacts.component.ts","webpack:///src/app/contacts/contacts.component.html","webpack:///src/app/contacts/contacts.module.ts"],"names":["routes","path","component","ContactsRoutingModule","forChild","imports","exports","ContactsComponent","initContactForm","myFormContact","userName","required","userNameValidator","userEmail","pattern","userMessage","control","currentUserName","value","minNumberOfCharacters","maxNumberOfCharacters","isValidUserName","userNameInputControlName","_userMessage","controls","content","onlyLatinCharactersNumbersAndUnderscoreMatch","RegExp","test","Boolean","includes","minNumbers","maxNumbers","length","search","validMatch","isContentIncludeNumbers","isUserNameIncludeNumbers","isContentValidMatch","isUserNameValidMatch","isValidNumberOfContentCharacters","isValidUserNameNumberOfCharacters","isContentIncludeUnderscore","isUserNameIncludesUnderscore","contact","selector","templateUrl","styleUrls","ContactsModule","declarations","providers","bootstrap"],"mappings":"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","file":"contacts-contacts-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ContactsComponent } from './contacts.component';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: ContactsComponent\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class ContactsRoutingModule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-contacts',\n\ttemplateUrl: './contacts.component.html',\n\tstyleUrls: ['./contacts.component.scss']\n})\nexport class ContactsComponent {\n\n\tprivate _userMessage: string;\n\n\tpublic myFormContact: FormGroup;\n\n\tconstructor(\n\n\t) {\n\t\tthis.initContactForm();\n\t}\n\n\tpublic static validMatch(content: string): boolean {\n\t\tconst onlyLatinCharactersNumbersAndUnderscoreMatch: RegExp = new RegExp('^[a-zA-Z_0-9]*$');\n\t\treturn (onlyLatinCharactersNumbersAndUnderscoreMatch.test(content))\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isUserNameIncludesUnderscore(userName: string): boolean {\n\t\treturn Boolean(userName.includes('_'))\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isValidUserNameNumberOfCharacters(\n\t\tuserName: string,\n\t\tminNumbers: number,\n\t\tmaxNumbers: number\n\t): boolean {\n\t\treturn (\n\t\t\tuserName.length >= minNumbers\n\t\t\t&& userName.length <= maxNumbers\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isUserNameIncludeNumbers(userName: string): boolean {\n\t\treturn (Boolean(userName.search(/\\d/) >= 0))\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\tpublic static isUserNameValidMatch(userName: string): boolean {\n\t\treturn ContactsComponent.validMatch(userName);\n\t}\n\n\tpublic static isValidUserName(\n\t\tuserName: string,\n\t\tminNumbers: number,\n\t\tmaxNumbers: number\n\t): boolean {\n\t\tif (Boolean(userName)) {\n\t\t\tconst isContentIncludeNumbers: boolean = ContactsComponent.isUserNameIncludeNumbers(userName);\n\t\t\tconst isContentValidMatch: boolean = ContactsComponent.isUserNameValidMatch(userName);\n\t\t\tconst isValidNumberOfContentCharacters: boolean = ContactsComponent.isValidUserNameNumberOfCharacters(\n\t\t\t\tuserName,\n\t\t\t\tminNumbers,\n\t\t\t\tmaxNumbers\n\t\t\t);\n\t\t\tconst isContentIncludeUnderscore: boolean = ContactsComponent.isUserNameIncludesUnderscore(userName);\n\t\t\tif (\n\t\t\t\t!isContentIncludeNumbers\n\t\t\t\t&& isContentValidMatch\n\t\t\t\t&& isValidNumberOfContentCharacters\n\t\t\t\t&& !isContentIncludeUnderscore\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate initContactForm(): void {\n\t\tthis.myFormContact = new FormGroup({\n\t\t\tuserName: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tthis.userNameValidator\n\t\t\t]),\n\t\t\tuserEmail: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.pattern('^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$')\n\t\t\t]),\n\t\t\tuserMessage: new FormControl('', [\n\t\t\t\tValidators.required\n\t\t\t])\n\t\t});\n\t}\n\n\tprivate userNameValidator(control: FormControl): { [s: string]: boolean } {\n\t\tconst currentUserName: string = control.value;\n\n\t\tconst minNumberOfCharacters: number = 3;\n\t\tconst maxNumberOfCharacters: number = 12;\n\n\t\tconst isValidUserName: boolean = ContactsComponent.isValidUserName(\n\t\t\tcurrentUserName,\n\t\t\tminNumberOfCharacters,\n\t\t\tmaxNumberOfCharacters\n\t\t);\n\t\tif (isValidUserName) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn { userNameInputControlName: true };\n\t\t}\n\t}\n\n\tpublic contact(): void {\n\t\tthis._userMessage = this.myFormContact.controls.userMessage.value;\n\t}\n\n}\n","<div class=\"-app-contacts\">\n    <div class=\"-app-contacts__header-wrapper\">\n        <div class=\"-app-contacts__header\">\n            <form \n                class=\"-app-contacts__form\"\n                [formGroup]=\"myFormContact\"\n                (ngSubmit)=\"contact()\">\n                <h2 class=\"-app-contacts__form-title\">\n                    Contact us\n                </h2>\n                <div class=\"-app-contacts__form-item\">\n                    <input \n                        class=\"-app-contacts__form-item-input\"\n                        name=\"name\"\n                        type=\"text\"\n                        formControlName=\"userName\"\n                        autocomplete=\"off\">\n                    <span \n                        class=\"-app-contacts__form-item-line\"\n                        [class.-app-contacts__form-item-line_valid]=\"myFormContact.controls['userName'].touched\n                            && myFormContact.controls['userName'].valid\">\n                    </span>\n                    <label \n                        class=\"-app-contacts__form-item-label\"\n                        [class.-app-contacts__form-item-label_invisible]=\"myFormContact.controls['userName'].dirty\">\n                        Name\n                    </label>\n                    <span \n                        class=\"-app-contacts__form-item-warning\"\n                        [class.-app-contacts__form-item-warning_invalid]=\"myFormContact.controls['userName'].touched\n                            && myFormContact.controls['userName'].invalid\"\n                        title=\"Invalid value. Maximum number of characters from 3 to 12\n                        and without any characters and numbers\">\n                    </span>\n                    <span \n                        class=\"-app-contacts__form-item-check\"\n                        [class.-app-contacts__form-item-check_valid]=\"myFormContact.controls['userName'].touched\n                            && myFormContact.controls['userName'].valid\">\n                    </span>\n                </div>\n                <div class=\"-app-contacts__form-item\">\n                    <input \n                        class=\"-app-contacts__form-item-input\"\n                        name=\"email\"\n                        type=\"email\"\n                        formControlName=\"userEmail\">\n                    <span \n                        class=\"-app-contacts__form-item-line\"\n                        [class.-app-contacts__form-item-line_valid]=\"myFormContact.controls['userEmail'].touched\n                            && myFormContact.controls['userEmail'].valid\">\n                    </span>\n                    <label \n                        class=\"-app-contacts__form-item-label\"\n                        [class.-app-contacts__form-item-label_invisible]=\"myFormContact.controls['userEmail'].dirty\">\n                        Email\n                    </label>\n                    <span \n                        class=\"-app-contacts__form-item-warning\"\n                        [class.-app-contacts__form-item-warning_invalid]=\"myFormContact.controls['userEmail'].touched\n                            && myFormContact.controls['userEmail'].invalid\"\n                        title=\"Invalid value. Example: egor@g.c\">\n                    </span>\n                    <span \n                        class=\"-app-contacts__form-item-check\"\n                        [class.-app-contacts__form-item-check_valid]=\"myFormContact.controls['userEmail'].touched\n                            && myFormContact.controls['userEmail'].valid\">\n                    </span>\n                </div>\n                <div class=\"-app-contacts__form-item -app-contacts__form-item_textarea\">\n                    <textarea \n                        class=\"-app-contacts__form-item-textarea\"\n                        name=\"message\"\n                        formControlName=\"userMessage\"\n                        autocomplete=\"off\">\n                    </textarea>\n                    <label \n                        class=\"-app-contacts__form-item-label -app-contacts__form-item-label_textarea\"\n                        [class.-app-contacts__form-item-label_invisible]=\"myFormContact.controls['userMessage'].dirty\">\n                        Message\n                    </label>\n                    <span \n                        class=\"-app-contacts__form-item-warning -app-contacts__form-item-warning_textarea\"\n                        [class.-app-contacts__form-item-warning_invalid]=\"myFormContact.controls['userMessage'].touched\n                            && myFormContact.controls['userMessage'].invalid\"\n                        title=\"Enter any message\">\n                    </span>\n                    <span \n                        class=\"-app-contacts__form-item-check -app-contacts__form-item-check_textarea\"\n                        [class.-app-contacts__form-item-check_valid]=\"myFormContact.controls['userMessage'].touched\n                            && myFormContact.controls['userMessage'].valid\">\n                    </span>\n                </div>\n                <button \n                    class=\"-app-contacts__form-button\"\n                    type=\"submit\"\n                    [disabled]=\"myFormContact.controls['userName'].invalid \n                        || myFormContact.controls['userEmail'].invalid\n                        || myFormContact.controls['userMessage'].invalid\">\n                    Contact\n                </button>\n            </form>\n            <div class=\"-app-contacts__menu\">\n                <a \n                    class=\"-app-contacts__menu-link\"\n                    routerLink=\"/home\">\n                    Project: save our planet project\n                </a>\n                <a \n                    class=\"-app-contacts__menu-link\"\n                    href=\"mailto:egor.samuilenok@gmail.com\">\n                    Email: egor@samuilenok.com\n                </a>\n                <a \n                    class=\"-app-contacts__menu-link\"\n                    hres=\"tel:+375447860634\">\n                    Tel: +375-44-786-06-34\n                </a>\n            </div>\n        </div>\n    </div>\n    <div class=\"-app-contacts__link-bar\">\n        <div class=\"-app-contacts__bar-link -app-contacts__bar-link_vk\">\n        </div>\n        <div class=\"-app-contacts__bar-link -app-contacts__bar-link_telegram\">\n        </div>\n        <div class=\"-app-contacts__bar-link -app-contacts__bar-link_instagram\">\n        </div>\n        <div class=\"-app-contacts__bar-link -app-contacts__bar-link_linkedin\">\n        </div>\n        <div class=\"-app-contacts__bar-link -app-contacts__bar-link_twitter\">\n        </div>\n        <div class=\"-app-contacts__bar-link -app-contacts__bar-link_facebook\">\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { ContactsRoutingModule } from './contacts-routing.module';\r\nimport { ContactsComponent } from './contacts.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tContactsComponent,\r\n\t],\r\n\timports: [\r\n\t\tContactsRoutingModule,\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule\r\n\t],\r\n\tproviders: [],\r\n\tbootstrap: [ContactsComponent]\r\n})\r\nexport class ContactsModule {\r\n\r\n}\r\n"]}