{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/country-list/capital-list-snapshot.ts","webpack:///src/app/models/country-list/capital.ts","webpack:///src/app/models/country-list/country.ts","webpack:///src/app/models/donation-list/donation.ts","webpack:///src/app/models/donation-statistic-list/statistic-element-type.ts","webpack:///src/app/models/donation-statistic-list/statistic-sub-category-type.ts","webpack:///src/app/models/tree-list/tree-donation.ts","webpack:///src/app/models/tree-list/tree-type.ts","webpack:///src/app/models/tree-list/tree.ts","webpack:///src/app/models/user-list/user.ts","webpack:///src/app/my-error-handler/my-error-handler.module.ts","webpack:///src/app/not-found/not-found-routing.module.ts","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/not-found/not-found.module.ts","webpack:///src/app/services/country-data.service.ts","webpack:///src/app/services/donation-list-data.service.ts","webpack:///src/app/services/tree-data.service.ts","webpack:///src/app/services/user-data.service.ts","webpack:///src/app/store/country-list/country-list.actions.ts","webpack:///src/app/store/country-list/country-list.effects.ts","webpack:///src/app/store/country-list/country-list.facade.ts","webpack:///src/app/store/country-list/country-list.reducer.ts","webpack:///src/app/store/country-list/country-list.selectors.ts","webpack:///src/app/store/country-list/index.ts","webpack:///src/app/store/donation-list/donation-list.actions.ts","webpack:///src/app/store/donation-list/donation-list.effects.ts","webpack:///src/app/store/donation-list/donation-list.facade.ts","webpack:///src/app/store/donation-list/donation-list.reducer.ts","webpack:///src/app/store/donation-list/donation-list.selectors.ts","webpack:///src/app/store/donation-list/index.ts","webpack:///src/app/store/donation-statistic-list/donation-statistic-list.actions.ts","webpack:///src/app/store/donation-statistic-list/donation-statistic-list.facade.ts","webpack:///src/app/store/donation-statistic-list/donation-statistic-list.reducer.ts","webpack:///src/app/store/donation-statistic-list/index.ts","webpack:///src/app/store/index.ts","webpack:///src/app/store/tree-list/index.ts","webpack:///src/app/store/tree-list/tree-list.actions.ts","webpack:///src/app/store/tree-list/tree-list.effects.ts","webpack:///src/app/store/tree-list/tree-list.facade.ts","webpack:///src/app/store/tree-list/tree-list.reducer.ts","webpack:///src/app/store/tree-list/tree-list.selectors.ts","webpack:///src/app/store/user-list/index.ts","webpack:///src/app/store/user-list/user-list.actions.ts","webpack:///src/app/store/user-list/user-list.effects.ts","webpack:///src/app/store/user-list/user-list.facade.ts","webpack:///src/app/store/user-list/user-list.reducer.ts","webpack:///src/app/store/user-list/user-list.selectors.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","loadChildren","m","CountryMapModule","CountryListModule","TreeListModule","DonationStatisticModule","UserProfileModule","RegistrationModule","DonationListBeforeRegistrationModule","AboutModule","ContactsModule","AppRoutingModule","forRoot","imports","AppComponent","store$","_facadeCountryListService","_facadeTreeListService","_facadeUserListService","_facadeDonationListService","_destroySubject$","_countryList","title","isLoading","select","pipe","subscribe","userList","Boolean","initUserList","countryList","initCountryList","capitalsCoordinatesData","saveCapitalsCoordinatesData","isInitedCountries","initCapitalsCoordinatesData","initCountriesForestAreaData","isInitedCountriesForestAreaData","initCountriesForestArea","isInitedCapitalsCoordinatesData","initCapitalsCoordinates","countriesLoadingSuccess","isInitedTrees","treesLoadingSuccess","treeList","initTreeList","donationList","initDonationList","next","complete","menuMode","selector","templateUrl","styleUrls","AppModule","provide","useClass","instrument","maxAge","logOnly","production","declarations","providers","bootstrap","CapitalListSnapshot","capitalList","json","filter","map","fromJSON","capitalListSnapshot","toJSON","Capital","latitude","longitude","name","_latitude","_longitude","_name","newlatitude","newlongitude","newName","capital","Country","nativeName","region","subRegion","population","area","forestArea","flag","timeZone","_id","_nativeName","_region","_subRegion","_capital","_population","_area","_forestArea","_flag","_timeZone","clone","country","JSON","stringify","newId","newNativeName","newRegion","newSubRegion","newCapital","newPopulation","newArea","newForestArea","newFlag","newTimeZone","timezones","length","undefined","alpha2Code","subregion","Donation","treeDonation","date","_country","_treeDonation","_date","donation","newCountry","newTreeDonation","newDate","amount","cost","tree","description","picture","size","environment","keyFeature","Number","StatisticElementType","StatisticSubCategoryType","TreeDonation","_amont","_cost","_tree","newAmount","newCost","newTree","TreeType","Tree","type","_description","_picture","_size","_environment","_keyFeature","_type","newDescription","newPicture","newSize","newEnvironment","newKeyFeature","newType","User","surName","password","email","profileImage","age","medicalPoints","_surName","_password","_email","_profileImage","_age","_donationList","_medicalPoints","donationListClone","countryListClone","user","newSurname","newPassword","newEmail","newProfileImage","newAge","newDonationList","newMedicalPoints","surname","MyErrorHandler","_router","error","console","log","message","navigate","component","NotFoundRoutingModule","forChild","NotFoundComponent","goHome","NotFoundModule","CountryListDataService","_httpClient","_baseUrl","_countryUrl","get","LSData","localStorage","getItem","countryListLSKey","parse","countryList$","currentCountry","currentCountryCapitalName","response","GeoObjectCollection","featureMember","GeoObject","Point","pos","location","coordinates","split","newCountryCapitalName","loadForestAreaDataDelay","forestAreaObject","value","setItem","DonationListDataService","TreeListDataService","UserListDataService","countryListActionsType","InitCountryListAction","initCountries","InitCountryListSuccessAction","_payload","initCountriesSuccess","InitCapitalsCoordinatesAction","InitCapitalsCoordinatesDataAction","InitCapitalsCoordinatesDataSuccessAction","initCapitalsCoordinatesDataSuccess","InitCountriesForestAreaAction","InitCountriesForestAreaDataAction","InitCountriesForestAreaDataSuccessAction","initCountriesForestAreaDataSuccess","countriesForestAreaData","IsCountriesLoadingSuccessAction","isCountriesLoadingSuccess","SearchSubRegionCountriesAction","searchSubRegionCountries","subRegionName","regionName","SearchCountryAction","searchCountry","SearchCountrySuccessAction","searchCountrySuccess","SearchPreviousCountryAction","searchPreviousCountry","SearchNextCountryAction","searchNextCountry","ToggleMapModeCountryListAction","toggleMapMode","ToggleShowCapitalsModeCountryListAction","toggleShowCapitalsMode","CountryListEffects","_actions$","_countryListDataService","loadCountriesList","currentCountryList","loadCountriesForestAreaData","countriesForestData","payload","loadCapitalsCoordinatesData","currentCapitalsData","FacadeServiceCountryList","_store$","capitalsData","dispatch","countryName","searchCurrentCountry","countryListFeatureKey","initialState","isSearchLoading","isMapMode","isGlobeMode","isShowCapitalsMode","subRegionsCountries","countryListReducer","state","action","find","currentRegionCountries","toLowerCase","countrySubRegionInfo","currentCountryRouterName","replace","join","previousCountryIndex","findIndex","nextCountryIndex","StateReducerCountryList","selectStateCountryList","selectCountryListIsLoading","selectCountryList","selectCountryListIsInitedCountries","selectCountriesForestAreaData","selectIsInitedCountriesForestAreaData","selectCapitalsCoordinatesData","selectIsInitedCapitalsCoordinatesData","selectSubRegionsCountries","selectSearchCountry","selectSearchPreviousCountry","selectSearchNextCountry","selectIsCountrySearchLoading","selectIsMapMode","selectIsGlobeMode","selectIsShowCapitalsMode","donationListActionsType","InitDonationListAction","InitDonationListSuccessAction","InitDonationListSuccess","InitNewUserDonationBeforeRegistrationAction","initNewUserDonationBeforeRegistration","MakeDonationAction","makeDonation","userId","DeleteDonationAction","deleteDonation","InitNewCountryForDonationAction","initNewCountryForDonation","DeleteNewCountryForDonationAction","deleteNewCountryForDonation","InitDonationCurrentCountryAction","initDonationCurrentCountry","InitUserDonationListAction","initUserDonationList","InitUserDonationListSuccessAction","initUserDonationListSuccess","InitAllDonatorsDataByCostAction","initAllDonatorsDataByCost","InitAllDonatorsDataByTreeAction","initAllDonatorsDataByTree","DonationListEffects","_donationListDataService","loadDonationList","FacadeServiceDonationList","donationListFeatureKey","isInitedDonationList","isInitedDonationListBeforRegistration","isInitedCountriesForDonation","isInitedUserDonationList","beforeRegistrationUserDonationList","countriesForDonation","userDonationList","donationListReducer","newDonationListBeforeRegistration","newDonation","newCurrentUserDonation","newUserDonationList","newBeforeRegistrationUserDonationList","equals","isInitedDonationListAfterMakeDonation","isInitedDonationListAfterDeleteDonation","searchNewCountryList","isUserDonationListInited","StateReducerDonationList","selectStateDonationList","selectDonationListBeforeRegistration","selectCountriesForDonation","selectIsInitedDonationListBeforeRegistration","selectIsInitedCountriesForDonation","selectDonationList","selectUserDonationList","selectIsInitedUserDonationList","donationStatisticListActionsType","InitUserListDonationStatisticListAction","InitDonationListDonationStatisticListAction","InitAllDonatorsDataByCostDonationStatisticListAction","InitAllDonatorsDataByTreeDonationStatisticListAction","SortTopDonationStatisticListAction","sortTop","SortBottomDonationStatisticListAction","sortBottom","InitAllCountriesDataByCostDonationStatisticListAction","initAllCountriesDataByCost","InitAllCountriesDataByTreeDonationStatisticListAction","initAllCountriesDataByTree","InitTopTenDataStatisticDonationStatisticListAction","initTopTenDataStatistic","FacadeServiceDonationStatisticList","statisticSubCategory","statisticElement","AD","BC","sortTopDonationStatisticList","BT","TD","AC","TC","donationStatisticListFeatureKey","isInitedUserList","isInitedAllDataStatistic","isInitedTopTenDataStatistic","isInitedStatisticDataByCost","isInitedStatisticDataByTree","isSortedByIncrease","isSortedByDecrease","statisticData","donationStatisticListReducer","allDonatorsStatisticDataByCost","space","userFullName","userTotalDonationCost","userProfileImage","points","bullet","donator","allDonatorsStatisticDataByTree","userTotalDonationTreeAmount","dataStatisticNumber","reverse","slice","sort","statistic","currentStatistic","uniqueCountryNameList","donationsStatisticDataByTree","takeNumberWordsInCountryName","currentCountryName","isCountryNameInUniqueCountryNameList","push","statisticCountryName","currentCountryCostAmount","currentDonation","currentCountryTreeAmount","StateReducerDonationStatisticList","reducers","treeListActionsType","InitTreeListAction","initTrees","InitTreeListSuccessAction","initTreesSuccess","IsTreesLoadingSuccessAction","isTreesLoadingSuccess","SearchTreeCategoryTreesAction","searchTreeCategoryTrees","treeCategory","SearchTreeAction","searchTree","SearchTreeSuccessAction","searchTreeSuccess","TreeRouterModeAction","treeRouterMode","GoFromTreeRouterAction","goFromTreeRouterMode","TreeListEffects","_treeListDataService","loadTreeList","FacadeServiceTreeList","treeListFeatureKey","treeCategoryTrees","isTreeRouterMode","treeListReducer","currentTreeRouterName","StateReducerTreeList","selectStateTreeList","selectTreeListIsLoading","selectTreeList","selectIsInitedTrees","selectTreeCategoryTrees","selectSearchTree","selectIsTreeSearchLoading","selectIsTreeRouterModeAction","userListActionsType","InitUserListAction","InitUserListSuccessAction","initUserListSuccess","InitUserAction","initUser","InitNewUserAction","initNewUser","InitNewUserProfileImageUserListAction","initNewUserProfileImage","newImage","PickUpPointsFromUserUserListAction","pickUpPointsFromUser","AddMedicalPointsForCurrentUserUserListAction","addMedicalPointsForCurrentUser","UserListEffects","_userListDataService","loadUserList","FacadeServiceUserList","image","userListFeatureKey","userListReducer","newUser","currentUser","StateReducerUserList","selectStateUserList","selectUser","selectUserList","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tpathMatch: 'full',\r\n\t\tredirectTo: 'home'\r\n\t},\r\n\t{\r\n\t\tpath: 'home',\r\n\t\tloadChildren: () => import('./country-map/country-map.module').then((m: any) => m.CountryMapModule),\r\n\t},\r\n\t{\r\n\t\tpath: 'countries',\r\n\t\tloadChildren: () => import('./country-list/country-list.module').then((m: any) => m.CountryListModule),\r\n\t},\r\n\t{\r\n\t\tpath: 'trees',\r\n\t\tloadChildren: () => import('./tree-list/tree-list.module').then((m: any) => m.TreeListModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'donation-statistic',\r\n\t\tloadChildren: () => import('./donation-statistic/donation-statistic.module').then((m: any) => m.DonationStatisticModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'user-profile',\r\n\t\tloadChildren: () => import('./user-profile/user-profile.module').then((m: any) => m.UserProfileModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'registration',\r\n\t\tloadChildren: () => import('./registration/registration.module').then((m: any) => m.RegistrationModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'donation',\r\n\t\tloadChildren: () => import('./donation-list-before-registration/donation-list-before-registration.module')\r\n\t\t\t.then((m: any) => m.DonationListBeforeRegistrationModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'about',\r\n\t\tloadChildren: () => import('./about/about.module').then((m: any) => m.AboutModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'contacts',\r\n\t\tloadChildren: () => import('./contacts/contacts.module').then((m: any) => m.ContactsModule)\r\n\t},\r\n\t{\r\n\t\tpath: '**',\r\n\t\tredirectTo: 'not-found'\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport {\r\n\tselectCountryListIsLoading,\r\n\tselectCountryListIsInitedCountries,\r\n\tselectIsInitedCountriesForestAreaData,\r\n\tselectIsInitedCapitalsCoordinatesData,\r\n\tselectCountryList,\r\n\tselectCapitalsCoordinatesData\r\n} from './store/country-list/country-list.selectors';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { Country } from './models/country-list/country';\r\nimport { FacadeServiceCountryList } from './store/country-list/country-list.facade';\r\nimport { Capital } from './models/country-list/capital';\r\nimport { selectTreeList, selectIsInitedTrees } from './store/tree-list/tree-list.selectors';\r\nimport { Tree } from './models/tree-list/tree';\r\nimport { selectUserList } from './store/user-list/user-list.selectors';\r\nimport { User } from './models/user-list/user';\r\nimport { Donation } from './models/donation-list/donation';\r\nimport { selectDonationList } from './store/donation-list/donation-list.selectors';\r\nimport { FacadeServiceUserList } from './store/user-list/user-list.facade';\r\nimport { FacadeServiceDonationList } from './store/donation-list/donation-list.facade';\r\nimport { FacadeServiceTreeList } from './store/tree-list/tree-list.facade';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\r\n\r\n\tprivate _countryList: Country[] = null;\r\n\r\n\tpublic title: string = 'save-our-planet-project';\r\n\tpublic menuMode: boolean;\r\n\tpublic isLoading: boolean = true;\r\n\r\n\tconstructor(\r\n\t\tprivate store$: Store,\r\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList,\r\n\t\tprivate _facadeTreeListService: FacadeServiceTreeList,\r\n\t\tprivate _facadeUserListService: FacadeServiceUserList,\r\n\t\tprivate _facadeDonationListService: FacadeServiceDonationList,\r\n\t) {\r\n\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\r\n\t\tthis.store$.select(selectUserList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((userList: User[]) => {\r\n\t\t\t\tif (!Boolean(userList)) {\r\n\t\t\t\t\tthis._facadeUserListService.initUserList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCountryList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((countryList: Country[]) => {\r\n\t\t\t\tif (Boolean(countryList)) {\r\n\t\t\t\t\tthis._countryList = countryList;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._facadeCountryListService.initCountryList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCapitalsCoordinatesData)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((capitalsCoordinatesData: Capital[]) => {\r\n\t\t\t\tif (capitalsCoordinatesData) {\r\n\t\t\t\t\tthis._facadeCountryListService.saveCapitalsCoordinatesData(capitalsCoordinatesData);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCountryListIsLoading)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isLoading: boolean) => {\r\n\t\t\t\tthis.isLoading = isLoading;\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCountryListIsInitedCountries)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedCountries: boolean) => {\r\n\t\t\t\tif (isInitedCountries) {\r\n\t\t\t\t\tthis._facadeCountryListService.initCapitalsCoordinatesData(this._countryList);\r\n\t\t\t\t\tthis._facadeCountryListService.initCountriesForestAreaData();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectIsInitedCountriesForestAreaData)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedCountriesForestAreaData: boolean) => {\r\n\t\t\t\tif (isInitedCountriesForestAreaData) {\r\n\t\t\t\t\tthis._facadeCountryListService.initCountriesForestArea();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectIsInitedCapitalsCoordinatesData)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedCapitalsCoordinatesData: boolean) => {\r\n\t\t\t\tif (isInitedCapitalsCoordinatesData) {\r\n\t\t\t\t\tthis._facadeCountryListService.initCapitalsCoordinates();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tcombineLatest([\r\n\t\t\tthis.store$.select(selectIsInitedCountriesForestAreaData)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t\t),\r\n\t\t\tthis.store$.select(selectIsInitedCapitalsCoordinatesData)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t\t)\r\n\t\t]).subscribe(([isInitedCountriesForestAreaData, isInitedCapitalsCoordinatesData]: [boolean, boolean]) => {\r\n\t\t\tif (isInitedCountriesForestAreaData && isInitedCapitalsCoordinatesData) {\r\n\t\t\t\tthis._facadeCountryListService.countriesLoadingSuccess();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.store$.select(selectIsInitedTrees)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedTrees: boolean) => {\r\n\t\t\t\tif (isInitedTrees) {\r\n\t\t\t\t\tthis._facadeTreeListService.treesLoadingSuccess();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectTreeList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((treeList: Tree[]) => {\r\n\t\t\t\tif (!Boolean(treeList)) {\r\n\t\t\t\t\tthis._facadeTreeListService.initTreeList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectDonationList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((donationList: Donation[]) => {\r\n\t\t\t\tif (!Boolean(donationList)) {\r\n\t\t\t\t\tthis._facadeDonationListService.initDonationList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroySubject$.next(true);\r\n\t\tthis._destroySubject$.complete();\r\n\t}\r\n\r\n\tpublic toggleMenuMode(): void {\r\n\t\tthis.menuMode = !this.menuMode;\r\n\t}\r\n}\r\n","<div \r\n    class=\"-app\" \r\n    *ngIf=\"!isLoading\">\r\n    <div \r\n        class=\"-app-navigation\" \r\n        [class.-app-navigation_menu-mode]=\"menuMode\">\r\n        <a \r\n            class=\"-app-navigation__profile-button\"\r\n            [class.-app-navigation__profile-button_menu-mode]=\"menuMode\"\r\n            title=\"profile\"\r\n            routerLink=\"/user-profile\">\r\n        </a>\r\n        <a \r\n            class=\"-app-navigation__donation-button\"\r\n            [class.-app-navigation__donation-button_menu-mode]=\"menuMode\"\r\n            title=\"donate\"\r\n            routerLink=\"/donation\">\r\n        </a>\r\n        <a \r\n            class=\"-app-navigation__statistic-button\"\r\n            [class.-app-navigation__statistic-button_menu-mode]=\"menuMode\"\r\n            title=\"donation statistic\"\r\n            routerLink=\"/donation-statistic\">\r\n        </a>\r\n        <div \r\n            class=\"-app-navigation__button\" \r\n            (click)=\"toggleMenuMode()\">\r\n            <span class=\"-app-navigation__button-line -app-navigation__button-line_top\">\r\n            </span>\r\n            <span class=\"-app-navigation__button-line -app-navigation__button-line_middle\">\r\n            </span>\r\n            <span class=\"-app-navigation__button-line -app-navigation__button-line_bottom\">\r\n            </span>\r\n        </div>\r\n        <ng-container *ngIf=\"menuMode\">\r\n            <div class=\"-app-navigation__menu\">\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\"\r\n                        (click)=\"toggleMenuMode()\"\r\n                        routerLink=\"/home\"\r\n                        routerLinkActive=\"active\"\r\n                        [routerLinkActiveOptions]=\"{ exact: true }\">\r\n                        Home\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/about\" \r\n                        routerLinkActive=\"active\">\r\n                        About\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/countries\" \r\n                        routerLinkActive=\"active\">\r\n                        Countries\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/trees\" \r\n                        routerLinkActive=\"active\">\r\n                        Trees\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/registration\" \r\n                        routerLinkActive=\"active\">\r\n                        Registration\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/contacts\" \r\n                        routerLinkActive=\"active\">\r\n                        Contacts\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"-app-router-outlet\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"-app-loading__representation -app-loading__representation_cinema\">\r\n    <div class=\"-app-loading__present-title\">\r\n        Egor Samuilionak presents\r\n    </div>\r\n    <div class=\"-app-loading__sub-title\">\r\n        <div  class=\"-app-loading__sub-title_first\">\r\n            <div class=\"-app-loading__sub-title_first-s\">\r\n                s\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_first-a\">\r\n                a\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_first-v\">\r\n                v\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_first-e\">\r\n                e\r\n            </div>\r\n        </div>\r\n        <div  class=\"-app-loading__sub-title_second\">\r\n            <div class=\"-app-loading__sub-title_second-o\">\r\n                o\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_second-u\">\r\n                u\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_second-r\">\r\n                r\r\n            </div>\r\n        </div>\r\n        <div  class=\"-app-loading__sub-title_third\">\r\n            <div class=\"-app-loading__sub-title_third-p\">\r\n                p\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-l\">\r\n                l\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-a\">\r\n                a\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-n\">\r\n                n\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-e\">\r\n                e\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-t\">\r\n                t\r\n            </div>\r\n        </div>\r\n        <div  class=\"-app-loading__sub-title_fourth\">\r\n            <div class=\"-app-loading__sub-title_fourth-p\">\r\n                p\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-r\">\r\n                r\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-o\">\r\n                o\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-j\">\r\n                j\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-e\">\r\n                e\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-c\">\r\n                c\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-t\">\r\n                t\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div\r\n    class=\"-app-loading\" \r\n    *ngIf=\"isLoading\">\r\n    <div class=\"-app-loading__title\">\r\n        Now loading\r\n    </div>\r\n    <div class=\"-app-loading__line\">\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../environments/environment';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { reducers } from './store/';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { CountryListEffects } from './store/country-list/country-list.effects';\r\nimport { TreeListEffects } from './store/tree-list/tree-list.effects';\r\nimport { UserListEffects } from './store/user-list/user-list.effects';\r\nimport { DonationListEffects } from './store/donation-list/donation-list.effects';\r\nimport { NotFoundModule } from './not-found/not-found.module';\r\nimport { TreeListDataService } from './services/tree-data.service';\r\nimport { UserListDataService } from './services/user-data.service';\r\nimport { DonationListDataService } from './services/donation-list-data.service';\r\nimport { CountryListDataService } from './services/country-data.service';\r\nimport { MyErrorHandler } from './my-error-handler/my-error-handler.module';\r\nimport { FacadeServiceCountryList } from './store/country-list/country-list.facade';\r\nimport { FacadeServiceDonationList } from './store/donation-list/donation-list.facade';\r\nimport { FacadeServiceDonationStatisticList } from './store/donation-statistic-list/donation-statistic-list.facade';\r\nimport { FacadeServiceTreeList } from './store/tree-list/tree-list.facade';\r\nimport { FacadeServiceUserList } from './store/user-list/user-list.facade';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tAppRoutingModule,\r\n\t\tHttpClientModule,\r\n\t\tStoreModule.forRoot(reducers),\r\n\t\tStoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n\t\tEffectsModule.forRoot([CountryListEffects, TreeListEffects, UserListEffects, DonationListEffects]),\r\n\t\tStoreRouterConnectingModule.forRoot(),\r\n\t\tNotFoundModule\r\n\t],\r\n\tproviders: [\r\n\t\tCountryListDataService,\r\n\t\tTreeListDataService,\r\n\t\tUserListDataService,\r\n\t\tDonationListDataService,\r\n\t\tFacadeServiceCountryList,\r\n\t\tFacadeServiceDonationList,\r\n\t\tFacadeServiceDonationStatisticList,\r\n\t\tFacadeServiceTreeList,\r\n\t\tFacadeServiceUserList,\r\n\t\t{ provide: ErrorHandler, useClass: MyErrorHandler },\r\n\t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { Capital } from './capital';\r\n\r\nexport class CapitalListSnapshot {\r\n\r\n\tconstructor(\r\n\t\tpublic capitalList: Capital[]\r\n\t) { }\r\n\r\n\tpublic static fromJSON(json: any): CapitalListSnapshot {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new CapitalListSnapshot(\r\n\t\t\t\t(json.capitalList || []).filter(Boolean).map(Capital.fromJSON)\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic static toJSON(capitalListSnapshot: CapitalListSnapshot): any {\r\n\t\treturn Boolean(capitalListSnapshot)\r\n\t\t\t? {\r\n\t\t\t\tcapitalList: (capitalListSnapshot.capitalList || []).filter(Boolean).map(Capital.toJSON)\r\n\t\t\t}\r\n\t\t\t: {};\r\n\t}\r\n}\r\n","export class Capital {\r\n\tprivate _latitude: number;\r\n\tprivate _longitude: number;\r\n\tprivate _name: string;\r\n\r\n\tconstructor(\r\n\t\tlatitude: number,\r\n\t\tlongitude: number,\r\n\t\tname: string\r\n\t) {\r\n\t\tthis._latitude = latitude;\r\n\t\tthis._longitude = longitude;\r\n\t\tthis._name = name;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Capital {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Capital(\r\n\t\t\t\tjson.latitude,\r\n\t\t\t\tjson.longitude,\r\n\t\t\t\tjson.name,\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic static toJSON(capital: Capital): any {\r\n\t\treturn Boolean(capital)\r\n\t\t\t? {\r\n\t\t\t\tlatitude: capital.latitude,\r\n\t\t\t\tlongitude: capital.longitude,\r\n\t\t\t\tname: capital.name\r\n\t\t\t}\r\n\t\t\t: {};\r\n\t}\r\n\r\n\tpublic set latitude(newlatitude: number) {\r\n\t\tthis._latitude = newlatitude;\r\n\t}\r\n\r\n\tpublic get latitude(): number {\r\n\t\treturn this._latitude;\r\n\t}\r\n\r\n\tpublic set longitude(newlongitude: number) {\r\n\t\tthis._longitude = newlongitude;\r\n\t}\r\n\r\n\tpublic get longitude(): number {\r\n\t\treturn this._longitude;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic clone(): Capital {\r\n\t\treturn new Capital(\r\n\t\t\tthis.latitude,\r\n\t\t\tthis.longitude,\r\n\t\t\tthis.name,\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Capital } from './capital';\r\n\r\nexport class Country {\r\n\tprivate _id: string;\r\n\tprivate _name: string;\r\n\tprivate _nativeName: string;\r\n\tprivate _region: string;\r\n\tprivate _subRegion: string;\r\n\tprivate _capital: Capital;\r\n\tprivate _population: number;\r\n\tprivate _area: number;\r\n\tprivate _forestArea: number;\r\n\tprivate _flag: string;\r\n\tprivate _timeZone: string;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tname: string,\r\n\t\tnativeName: string,\r\n\t\tregion: string,\r\n\t\tsubRegion: string,\r\n\t\tcapital: Capital,\r\n\t\tpopulation: number,\r\n\t\tarea: number,\r\n\t\tforestArea: number,\r\n\t\tflag: string,\r\n\t\ttimeZone: string\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._name = name;\r\n\t\tthis._nativeName = nativeName;\r\n\t\tthis._region = region;\r\n\t\tthis._subRegion = subRegion;\r\n\t\tthis._capital = capital;\r\n\t\tthis._population = population;\r\n\t\tthis._area = area;\r\n\t\tthis._forestArea = forestArea;\r\n\t\tthis._flag = flag;\r\n\t\tthis._timeZone = timeZone;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set nativeName(newNativeName: string) {\r\n\t\tthis._nativeName = newNativeName;\r\n\t}\r\n\r\n\tpublic get nativeName(): string {\r\n\t\treturn this._nativeName;\r\n\t}\r\n\r\n\tpublic set region(newRegion: string) {\r\n\t\tthis._region = newRegion;\r\n\t}\r\n\r\n\tpublic get region(): string {\r\n\t\treturn this._region;\r\n\t}\r\n\r\n\tpublic set subRegion(newSubRegion: string) {\r\n\t\tthis._subRegion = newSubRegion;\r\n\t}\r\n\r\n\tpublic get subRegion(): string {\r\n\t\treturn this._subRegion;\r\n\t}\r\n\r\n\tpublic set capital(newCapital: Capital) {\r\n\t\tthis._capital = newCapital;\r\n\t}\r\n\r\n\tpublic get capital(): Capital {\r\n\t\treturn this._capital;\r\n\t}\r\n\r\n\tpublic set population(newPopulation: number) {\r\n\t\tthis._population = newPopulation;\r\n\t}\r\n\r\n\tpublic get population(): number {\r\n\t\treturn this._population;\r\n\t}\r\n\r\n\tpublic set area(newArea: number) {\r\n\t\tthis._area = newArea;\r\n\t}\r\n\r\n\tpublic get area(): number {\r\n\t\treturn this._area;\r\n\t}\r\n\r\n\tpublic set forestArea(newForestArea: number) {\r\n\t\tthis._forestArea = newForestArea;\r\n\t}\r\n\r\n\tpublic get forestArea(): number {\r\n\t\treturn this._forestArea;\r\n\t}\r\n\r\n\tpublic set flag(newFlag: string) {\r\n\t\tthis._flag = newFlag;\r\n\t}\r\n\r\n\tpublic get flag(): string {\r\n\t\treturn this._flag;\r\n\t}\r\n\r\n\tpublic set timeZone(newTimeZone: string) {\r\n\t\tthis._timeZone = newTimeZone;\r\n\t}\r\n\r\n\tpublic get timeZone(): string {\r\n\t\treturn this._timeZone;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Country {\r\n\t\tconst timezones: string = (Boolean(json.timezones) ?? json.timezones.length > 0)\r\n\t\t\t? json.timezones[0]\r\n\t\t\t: undefined;\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Country(\r\n\t\t\t\tjson.alpha2Code,\r\n\t\t\t\tjson.name,\r\n\t\t\t\tjson.nativeName,\r\n\t\t\t\tjson.region,\r\n\t\t\t\tjson.subregion,\r\n\t\t\t\tnew Capital(\r\n\t\t\t\t\tjson.latitude,\r\n\t\t\t\t\tjson.longitude,\r\n\t\t\t\t\tjson.capital\r\n\t\t\t\t),\r\n\t\t\t\tjson.population,\r\n\t\t\t\tjson.area,\r\n\t\t\t\tjson.forestArea,\r\n\t\t\t\tjson.flag,\r\n\t\t\t\ttimezones,\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic clone(): Country {\r\n\t\treturn new Country(\r\n\t\t\tthis.id,\r\n\t\t\tthis.name,\r\n\t\t\tthis.nativeName,\r\n\t\t\tthis.region,\r\n\t\t\tthis.subRegion,\r\n\t\t\tthis.capital.clone(),\r\n\t\t\tthis.population,\r\n\t\t\tthis.area,\r\n\t\t\tthis.forestArea,\r\n\t\t\tthis.flag,\r\n\t\t\tthis.timeZone\r\n\t\t);\r\n\t}\r\n\r\n\tpublic equals(country: Country): boolean {\r\n\t\treturn (Boolean(country)\r\n\t\t\t&& JSON.stringify(country) === JSON.stringify(this));\r\n\t}\r\n}\r\n","import { Country } from '../country-list/country';\r\nimport { TreeDonation } from '../tree-list/tree-donation';\r\nimport { Tree } from '../tree-list/tree';\r\nimport { TreeType } from '../tree-list/tree-type';\r\n\r\nexport class Donation {\r\n\tprivate _id: string;\r\n\tprivate _country: Country;\r\n\tprivate _treeDonation: TreeDonation;\r\n\tprivate _date: Date;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tcountry: Country,\r\n\t\ttreeDonation: TreeDonation,\r\n\t\tdate: Date,\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._country = country;\r\n\t\tthis._treeDonation = treeDonation;\r\n\t\tthis._date = date;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Donation {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Donation(\r\n\t\t\t\tjson.id,\r\n\t\t\t\tjson.country,\r\n\t\t\t\tnew TreeDonation(\r\n\t\t\t\t\tjson.treeDonation.id,\r\n\t\t\t\t\tjson.treeDonation.amount,\r\n\t\t\t\t\tjson.treeDonation.cost,\r\n\t\t\t\t\tnew Tree(\r\n\t\t\t\t\t\tjson.treeDonation.tree.id,\r\n\t\t\t\t\t\tjson.treeDonation.tree.name,\r\n\t\t\t\t\t\tjson.treeDonation.tree.description,\r\n\t\t\t\t\t\tjson.treeDonation.tree.picture,\r\n\t\t\t\t\t\tjson.treeDonation.tree.size,\r\n\t\t\t\t\t\tjson.treeDonation.tree.environment,\r\n\t\t\t\t\t\tjson.treeDonation.tree.keyFeature,\r\n\t\t\t\t\t\tNumber(json.treeDonation.tree.cost),\r\n\t\t\t\t\t\tTreeType[json.treeDonation.tree.id]\r\n\t\t\t\t\t)\r\n\t\t\t\t),\r\n\t\t\t\tjson.date,\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set country(newCountry: Country) {\r\n\t\tthis._country = newCountry;\r\n\t}\r\n\r\n\tpublic get country(): Country {\r\n\t\treturn this._country;\r\n\t}\r\n\r\n\tpublic set treeDonation(newTreeDonation: TreeDonation) {\r\n\t\tthis._treeDonation = newTreeDonation;\r\n\t}\r\n\r\n\tpublic get treeDonation(): TreeDonation {\r\n\t\treturn this._treeDonation;\r\n\t}\r\n\r\n\tpublic set date(newDate: Date) {\r\n\t\tthis._date = newDate;\r\n\t}\r\n\r\n\tpublic get date(): Date {\r\n\t\treturn this._date;\r\n\t}\r\n\r\n\tpublic equals(donation: Donation): boolean {\r\n\t\treturn (Boolean(donation)\r\n\t\t\t&& JSON.stringify(donation) === JSON.stringify(this));\r\n\t}\r\n\r\n\tpublic clone(): Donation {\r\n\t\treturn new Donation(\r\n\t\t\tthis.id,\r\n\t\t\tthis.country,\r\n\t\t\tthis.treeDonation.clone(),\r\n\t\t\tthis.date\r\n\t\t);\r\n\t}\r\n}\r\n","export enum StatisticElementType {\r\n\tBC = 'by-cost',\r\n\tBT = 'by-tree'\r\n}\r\n","export enum StatisticSubCategoryType {\r\n\tAD = 'all-donators',\r\n\tTD = 'top-10-donators',\r\n\tAC = 'all-countries',\r\n\tTC = 'top-10-countries'\r\n}\r\n","import { Tree } from './tree';\r\n\r\nexport class TreeDonation {\r\n\tprivate _id: string;\r\n\tprivate _amont: number;\r\n\tprivate _cost: number;\r\n\tprivate _tree: Tree;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tamount: number,\r\n\t\tcost: number,\r\n\t\ttree: Tree\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._amont = amount;\r\n\t\tthis._cost = cost;\r\n\t\tthis._tree = tree;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set amount(newAmount: number) {\r\n\t\tthis._amont = newAmount;\r\n\t}\r\n\r\n\tpublic get amount(): number {\r\n\t\treturn this._amont;\r\n\t}\r\n\r\n\tpublic set cost(newCost: number) {\r\n\t\tthis._cost = newCost;\r\n\t}\r\n\r\n\tpublic get cost(): number {\r\n\t\treturn this._cost;\r\n\t}\r\n\r\n\tpublic set tree(newTree: Tree) {\r\n\t\tthis._tree = newTree;\r\n\t}\r\n\r\n\tpublic get tree(): Tree {\r\n\t\treturn this._tree;\r\n\t}\r\n\r\n\tpublic clone(): TreeDonation {\r\n\t\treturn new TreeDonation(\r\n\t\t\tthis.id,\r\n\t\t\tthis.amount,\r\n\t\t\tthis.cost,\r\n\t\t\tthis.tree.clone()\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","export enum TreeType {\r\n   NT = 'native-trees',\r\n   AS = 'arboretum-species',\r\n   PF = 'patio-fruit-trees',\r\n   EG = 'evergreen',\r\n   PG = 'pot-grown-trees',\r\n   SH = 'shrubs'\r\n}\r\n","import { TreeType } from './tree-type';\r\n\r\nexport class Tree {\r\n\tprivate _id: string;\r\n\tprivate _name: string;\r\n\tprivate _description: string;\r\n\tprivate _picture: string;\r\n\tprivate _size: string;\r\n\tprivate _environment: string;\r\n\tprivate _keyFeature: string;\r\n\tprivate _cost: number;\r\n\tprivate _type: TreeType;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tname: string,\r\n\t\tdescription: string,\r\n\t\tpicture: string,\r\n\t\tsize: string,\r\n\t\tenvironment: string,\r\n\t\tkeyFeature: string,\r\n\t\tcost: number,\r\n\t\ttype: TreeType,\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._name = name;\r\n\t\tthis._description = description;\r\n\t\tthis._picture = picture;\r\n\t\tthis._size = size;\r\n\t\tthis._environment = environment;\r\n\t\tthis._keyFeature = keyFeature;\r\n\t\tthis._cost = cost;\r\n\t\tthis._type = type;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set description(newDescription: string) {\r\n\t\tthis._description = newDescription;\r\n\t}\r\n\r\n\tpublic get description(): string {\r\n\t\treturn this._description;\r\n\t}\r\n\r\n\tpublic set picture(newPicture: string) {\r\n\t\tthis._picture = newPicture;\r\n\t}\r\n\r\n\tpublic get picture(): string {\r\n\t\treturn this._picture;\r\n\t}\r\n\r\n\tpublic set size(newSize: string) {\r\n\t\tthis._size = newSize;\r\n\t}\r\n\r\n\tpublic get size(): string {\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic set environment(newEnvironment: string) {\r\n\t\tthis._environment = newEnvironment;\r\n\t}\r\n\r\n\tpublic get environment(): string {\r\n\t\treturn this._environment;\r\n\t}\r\n\r\n\tpublic set keyFeature(newKeyFeature: string) {\r\n\t\tthis._keyFeature = newKeyFeature;\r\n\t}\r\n\r\n\tpublic get keyFeature(): string {\r\n\t\treturn this._keyFeature;\r\n\t}\r\n\r\n\tpublic set cost(newCost: number) {\r\n\t\tthis._cost = newCost;\r\n\t}\r\n\r\n\tpublic get cost(): number {\r\n\t\treturn this._cost;\r\n\t}\r\n\r\n\tpublic set type(newType: TreeType) {\r\n\t\tthis._type = newType;\r\n\t}\r\n\r\n\tpublic get type(): TreeType {\r\n\t\treturn this._type;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Tree {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Tree(\r\n\t\t\t\tjson.id,\r\n\t\t\t\tjson.name,\r\n\t\t\t\tjson.description,\r\n\t\t\t\tjson.picture,\r\n\t\t\t\tjson.size,\r\n\t\t\t\tjson.environment,\r\n\t\t\t\tjson.keyFeature,\r\n\t\t\t\tNumber(json.cost),\r\n\t\t\t\tTreeType[json.id],\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic clone(): Tree {\r\n\t\treturn new Tree(\r\n\t\t\tthis.id,\r\n\t\t\tthis.name,\r\n\t\t\tthis.description,\r\n\t\t\tthis.picture,\r\n\t\t\tthis.size,\r\n\t\t\tthis.environment,\r\n\t\t\tthis.keyFeature,\r\n\t\t\tthis.cost,\r\n\t\t\tthis.type,\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Country } from '../country-list/country';\r\nimport { Donation } from '../donation-list/donation';\r\n\r\nexport class User {\r\n\tprivate _id: string;\r\n\tprivate _name: string;\r\n\tprivate _surName: string;\r\n\tprivate _password: string;\r\n\tprivate _email: string;\r\n\tprivate _profileImage: string;\r\n\tprivate _age: number;\r\n\tprivate _date: Date;\r\n\tprivate _country: Country;\r\n\tprivate _donationList: Donation[];\r\n\tprivate _medicalPoints: number;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tname: string,\r\n\t\tsurName: string,\r\n\t\tpassword: string,\r\n\t\temail?: string,\r\n\t\tprofileImage?: string,\r\n\t\tage?: number,\r\n\t\tdate?: Date,\r\n\t\tcountry?: Country,\r\n\t\tdonationList?: Donation[],\r\n\t\tmedicalPoints?: number\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._name = name;\r\n\t\tthis._surName = surName;\r\n\t\tthis._password = password;\r\n\t\tthis._email = email;\r\n\t\tthis._profileImage = profileImage;\r\n\t\tthis._age = age;\r\n\t\tthis._date = date;\r\n\t\tthis._country = country;\r\n\t\tthis._donationList = donationList;\r\n\t\tthis._medicalPoints = medicalPoints;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set surName(newSurname: string) {\r\n\t\tthis._surName = newSurname;\r\n\t}\r\n\r\n\tpublic get surName(): string {\r\n\t\treturn this._surName;\r\n\t}\r\n\r\n\tpublic set password(newPassword: string) {\r\n\t\tthis._password = newPassword;\r\n\t}\r\n\r\n\tpublic get password(): string {\r\n\t\treturn this._password;\r\n\t}\r\n\r\n\tpublic set email(newEmail: string) {\r\n\t\tthis._email = newEmail;\r\n\t}\r\n\r\n\tpublic get email(): string {\r\n\t\treturn this._email;\r\n\t}\r\n\r\n\tpublic set profileImage(newProfileImage: string) {\r\n\t\tthis._profileImage = newProfileImage;\r\n\t}\r\n\r\n\tpublic get profileImage(): string {\r\n\t\treturn this._profileImage;\r\n\t}\r\n\r\n\tpublic set age(newAge: number) {\r\n\t\tthis._age = newAge;\r\n\t}\r\n\r\n\tpublic get age(): number {\r\n\t\treturn this._age;\r\n\t}\r\n\r\n\tpublic set date(newDate: Date) {\r\n\t\tthis._date = newDate;\r\n\t}\r\n\r\n\tpublic get date(): Date {\r\n\t\treturn this._date;\r\n\t}\r\n\r\n\tpublic set country(newCountry: Country) {\r\n\t\tthis._country = newCountry;\r\n\t}\r\n\r\n\tpublic get country(): Country {\r\n\t\treturn this._country;\r\n\t}\r\n\r\n\tpublic set donationList(newDonationList: Donation[]) {\r\n\t\tthis._donationList = newDonationList;\r\n\t}\r\n\r\n\tpublic get donationList(): Donation[] {\r\n\t\treturn this._donationList;\r\n\t}\r\n\r\n\tpublic set medicalPoints(newMedicalPoints: number) {\r\n\t\tthis._medicalPoints = newMedicalPoints;\r\n\t}\r\n\r\n\tpublic get medicalPoints(): number {\r\n\t\treturn this._medicalPoints;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): User {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new User(\r\n\t\t\t\tjson.id,\r\n\t\t\t\tjson.name,\r\n\t\t\t\tjson.surname,\r\n\t\t\t\tjson.password,\r\n\t\t\t\tjson.email,\r\n\t\t\t\tjson.profileImage,\r\n\t\t\t\tNumber(json.age),\r\n\t\t\t\tjson.date,\r\n\t\t\t\tCountry.fromJSON(json.country),\r\n\t\t\t\tjson.donationList,\r\n\t\t\t\tNumber(json.medicalPoints)\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic clone(): User {\r\n\t\tconst donationListClone: Donation[] = (Boolean(this.donationList))\r\n\t\t\t? [...this.donationList]\r\n\t\t\t: null;\r\n\t\tconst countryListClone: Country = (Boolean(this.country))\r\n\t\t\t? this.country.clone()\r\n\t\t\t: null;\r\n\t\treturn new User(\r\n\t\t\tthis.id,\r\n\t\t\tthis.name,\r\n\t\t\tthis.surName,\r\n\t\t\tthis.password,\r\n\t\t\tthis.email,\r\n\t\t\tthis.profileImage,\r\n\t\t\tthis.age,\r\n\t\t\tthis.date,\r\n\t\t\tcountryListClone,\r\n\t\t\tdonationListClone,\r\n\t\t\tthis.medicalPoints\r\n\t\t);\r\n\t}\r\n\r\n\tpublic loginEquals(user: User): boolean {\r\n\t\treturn this.name === user.name\r\n\t\t\t&& this.surName === user.surName\r\n\t\t\t&& this.password === user.password\r\n\t\t\t&& Boolean(user);\r\n\t}\r\n\r\n}\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class MyErrorHandler implements ErrorHandler {\r\n\tconstructor(\r\n\t\tprivate _router: Router\r\n\t) {\r\n\r\n\t}\r\n\tpublic handleError(error: Error): void {\r\n\t\tconsole.log(error.message);\r\n\t\tthis._router.navigate(['/not-found']);\r\n\t}\r\n}\r\n","import { NotFoundComponent } from './not-found.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: 'not-found',\r\n\t\tcomponent: NotFoundComponent\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class NotFoundRoutingModule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-not-found',\r\n\ttemplateUrl: './not-found.component.html',\r\n\tstyleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent {\r\n\r\n\tconstructor(\r\n\t\tprivate _router: Router\r\n\t) { }\r\n\r\n\tpublic goHome(): void {\r\n\t\tthis._router.navigate(['']);\r\n\t}\r\n\r\n}\r\n","<div class=\"-app-not-found\">\r\n    <div class=\"-app-not-found__title\">\r\n        <div class=\"-app-not-found__title-letter-wrapper\">\r\n            <div class=\"-app-not-found__title-letter -app-not-found__title-letter_left\">\r\n                4\r\n            </div>\r\n        </div>\r\n        <div class=\"-app-not-found__title-letter-wrapper\">\r\n            <div class=\"-app-not-found__title-letter -app-not-found__title-letter_middle\">\r\n                0\r\n            </div>\r\n        </div>\r\n        <div class=\"-app-not-found__title-letter-wrapper\">\r\n            <div class=\"-app-not-found__title-letter -app-not-found__title-letter_right\">\r\n                4\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-not-found__info\">\r\n        <div class=\"-app-not-found__info-sub-title\">\r\n            not found\r\n        </div>\r\n        <button \r\n            class=\"-app-not-found__info-button\"\r\n            (click)=\"goHome()\">\r\n            go home\r\n        </button>\r\n    </div>\r\n    \r\n \r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { NotFoundComponent } from './not-found.component';\r\nimport { NotFoundRoutingModule } from './not-found-routing.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tNotFoundComponent\r\n\t],\r\n\timports: [\r\n\t\tNotFoundRoutingModule\r\n\t],\r\n\tproviders: [],\r\n\tbootstrap: [NotFoundComponent]\r\n})\r\nexport class NotFoundModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { Country } from '../models/country-list/country';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { Capital } from '../models/country-list/capital';\r\nimport { CapitalListSnapshot } from '../models/country-list/capital-list-snapshot';\r\n\r\n@Injectable()\r\nexport class CountryListDataService {\r\n\r\n\tprivate static countryListLSKey: string = '-app-country-list';\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\tprivate _countryUrl: string = 'https://restcountries.eu/rest/v2/all';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) {\r\n\r\n\t}\r\n\r\n\tpublic loadCountriesList(): Observable<Country[]> {\r\n\t\treturn this._httpClient.get<any>(this._countryUrl)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(Country.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tpublic loadCapitalsCoordinatesData(countryList: Country[]): any {\r\n\t\tconst LSData: string = localStorage.getItem(CountryListDataService.countryListLSKey);\r\n\t\tif (Boolean(LSData)) {\r\n\t\t\treturn of([...(CapitalListSnapshot.fromJSON(JSON.parse(LSData))).capitalList]);\r\n\t\t} else {\r\n\t\t\tconst countryList$: Array<Observable<any>> = [...countryList].map((currentCountry: Country) => {\r\n\t\t\t\tconst currentCountryCapitalName: string = currentCountry.capital.name;\r\n\t\t\t\tif (Boolean(currentCountryCapitalName)) {\r\n\t\t\t\t\treturn this._httpClient.get<any>(`https://geocode-maps.yandex.ru/1.x/?format=json&apikey=cf12cc60-e991-460b-8057-553e3de62bf8&geocode=${currentCountryCapitalName}`)\r\n\t\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\t\t\t\tconst newCountry: Country = currentCountry.clone();\r\n\t\t\t\t\t\t\t\tif (Boolean(json.response.GeoObjectCollection.featureMember[0])) {\r\n\t\t\t\t\t\t\t\t\tif (json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos) {\r\n\t\t\t\t\t\t\t\t\t\tconst location: string = json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\r\n\t\t\t\t\t\t\t\t\t\tconst coordinates: string[] = location.split(' ');\r\n\t\t\t\t\t\t\t\t\t\tconst newCountryCapitalName: string = newCountry.capital.name;\r\n\t\t\t\t\t\t\t\t\t\tif (Boolean(coordinates[0]) && Boolean(coordinates[1]) && Boolean(newCountryCapitalName)) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn new Capital(\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(coordinates[1]),\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(coordinates[0]),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewCountryCapitalName\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn of(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn forkJoin([...countryList$]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic loadCountriesForestAreaData(): Observable<any> {\r\n\t\tconst loadForestAreaDataDelay: number = 5500;\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/countries-forest-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tdelay(loadForestAreaDataDelay),\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map((forestAreaObject: any) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: `${forestAreaObject.id}`,\r\n\t\t\t\t\t\t\tvalue: Number(forestAreaObject.value)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tpublic saveCapitalsCoordinatesData(capitalListSnapshot: CapitalListSnapshot): void {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tCountryListDataService.countryListLSKey,\r\n\t\t\tJSON.stringify(\r\n\t\t\t\tCapitalListSnapshot.toJSON(capitalListSnapshot)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Donation } from '../models/donation-list/donation';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DonationListDataService {\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) { }\r\n\r\n\tpublic loadDonationList(): Observable<Donation[]> {\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/donations-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(Donation.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Tree } from '../models/tree-list/tree';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TreeListDataService {\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) { }\r\n\r\n\tpublic loadTreeList(): Observable<Tree[]> {\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/trees-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tfirst(),\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(Tree.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user-list/user';\r\nimport { first, map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserListDataService {\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) { }\r\n\r\n\tpublic loadUserList(): Observable<User[]> {\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/users-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tfirst(),\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(User.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\n\r\nexport enum countryListActionsType {\r\n\tinitCountries = '[COUNTRY-LIST/API] Init-Countries Country-List',\r\n\tinitCountriesSuccess = '[COUNTRY-LIST/API] Init-Countries-Success Country-List',\r\n\tinitCapitalsCoordinatesData = '[COUNTRY-LIST/API] Init-Capitals-Coordinates-Data Country-List',\r\n\tinitCapitalsCoordinatesDataSuccess = '[COUNTRY-LIST/API] Init-Capitals-Coordinates-Data-Success Country-List',\r\n\tinitCountriesForestArea = '[COUNTRY-LIST/API] Init-Countries-Forest-Area Country-List',\r\n\tinitCountriesForestAreaData = '[COUNTRY-LIST/API] Init-Countries-Forest-Area-Data Country-List',\r\n\tinitCountriesForestAreaDataSuccess = '[COUNTRY-LIST/API] Init-Countries-Forest-Area-Data-Success Country-List',\r\n\tisCountriesLoadingSuccess = '[COUNTRY-LIST/API] Is-Loading-Success Country-List',\r\n\tinitCapitalsCoordinates = '[COUNTRY-LIST/API] Init-Capitals-Coordinates Country-List',\r\n\tsearchSubRegionCountries = '[COUNTRY-LIST/API] Search-Sub-Region-Countries Country-List',\r\n\tsearchCountry = '[COUNTRY-LIST/API] Search-Country Country-List',\r\n\tsearchCountrySuccess = '[COUNTRY-LIST/API] Search-Country-Success Country-List',\r\n\tsearchPreviousCountry = '[COUNTRY-LIST/API] Search-Previous-Country Country-List',\r\n\tsearchNextCountry = '[COUNTRY-LIST/API] Search-Next-Country Country-List',\r\n\ttoggleMapMode = '[COUNTRY-LIST/API] Toggle-Map-Mode Country-List',\r\n\ttoggleShowCapitalsMode = '[COUNTRY-LIST/API] Toggle-Is-Show-Capitals-Mode Country-List'\r\n}\r\n\r\nexport class InitCountryListAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountries;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountryListSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountryList: Country[]\r\n\t}) { }\r\n\r\n\tpublic get countryList(): Country[] {\r\n\t\treturn this._payload.countryList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCapitalsCoordinatesAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCapitalsCoordinates;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCapitalsCoordinatesDataAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCapitalsCoordinatesData;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountryList: Country[]\r\n\t}) { }\r\n\r\n\tpublic get countryList(): Country[] {\r\n\t\treturn this._payload.countryList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCapitalsCoordinatesDataSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCapitalsCoordinatesDataSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcapitalsCoordinatesData: Capital[]\r\n\t}) { }\r\n\r\n\tpublic get capitalsCoordinatesData(): Capital[] {\r\n\t\treturn this._payload.capitalsCoordinatesData;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountriesForestAreaAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesForestArea;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountriesForestAreaDataAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesForestAreaData;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountriesForestAreaDataSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesForestAreaDataSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountriesForestAreaData: any\r\n\t}) { }\r\n\r\n\tpublic get countriesForestAreaData(): any {\r\n\t\treturn this._payload.countriesForestAreaData;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class IsCountriesLoadingSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.isCountriesLoadingSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchSubRegionCountriesAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchSubRegionCountries;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tsubRegionName: string\r\n\t\tregionName: string\r\n\t}) { }\r\n\r\n\tpublic get subRegionName(): string {\r\n\t\treturn this._payload.subRegionName;\r\n\t}\r\n\r\n\tpublic get regionName(): string {\r\n\t\treturn this._payload.regionName;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchCountryAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchCountrySuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchCountrySuccess;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchPreviousCountryAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchPreviousCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchNextCountryAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchNextCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ToggleMapModeCountryListAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.toggleMapMode;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ToggleShowCapitalsModeCountryListAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.toggleShowCapitalsMode;\r\n}\r\n\r\nexport type CountryListActions =\r\n\tInitCountryListAction\r\n\t| InitCountryListSuccessAction\r\n\t| InitCapitalsCoordinatesAction\r\n\t| InitCapitalsCoordinatesDataAction\r\n\t| InitCapitalsCoordinatesDataSuccessAction\r\n\t| InitCountriesForestAreaAction\r\n\t| InitCountriesForestAreaDataAction\r\n\t| InitCountriesForestAreaDataSuccessAction\r\n\t| IsCountriesLoadingSuccessAction\r\n\t| SearchSubRegionCountriesAction\r\n\t| SearchCountryAction\r\n\t| SearchCountrySuccessAction\r\n\t| ToggleMapModeCountryListAction\r\n\t| ToggleShowCapitalsModeCountryListAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType, Effect } from '@ngrx/effects';\r\nimport { CountryListDataService } from 'src/app/services/country-data.service';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport {\r\n\tcountryListActionsType,\r\n\tInitCountryListSuccessAction,\r\n\tInitCountriesForestAreaDataSuccessAction,\r\n\tInitCapitalsCoordinatesDataSuccessAction\r\n} from './country-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CountryListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _countryListDataService: CountryListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadCountryList(): Observable<InitCountryListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(countryListActionsType.initCountries),\r\n\t\t\tswitchMap(() => this._countryListDataService.loadCountriesList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((currentCountryList: Country[]) => {\r\n\t\t\t\t\t\treturn new InitCountryListSuccessAction({ countryList: currentCountryList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadCountriesForestAreaData(): Observable<InitCountriesForestAreaDataSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(countryListActionsType.initCountriesForestAreaData),\r\n\t\t\tswitchMap(() => this._countryListDataService.loadCountriesForestAreaData()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((countriesForestData: any) => {\r\n\t\t\t\t\t\treturn new InitCountriesForestAreaDataSuccessAction({ countriesForestAreaData: countriesForestData });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadCapitalsCoordinates(): Observable<unknown> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(countryListActionsType.initCapitalsCoordinatesData),\r\n\t\t\tswitchMap((payload: { countryList: Country[] }) => this._countryListDataService.loadCapitalsCoordinatesData(payload.countryList)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((currentCapitalsData: Capital[]) => {\r\n\t\t\t\t\t\treturn new InitCapitalsCoordinatesDataSuccessAction({ capitalsCoordinatesData: currentCapitalsData });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { CountryListDataService } from 'src/app/services/country-data.service';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\nimport { CapitalListSnapshot } from 'src/app/models/country-list/capital-list-snapshot';\r\nimport {\r\n\tToggleMapModeCountryListAction,\r\n\tToggleShowCapitalsModeCountryListAction,\r\n\tSearchCountrySuccessAction,\r\n\tSearchCountryAction,\r\n\tSearchPreviousCountryAction,\r\n\tSearchNextCountryAction,\r\n\tSearchSubRegionCountriesAction,\r\n\tInitCountryListAction,\r\n\tInitCapitalsCoordinatesDataAction,\r\n\tInitCountriesForestAreaDataAction,\r\n\tInitCountriesForestAreaAction,\r\n\tInitCapitalsCoordinatesAction,\r\n\tIsCountriesLoadingSuccessAction\r\n} from './country-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\n@Injectable()\r\nexport class FacadeServiceCountryList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t\tprivate _countryListDataService: CountryListDataService\r\n\t) { }\r\n\r\n\tpublic saveCapitalsCoordinatesData(capitalsData: Capital[]): void {\r\n\t\tthis._countryListDataService.saveCapitalsCoordinatesData(\r\n\t\t\tnew CapitalListSnapshot(\r\n\t\t\t\tcapitalsData\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tpublic toggleMapMode(): void {\r\n\t\tthis._store$.dispatch(new ToggleMapModeCountryListAction());\r\n\t}\r\n\r\n\tpublic toggleCapitalsMode(): void {\r\n\t\tthis._store$.dispatch(new ToggleShowCapitalsModeCountryListAction());\r\n\t}\r\n\r\n\tpublic searchCurrentCountry(countryName: string): void {\r\n\t\tthis._store$.dispatch(new SearchCountryAction({ name: countryName }));\r\n\t}\r\n\r\n\tpublic searchPreviousCountry(countryName: string): void {\r\n\t\tthis._store$.dispatch(new SearchPreviousCountryAction({ name: countryName }));\r\n\t}\r\n\r\n\tpublic searchNextCountry(countryName: string): void {\r\n\t\tthis._store$.dispatch(new SearchNextCountryAction({ name: countryName }));\r\n\t}\r\n\r\n\tpublic searchCountry(countryName: string): void {\r\n\t\tthis.searchCurrentCountry(countryName);\r\n\t\tthis.searchPreviousCountry(countryName);\r\n\t\tthis.searchNextCountry(countryName);\r\n\t}\r\n\r\n\tpublic searchCountrySuccess(): void {\r\n\t\tthis._store$.dispatch(new SearchCountrySuccessAction());\r\n\t}\r\n\r\n\tpublic searchSubRegionCountries(regionName: string, subRegionName: string): void {\r\n\t\tthis._store$.dispatch(new SearchSubRegionCountriesAction({ regionName, subRegionName }));\r\n\t}\r\n\r\n\tpublic initCountryList(): void {\r\n\t\tthis._store$.dispatch(new InitCountryListAction());\r\n\t}\r\n\r\n\tpublic initCapitalsCoordinatesData(countryList: Country[]): void {\r\n\t\tthis._store$.dispatch(new InitCapitalsCoordinatesDataAction({ countryList }));\r\n\t}\r\n\r\n\tpublic initCountriesForestAreaData(): void {\r\n\t\tthis._store$.dispatch(new InitCountriesForestAreaDataAction());\r\n\t}\r\n\r\n\tpublic initCountriesForestArea(): void {\r\n\t\tthis._store$.dispatch(new InitCountriesForestAreaAction());\r\n\t}\r\n\r\n\tpublic initCapitalsCoordinates(): void {\r\n\t\tthis._store$.dispatch(new InitCapitalsCoordinatesAction());\r\n\t}\r\n\r\n\tpublic countriesLoadingSuccess(): void {\r\n\t\tthis._store$.dispatch(new IsCountriesLoadingSuccessAction());\r\n\t}\r\n\r\n}\r\n","import { Country } from 'src/app/models/country-list/country';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\nimport { countryListActionsType, CountryListActions } from './country-list.actions';\r\nimport { CountryCapitalInterface } from 'src/app/models/country-list/country-capital-interface';\r\nimport { CountryForestAreaInterface } from 'src/app/models/country-list/country-forest-area-interface';\r\n\r\nexport interface ICountryListState {\r\n\tisLoading: boolean;\r\n\tisSearchLoading: boolean;\r\n\tisInitedCountries: boolean;\r\n\tisInitedCapitalsCoordinatesData: boolean;\r\n\tisInitedCountriesForestAreaData: boolean;\r\n\tisMapMode: boolean;\r\n\tisGlobeMode: boolean;\r\n\tisShowCapitalsMode: boolean;\r\n\tcountryList: Country[];\r\n\tcapitalsCoordinatesData: CountryCapitalInterface[];\r\n\tcountriesForestAreaData: CountryForestAreaInterface[];\r\n\tsubRegionsCountries: Country[];\r\n\tsearchPreviousCountry: Country;\r\n\tsearchCountry: Country;\r\n\tsearchNextCountry: Country;\r\n}\r\n\r\nexport const countryListFeatureKey: 'COUNTRY-LIST' = 'COUNTRY-LIST';\r\n\r\nconst initialState: ICountryListState = {\r\n\tisLoading: true,\r\n\tisSearchLoading: false,\r\n\tisInitedCountries: false,\r\n\tisInitedCapitalsCoordinatesData: false,\r\n\tisInitedCountriesForestAreaData: false,\r\n\tisMapMode: true,\r\n\tisGlobeMode: false,\r\n\tisShowCapitalsMode: true,\r\n\tcountryList: null,\r\n\tcapitalsCoordinatesData: null,\r\n\tcountriesForestAreaData: null,\r\n\tsubRegionsCountries: null,\r\n\tsearchPreviousCountry: null,\r\n\tsearchCountry: null,\r\n\tsearchNextCountry: null\r\n};\r\n\r\nexport function countryListReducer(\r\n\tstate: ICountryListState = initialState,\r\n\taction: any\r\n): ICountryListState {\r\n\tswitch (action.type) {\r\n\t\tcase countryListActionsType.initCountries: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCountries: true,\r\n\t\t\t\tcountryList: [...action.countryList].filter((country: Country) => Boolean(country))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCapitalsCoordinatesData: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCapitalsCoordinatesDataSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCapitalsCoordinatesData: true,\r\n\t\t\t\tcapitalsCoordinatesData: [...action.capitalsCoordinatesData].filter((capital: Capital) => {\r\n\t\t\t\t\tif (Boolean(capital)) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tlatitude: capital.latitude,\r\n\t\t\t\t\t\t\tlongitude: capital.longitude,\r\n\t\t\t\t\t\t\tname: capital.name\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCapitalsCoordinates: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountryList: [...state.capitalsCoordinatesData].filter(Boolean).map((capital: Capital) => {\r\n\t\t\t\t\tif (Boolean(capital)) {\r\n\t\t\t\t\t\tconst currentCountry: Country = state.countryList.find((country: Country) => {\r\n\t\t\t\t\t\t\treturn country.capital.name === capital.name;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (Boolean(currentCountry)) {\r\n\t\t\t\t\t\t\tconst newCountry: Country = currentCountry.clone();\r\n\t\t\t\t\t\t\tnewCountry.capital = capital.clone();\r\n\t\t\t\t\t\t\treturn newCountry;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesForestAreaData: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesForestAreaDataSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCountriesForestAreaData: true,\r\n\t\t\t\tcountriesForestAreaData: [...action.countriesForestAreaData]\r\n\t\t\t\t\t.filter((forestArea: CountryForestAreaInterface) => Boolean(forestArea))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesForestArea: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountryList: [...state.countriesForestAreaData].filter(Boolean).map((forestArea: CountryForestAreaInterface) => {\r\n\t\t\t\t\tif (Boolean(forestArea)) {\r\n\t\t\t\t\t\tconst currentCountry: Country = state.countryList.find((country: Country) => country.id === forestArea.id);\r\n\t\t\t\t\t\tif (Boolean(currentCountry)) {\r\n\t\t\t\t\t\t\tconst newCountry: Country = currentCountry.clone();\r\n\t\t\t\t\t\t\tnewCountry.forestArea = Number(forestArea.value);\r\n\t\t\t\t\t\t\treturn newCountry;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.isCountriesLoadingSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchSubRegionCountries: {\r\n\t\t\tconst currentRegionCountries: Country[] = [...state.countryList].filter((country: Country) => {\r\n\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\tif (country.region.toLowerCase() === action.regionName) {\r\n\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsubRegionsCountries: [...currentRegionCountries].filter((country: Country) => {\r\n\t\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\t\tconst countrySubRegionInfo: string[] = country.subRegion.toLowerCase().split(' ');\r\n\t\t\t\t\t\tif (countrySubRegionInfo[0] === action.subRegionName) {\r\n\t\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchCountry: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: true,\r\n\t\t\t\tsearchCountry: [...state.subRegionsCountries].find((country: Country) => {\r\n\t\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\r\n\t\t\t\t\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t\t.join('-');\r\n\t\t\t\t\t\tif (action.name === currentCountryRouterName) {\r\n\t\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchCountrySuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: false,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchPreviousCountry: {\r\n\t\t\tconst previousCountryIndex: number = [...state.subRegionsCountries].findIndex((country: Country) => {\r\n\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\r\n\t\t\t\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t.join('-');\r\n\t\t\t\t\tif (action.name === currentCountryRouterName) {\r\n\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}) - 1;\r\n\t\t\tif (previousCountryIndex >= 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchPreviousCountry: state.subRegionsCountries[previousCountryIndex].clone()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchPreviousCountry: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase countryListActionsType.searchNextCountry: {\r\n\t\t\tconst nextCountryIndex: number = [...state.subRegionsCountries].findIndex((country: Country) => {\r\n\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\r\n\t\t\t\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t.join('-');\r\n\t\t\t\t\tif (action.name === currentCountryRouterName) {\r\n\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}) + 1;\r\n\t\t\tif (nextCountryIndex < state.subRegionsCountries.length) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchNextCountry: state.subRegionsCountries[nextCountryIndex].clone()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchNextCountry: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase countryListActionsType.toggleMapMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisMapMode: !state.isMapMode,\r\n\t\t\t\tisGlobeMode: !state.isGlobeMode\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.toggleShowCapitalsMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisShowCapitalsMode: !state.isShowCapitalsMode,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerCountryList(\r\n\tstate: ICountryListState | undefined,\r\n\taction: CountryListActions\r\n): ICountryListState {\r\n\treturn countryListReducer(state, action);\r\n}\r\n","import { ICountryListState, countryListFeatureKey } from './country-list.reducer';\r\nimport {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tMemoizedSelector,\r\n\tDefaultProjectorFn\r\n} from '@ngrx/store';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { CountryCapitalInterface } from 'src/app/models/country-list/country-capital-interface';\r\nimport { CountryForestAreaInterface } from 'src/app/models/country-list/country-forest-area-interface';\r\n\r\nexport const selectStateCountryList: MemoizedSelector<\r\n\tobject, ICountryListState,\r\n\tDefaultProjectorFn<ICountryListState>\r\n> = createFeatureSelector<ICountryListState>(countryListFeatureKey);\r\n\r\nexport const selectCountryListIsLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isLoading\r\n);\r\n\r\nexport const selectCountryList: MemoizedSelector<\r\n\tobject,\r\n\tCountry[],\r\n\tDefaultProjectorFn<Country[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country[] => state.countryList\r\n);\r\n\r\nexport const selectCountryListIsInitedCountries: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isInitedCountries\r\n);\r\n\r\nexport const selectCountriesForestAreaData: MemoizedSelector<\r\n\tobject,\r\n\tCountryForestAreaInterface[],\r\n\tDefaultProjectorFn<CountryForestAreaInterface[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): CountryForestAreaInterface[] => state.countriesForestAreaData\r\n);\r\n\r\nexport const selectIsInitedCountriesForestAreaData: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isInitedCountriesForestAreaData\r\n);\r\n\r\nexport const selectCapitalsCoordinatesData: MemoizedSelector<\r\n\tobject,\r\n\tCountryCapitalInterface[],\r\n\tDefaultProjectorFn<CountryCapitalInterface[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): CountryCapitalInterface[] => state.capitalsCoordinatesData\r\n);\r\n\r\nexport const selectIsInitedCapitalsCoordinatesData: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isInitedCapitalsCoordinatesData\r\n);\r\n\r\nexport const selectSubRegionsCountries: MemoizedSelector<\r\n\tobject,\r\n\tCountry[],\r\n\tDefaultProjectorFn<Country[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country[] => state.subRegionsCountries\r\n);\r\n\r\nexport const selectSearchCountry: MemoizedSelector<\r\n\tobject,\r\n\tCountry,\r\n\tDefaultProjectorFn<Country>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country => state.searchCountry\r\n);\r\n\r\nexport const selectSearchPreviousCountry: MemoizedSelector<\r\n\tobject,\r\n\tCountry,\r\n\tDefaultProjectorFn<Country>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country => state.searchPreviousCountry\r\n);\r\n\r\nexport const selectSearchNextCountry: MemoizedSelector<\r\n\tobject,\r\n\tCountry,\r\n\tDefaultProjectorFn<Country>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country => state.searchNextCountry\r\n);\r\n\r\nexport const selectIsCountrySearchLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isSearchLoading\r\n);\r\n\r\nexport const selectIsMapMode: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isMapMode\r\n);\r\n\r\nexport const selectIsGlobeMode: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isGlobeMode\r\n);\r\n\r\nexport const selectIsShowCapitalsMode: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isShowCapitalsMode\r\n);\r\n","export * from './country-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport enum donationListActionsType {\r\n\tinitDonationList = '[DONATION-LIST/API] Init-Donation-List Donation-List',\r\n\tInitDonationListSuccess = '[DONATION-LIST/API] Init-Donation-List-Success Donation-List',\r\n\tinitNewUserDonationBeforeRegistration = '[DONATION-LIST/API] Init-New-User-Donation Donation-List',\r\n\tmakeDonation = '[DONATION-LIST/API] Make-Donation Donation-List',\r\n\tdeleteDonation = '[DONATION-LIST/API] Delete-Donation Donation-List',\r\n\tinitNewCountryForDonation = '[DONATION-LIST/API] Init-New-Country-For-Donation Donation-List',\r\n\tdeleteNewCountryForDonation = '[DONATION-LIST/API] Delete-New-Country-For-Donation Donation-List',\r\n\tinitDonationCurrentCountry = '[DONATION-LIST/API] Init-Donation-Current-Country Donation-List',\r\n\tinitUserDonationList = '[DONATION-LIST/API] Init-User-Donation-List Donation-List',\r\n\tinitUserDonationListSuccess = '[DONATION-LIST/API]  Init-User-Donation-List-Success Donation-List',\r\n\tinitAllDonatorsDataByCost = '[DONATION-LIST/API] Init-All-Donators-Data-By-Cost Donation-List',\r\n\tinitAllDonatorsDataByTree = '[DONATION-LIST/API] Init-All-Donators-Data-By-Tree Donation-List'\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationListAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initDonationList;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationListSuccessAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.InitDonationListSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonationList: Donation[]\r\n\t}) { }\r\n\r\n\tpublic get donationList(): Donation[] {\r\n\t\treturn this._payload.donationList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewUserDonationBeforeRegistrationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initNewUserDonationBeforeRegistration;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation\r\n\t}) { }\r\n\r\n\tpublic get newDonation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class MakeDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.makeDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation,\r\n\t\tuserId: string\r\n\t}) { }\r\n\r\n\tpublic get donation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n\r\n\tpublic get userId(): string {\r\n\t\treturn this._payload.userId;\r\n\t}\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class DeleteDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.deleteDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation\r\n\t}) { }\r\n\r\n\tpublic get donation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewCountryForDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initNewCountryForDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountry: Country\r\n\t}) { }\r\n\r\n\tpublic get newCountry(): Country {\r\n\t\treturn this._payload.country;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class DeleteNewCountryForDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.deleteNewCountryForDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountry: Country\r\n\t}) { }\r\n\r\n\tpublic get newCountry(): Country {\r\n\t\treturn this._payload.country;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationCurrentCountryAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initDonationCurrentCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation,\r\n\t\tcountry: Country\r\n\t}) { }\r\n\r\n\tpublic get donation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n\tpublic get country(): Country {\r\n\t\treturn this._payload.country;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserDonationListAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initUserDonationList;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tid: string\r\n\t}) { }\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._payload.id;\r\n\t}\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserDonationListSuccessAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initUserDonationListSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByCostAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initAllDonatorsDataByCost;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByTreeAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initAllDonatorsDataByTree;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\nexport type DonationListActions =\r\n\tInitDonationListAction\r\n\t| InitDonationListSuccessAction\r\n\t| InitNewUserDonationBeforeRegistrationAction\r\n\t| MakeDonationAction\r\n\t| DeleteDonationAction\r\n\t| InitNewCountryForDonationAction\r\n\t| DeleteNewCountryForDonationAction\r\n\t| InitUserDonationListAction\r\n\t| InitDonationCurrentCountryAction\r\n\t| InitUserDonationListSuccessAction\r\n\t| InitAllDonatorsDataByCostAction\r\n\t| InitAllDonatorsDataByTreeAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { InitDonationListSuccessAction, donationListActionsType } from './donation-list.actions';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { DonationListDataService } from 'src/app/services/donation-list-data.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DonationListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _donationListDataService: DonationListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadDonationList(): Observable<InitDonationListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(donationListActionsType.initDonationList),\r\n\t\t\tswitchMap(() => this._donationListDataService.loadDonationList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((donationList: Donation[]) => {\r\n\t\t\t\t\t\treturn new InitDonationListSuccessAction({ donationList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { Store } from '@ngrx/store';\r\nimport {\r\n\tInitNewUserDonationBeforeRegistrationAction,\r\n\tMakeDonationAction,\r\n\tDeleteDonationAction,\r\n\tInitNewCountryForDonationAction,\r\n\tInitDonationCurrentCountryAction,\r\n\tInitUserDonationListAction,\r\n\tInitUserDonationListSuccessAction,\r\n\tInitDonationListAction,\r\n\tDeleteNewCountryForDonationAction,\r\n} from './donation-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\n@Injectable()\r\nexport class FacadeServiceDonationList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic initNewUserDonationBeforeRegistration(donation: Donation): void {\r\n\t\tthis._store$.dispatch(new InitNewUserDonationBeforeRegistrationAction({ donation }));\r\n\t}\r\n\r\n\tpublic makeDonation(donation: Donation, userId: string): void {\r\n\t\tthis._store$.dispatch(new MakeDonationAction({ donation, userId }));\r\n\t}\r\n\r\n\tpublic deleteDonation(donation: Donation): void {\r\n\t\tthis._store$.dispatch(new DeleteDonationAction({ donation }));\r\n\t}\r\n\r\n\tpublic initNewCountryForDonation(country: Country): void {\r\n\t\tthis._store$.dispatch(new InitNewCountryForDonationAction({ country }));\r\n\t}\r\n\r\n\tpublic initDonationCurrentCountry(donation: Donation, country: Country): void {\r\n\t\tthis._store$.dispatch(new InitDonationCurrentCountryAction({ donation, country }));\r\n\t}\r\n\r\n\tpublic initUserDonationList(id: string): void {\r\n\t\tthis._store$.dispatch(new InitUserDonationListAction({ id }));\r\n\t}\r\n\r\n\tpublic initUserDonationListSuccess(): void {\r\n\t\tthis._store$.dispatch(new InitUserDonationListSuccessAction());\r\n\t}\r\n\r\n\tpublic initDonationList(): void {\r\n\t\tthis._store$.dispatch(new InitDonationListAction());\r\n\t}\r\n\r\n\tpublic deleteNewCountryForDonation(country: Country): void {\r\n\t\tthis._store$.dispatch(new DeleteNewCountryForDonationAction({ country }));\r\n\t}\r\n\r\n}\r\n","import { Donation } from 'src/app/models/donation-list/donation';\r\nimport { donationListActionsType, DonationListActions } from './donation-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\nexport interface IDonationListState {\r\n\tisLoading: boolean;\r\n\tisInitedDonationList: boolean;\r\n\tisInitedDonationListBeforRegistration: boolean;\r\n\tisInitedCountriesForDonation: boolean;\r\n\tisInitedUserDonationList: boolean;\r\n\tdonationList: Donation[];\r\n\tbeforeRegistrationUserDonationList: Donation[];\r\n\tcountriesForDonation: Country[];\r\n\tuserDonationList: Donation[];\r\n}\r\n\r\nexport const donationListFeatureKey: 'DONATION-LIST' = 'DONATION-LIST';\r\n\r\nconst initialState: IDonationListState = {\r\n\tisLoading: true,\r\n\tisInitedDonationList: false,\r\n\tisInitedDonationListBeforRegistration: false,\r\n\tisInitedCountriesForDonation: false,\r\n\tisInitedUserDonationList: false,\r\n\tdonationList: null,\r\n\tbeforeRegistrationUserDonationList: null,\r\n\tcountriesForDonation: null,\r\n\tuserDonationList: null,\r\n};\r\n\r\nexport function donationListReducer(\r\n\tstate: IDonationListState = initialState,\r\n\taction: any\r\n): IDonationListState {\r\n\tswitch (action.type) {\r\n\t\tcase donationListActionsType.initDonationList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.InitDonationListSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tisInitedDonationList: true,\r\n\t\t\t\tdonationList: [...action.donationList].filter((donation: Donation) => Boolean(donation))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initNewUserDonationBeforeRegistration: {\r\n\t\t\tconst newDonationListBeforeRegistration: Donation[] = (Boolean(state.beforeRegistrationUserDonationList)) ?\r\n\t\t\t\t[...state.beforeRegistrationUserDonationList, action.newDonation.clone()]\r\n\t\t\t\t: [action.newDonation.clone()];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedDonationListBeforRegistration: true,\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newDonationListBeforeRegistration]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.makeDonation: {\r\n\t\t\tconst newCurrentUserDonation: Donation = action.donation.clone();\r\n\t\t\tnewCurrentUserDonation.id = action.userId;\r\n\t\t\tconst newDonationList: Donation[] = (Boolean(state.donationList)) ?\r\n\t\t\t\t[...state.donationList, newCurrentUserDonation.clone()]\r\n\t\t\t\t: [newCurrentUserDonation.clone()];\r\n\t\t\tconst newUserDonationList: Donation[] = (Boolean(state.userDonationList)) ?\r\n\t\t\t\t[...state.userDonationList, newCurrentUserDonation.clone()]\r\n\t\t\t\t: [newCurrentUserDonation.clone()];\r\n\t\t\tconst newBeforeRegistrationUserDonationList: Donation[] = [...state.beforeRegistrationUserDonationList].filter((donation: Donation) => {\r\n\t\t\t\tif (!donation.equals(action.donation)) {\r\n\t\t\t\t\treturn donation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst isInitedDonationListAfterMakeDonation: boolean = (Boolean(newBeforeRegistrationUserDonationList.length))\r\n\t\t\t\t? true : false;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdonationList: [...newDonationList],\r\n\t\t\t\tuserDonationList: [...newUserDonationList],\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newBeforeRegistrationUserDonationList],\r\n\t\t\t\tisInitedDonationListBeforRegistration: isInitedDonationListAfterMakeDonation\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.deleteDonation: {\r\n\t\t\tconst newBeforeRegistrationUserDonationList: Donation[] = [...state.beforeRegistrationUserDonationList].filter((donation: Donation) => {\r\n\t\t\t\tif (!donation.equals(action.donation)) {\r\n\t\t\t\t\treturn donation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst isInitedDonationListAfterDeleteDonation: boolean = (Boolean(newBeforeRegistrationUserDonationList.length))\r\n\t\t\t\t? true\r\n\t\t\t\t: false;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newBeforeRegistrationUserDonationList],\r\n\t\t\t\tisInitedDonationListBeforRegistration: isInitedDonationListAfterDeleteDonation\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initNewCountryForDonation: {\r\n\t\t\tif (Boolean(state.countriesForDonation)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcountriesForDonation: [...state.countriesForDonation, action.newCountry.clone()]\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisInitedCountriesForDonation: true,\r\n\t\t\t\t\tcountriesForDonation: [action.newCountry.clone()]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase donationListActionsType.deleteNewCountryForDonation: {\r\n\t\t\tconst searchNewCountryList: Country[] = [...state.countriesForDonation].filter((country: Country) => {\r\n\t\t\t\treturn !country.equals(action.newCountry);\r\n\t\t\t});\r\n\t\t\tif (Boolean(searchNewCountryList.length)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcountriesForDonation: [...searchNewCountryList]\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisInitedCountriesForDonation: false,\r\n\t\t\t\t\tcountriesForDonation: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase donationListActionsType.initDonationCurrentCountry: {\r\n\t\t\tconst newBeforeRegistrationUserDonationList: Donation[] = [...state.beforeRegistrationUserDonationList].map((donation: Donation) => {\r\n\t\t\t\tif (donation.equals(action.donation)) {\r\n\t\t\t\t\tconst newDonation: Donation = donation.clone();\r\n\t\t\t\t\tnewDonation.country = action.country;\r\n\t\t\t\t\treturn newDonation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn donation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCountriesForDonation: true,\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newBeforeRegistrationUserDonationList]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initUserDonationList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserDonationList: [...state.donationList].filter((donation: Donation) => {\r\n\t\t\t\t\tif (donation.id === action.id) {\r\n\t\t\t\t\t\treturn donation.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initUserDonationListSuccess: {\r\n\t\t\tlet isUserDonationListInited: boolean;\r\n\t\t\tif (Boolean(state.userDonationList)) {\r\n\t\t\t\tisUserDonationListInited = (Boolean(state.userDonationList.length))\r\n\t\t\t\t\t? true\r\n\t\t\t\t\t: false;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedUserDonationList: isUserDonationListInited\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerDonationList(\r\n\tstate: IDonationListState | undefined,\r\n\taction: DonationListActions\r\n): IDonationListState {\r\n\treturn donationListReducer(state, action);\r\n}\r\n","import {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tDefaultProjectorFn,\r\n\tMemoizedSelector\r\n} from '@ngrx/store';\r\nimport { IDonationListState, donationListFeatureKey } from './donation-list.reducer';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\nexport const selectStateDonationList: MemoizedSelector<\r\n\tobject,\r\n\tIDonationListState,\r\n\tDefaultProjectorFn<IDonationListState>\r\n> = createFeatureSelector<IDonationListState>(donationListFeatureKey);\r\n\r\nexport const selectDonationListBeforeRegistration: MemoizedSelector<\r\n\tobject,\r\n\tDonation[],\r\n\tDefaultProjectorFn<Donation[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Donation[] => state.beforeRegistrationUserDonationList\r\n);\r\n\r\nexport const selectCountriesForDonation: MemoizedSelector<\r\n\tobject,\r\n\tCountry[],\r\n\tDefaultProjectorFn<Country[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Country[] => state.countriesForDonation\r\n);\r\n\r\nexport const selectIsInitedDonationListBeforeRegistration: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): boolean => state.isInitedDonationListBeforRegistration\r\n);\r\n\r\nexport const selectIsInitedCountriesForDonation: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): boolean => state.isInitedCountriesForDonation\r\n);\r\n\r\nexport const selectDonationList: MemoizedSelector<\r\n\tobject,\r\n\tDonation[],\r\n\tDefaultProjectorFn<Donation[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Donation[] => state.donationList\r\n);\r\n\r\nexport const selectUserDonationList: MemoizedSelector<\r\n\tobject,\r\n\tDonation[],\r\n\tDefaultProjectorFn<Donation[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Donation[] => state.userDonationList\r\n);\r\n\r\nexport const selectIsInitedUserDonationList: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): boolean => state.isInitedUserDonationList\r\n);\r\n","export * from './donation-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\n\r\nexport enum donationStatisticListActionsType {\r\n\tinitUserList = '[DONATION-STATISTIC-LIST/API] Init-User-List Donation-Statistic-List',\r\n\tinitDonationList = '[DONATION-STATISTIC-LIST/API] Init-Donation-List Donation-Statistic-List',\r\n\tinitAllDonatorsDataByCost = '[DONATION-STATISTIC-LIST/API] Init-All-Donators-Data-By-Cost Donation-Statistic-List',\r\n\tinitAllDonatorsDataByTree = '[DONATION-STATISTIC-LIST/API] Init-All-Donators-Data-By-Tree Donation-Statistic-List',\r\n\tinitTopTenDataStatistic = '[DONATION-STATISTIC-LIST/API] Init-Top-10-Data-Statistic Donation-Statistic-List',\r\n\tsortTop = '[DONATION-STATISTIC-LIST/API] Sort-Top Donation-Statistic-List',\r\n\tsortBottom = '[DONATION-STATISTIC-LIST/API] Sort-Bottom Donation-Statistic-List',\r\n\tinitAllCountriesDataByCost = '[DONATION-STATISTIC-LIST/API] Init-All-Countries-Data-By-Cost Donation-Statistic-List',\r\n\tinitAllCountriesDataByTree = '[DONATION-STATISTIC-LIST/API] Init-All-Countries-Data-By-Tree Donation-Statistic-List'\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserListDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initUserList;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationListDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initDonationList;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonationList: Donation[]\r\n\t}) { }\r\n\r\n\tpublic get donationList(): Donation[] {\r\n\t\treturn this._payload.donationList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByCostDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllDonatorsDataByCost;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByTreeDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllDonatorsDataByTree;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SortTopDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.sortTop;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SortBottomDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.sortBottom;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllCountriesDataByCostDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllCountriesDataByCost;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllCountriesDataByTreeDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllCountriesDataByTree;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitTopTenDataStatisticDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initTopTenDataStatistic;\r\n}\r\n\r\nexport type DonationStatisticListActions =\r\n\tInitUserListDonationStatisticListAction\r\n\t| InitDonationListDonationStatisticListAction\r\n\t| InitAllDonatorsDataByCostDonationStatisticListAction\r\n\t| InitAllDonatorsDataByTreeDonationStatisticListAction\r\n\t| InitTopTenDataStatisticDonationStatisticListAction\r\n\t| SortTopDonationStatisticListAction\r\n\t| SortBottomDonationStatisticListAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport {\r\n\tInitUserListDonationStatisticListAction,\r\n\tInitDonationListDonationStatisticListAction,\r\n\tInitAllDonatorsDataByCostDonationStatisticListAction,\r\n\tInitAllDonatorsDataByTreeDonationStatisticListAction,\r\n\tSortTopDonationStatisticListAction,\r\n\tSortBottomDonationStatisticListAction,\r\n\tInitTopTenDataStatisticDonationStatisticListAction,\r\n\tInitAllCountriesDataByCostDonationStatisticListAction,\r\n\tInitAllCountriesDataByTreeDonationStatisticListAction\r\n} from './donation-statistic-list.actions';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { StatisticElementType } from 'src/app/models/donation-statistic-list/statistic-element-type';\r\nimport { StatisticSubCategoryType } from 'src/app/models/donation-statistic-list/statistic-sub-category-type';\r\n\r\n@Injectable()\r\nexport class FacadeServiceDonationStatisticList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic initUserList(userList: User[]): void {\r\n\t\tthis._store$.dispatch(new InitUserListDonationStatisticListAction({ userList }));\r\n\t}\r\n\r\n\tpublic initDonationList(donationList: Donation[]): void {\r\n\t\tthis._store$.dispatch(new InitDonationListDonationStatisticListAction({ donationList }));\r\n\t}\r\n\r\n\tpublic initAllDonatorsDataByCost(): void {\r\n\t\tthis._store$.dispatch(new InitAllDonatorsDataByCostDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initAllDonatorsDataByTree(): void {\r\n\t\tthis._store$.dispatch(new InitAllDonatorsDataByTreeDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initTopTenDataStatistic(): void {\r\n\t\tthis._store$.dispatch(new InitTopTenDataStatisticDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic sortTopDonationStatisticList(): void {\r\n\t\tthis._store$.dispatch(new SortTopDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic sortBottomDonationStatisticList(): void {\r\n\t\tthis._store$.dispatch(new SortBottomDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initAllCountriesDataByCost(): void {\r\n\t\tthis._store$.dispatch(new InitAllCountriesDataByCostDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initAllCountriesDataByTree(): void {\r\n\t\tthis._store$.dispatch(new InitAllCountriesDataByTreeDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initDonatorsData(statisticSubCategory: string, statisticElement: string): void {\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.AD) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllDonatorsDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t\tif (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllDonatorsDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.TD) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllDonatorsDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t}\r\n\t\t\tif (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllDonatorsDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic initCountriesData(statisticSubCategory: string, statisticElement: string): void {\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.AC) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllCountriesDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t\tif (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllCountriesDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.TC) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllCountriesDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t} if (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllCountriesDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { donationStatisticListActionsType, DonationStatisticListActions } from './donation-statistic-list.actions';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { DonationStatisticInterface } from 'src/app/models/donation-statistic-list/donation-statistic-interface';\r\n\r\nexport interface IDonationStatisticListState {\r\n\tisInitedUserList: boolean;\r\n\tisInitedDonationList: boolean;\r\n\tisInitedAllDataStatistic: boolean;\r\n\tisInitedTopTenDataStatistic: boolean;\r\n\tisInitedStatisticDataByCost: boolean;\r\n\tisInitedStatisticDataByTree: boolean;\r\n\tisSortedByIncrease: boolean;\r\n\tisSortedByDecrease: boolean;\r\n\tuserList: User[];\r\n\tdonationList: Donation[];\r\n\tstatisticData: DonationStatisticInterface[];\r\n}\r\n\r\nexport const donationStatisticListFeatureKey: 'DONATION-STATISTIC-LIST' = 'DONATION-STATISTIC-LIST';\r\n\r\nconst initialState: IDonationStatisticListState = {\r\n\tisInitedUserList: false,\r\n\tisInitedDonationList: false,\r\n\tisInitedAllDataStatistic: false,\r\n\tisInitedTopTenDataStatistic: false,\r\n\tisInitedStatisticDataByCost: false,\r\n\tisInitedStatisticDataByTree: false,\r\n\tisSortedByIncrease: false,\r\n\tisSortedByDecrease: false,\r\n\tuserList: null,\r\n\tdonationList: null,\r\n\tstatisticData: null\r\n};\r\n\r\nexport function donationStatisticListReducer(\r\n\tstate: IDonationStatisticListState = initialState,\r\n\taction: any\r\n): IDonationStatisticListState {\r\n\tswitch (action.type) {\r\n\t\tcase donationStatisticListActionsType.initUserList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...action.userList],\r\n\t\t\t\tisInitedUserList: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initDonationList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdonationList: [...action.donationList],\r\n\t\t\t\tisInitedDonationList: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllDonatorsDataByCost: {\r\n\t\t\tconst allDonatorsStatisticDataByCost: DonationStatisticInterface[] = [...state.userList].map((user: User) => {\r\n\t\t\t\tconst space: string = ' ';\r\n\t\t\t\tconst userFullName: string = user.name + space + user.surName;\r\n\t\t\t\tlet userTotalDonationCost: number = 0;\r\n\t\t\t\tconst userProfileImage: string = user.profileImage;\r\n\t\t\t\t[...state.donationList].map((donation: Donation) => {\r\n\t\t\t\t\tif (user.id === donation.id) {\r\n\t\t\t\t\t\tuserTotalDonationCost += Number(donation.treeDonation.cost);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (Boolean(userTotalDonationCost)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: userFullName,\r\n\t\t\t\t\t\tpoints: userTotalDonationCost,\r\n\t\t\t\t\t\tbullet: userProfileImage\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}).filter((donator: DonationStatisticInterface) => Boolean(donator));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...allDonatorsStatisticDataByCost],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: true,\r\n\t\t\t\tisInitedStatisticDataByTree: false,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllDonatorsDataByTree: {\r\n\t\t\tconst allDonatorsStatisticDataByTree: DonationStatisticInterface[] = [...state.userList].map((user: User) => {\r\n\t\t\t\tconst space: string = ' ';\r\n\t\t\t\tconst userFullName: string = user.name + space + user.surName;\r\n\t\t\t\tlet userTotalDonationTreeAmount: number = 0;\r\n\t\t\t\tconst userProfileImage: string = user.profileImage;\r\n\t\t\t\t[...state.donationList].map((donation: Donation) => {\r\n\t\t\t\t\tif (user.id === donation.id) {\r\n\t\t\t\t\t\tuserTotalDonationTreeAmount += Number(donation.treeDonation.amount);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (Boolean(userTotalDonationTreeAmount)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: userFullName,\r\n\t\t\t\t\t\tpoints: userTotalDonationTreeAmount,\r\n\t\t\t\t\t\tbullet: userProfileImage\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}).filter((donator: DonationStatisticInterface) => Boolean(donator));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...allDonatorsStatisticDataByTree],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: false,\r\n\t\t\t\tisInitedStatisticDataByTree: true,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initTopTenDataStatistic: {\r\n\t\t\tconst dataStatisticNumber: number = 11;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...state.statisticData].reverse()\r\n\t\t\t\t\t.slice(0, dataStatisticNumber).reverse(),\r\n\t\t\t\tisInitedAllDataStatistic: false,\r\n\t\t\t\tisInitedTopTenDataStatistic: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.sortTop: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...state.statisticData].sort((\r\n\t\t\t\t\tstatistic: DonationStatisticInterface,\r\n\t\t\t\t\tcurrentStatistic: DonationStatisticInterface\r\n\t\t\t\t) => {\r\n\t\t\t\t\treturn (statistic.points > currentStatistic.points) ? 1 : -1;\r\n\t\t\t\t}),\r\n\t\t\t\tisSortedByIncrease: true,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.sortBottom: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...state.statisticData].sort((\r\n\t\t\t\t\tstatistic: DonationStatisticInterface,\r\n\t\t\t\t\tcurrentStatistic: DonationStatisticInterface\r\n\t\t\t\t) => {\r\n\t\t\t\t\treturn (statistic.points > currentStatistic.points) ? -1 : 1;\r\n\t\t\t\t}),\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllCountriesDataByCost: {\r\n\t\t\tconst uniqueCountryNameList: string[] = [];\r\n\t\t\tconst donationsStatisticDataByTree: DonationStatisticInterface[] = [...state.donationList].map((donation: Donation) => {\r\n\t\t\t\tconst takeNumberWordsInCountryName: number = 2;\r\n\t\t\t\tconst currentCountryName: string = donation.country.name;\r\n\t\t\t\tconst isCountryNameInUniqueCountryNameList: string[] = uniqueCountryNameList.filter((countryName: string) => {\r\n\t\t\t\t\tif (Boolean(countryName) && currentCountryName === countryName) {\r\n\t\t\t\t\t\treturn countryName;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (!Boolean(isCountryNameInUniqueCountryNameList.length)) {\r\n\t\t\t\t\tuniqueCountryNameList.push(currentCountryName);\r\n\t\t\t\t\tconst statisticCountryName: string = currentCountryName.split(' ').slice(0, takeNumberWordsInCountryName).join(' ');\r\n\t\t\t\t\tlet currentCountryCostAmount: number = 0;\r\n\t\t\t\t\t[...state.donationList].map((currentDonation: Donation) => {\r\n\t\t\t\t\t\tif (currentDonation.country.name === currentCountryName) {\r\n\t\t\t\t\t\t\tcurrentCountryCostAmount += Number(currentDonation.treeDonation.cost);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: statisticCountryName,\r\n\t\t\t\t\t\tpoints: currentCountryCostAmount,\r\n\t\t\t\t\t\tbullet: donation.country.flag\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}).filter((donation: DonationStatisticInterface) => Boolean(donation));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...donationsStatisticDataByTree],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: true,\r\n\t\t\t\tisInitedStatisticDataByTree: false,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllCountriesDataByTree: {\r\n\t\t\tconst uniqueCountryNameList: string[] = [];\r\n\t\t\tconst donationsStatisticDataByTree: DonationStatisticInterface[] = [...state.donationList].map((donation: Donation) => {\r\n\t\t\t\tconst takeNumberWordsInCountryName: number = 2;\r\n\t\t\t\tconst currentCountryName: string = donation.country.name;\r\n\t\t\t\tconst isCountryNameInUniqueCountryNameList: string[] = uniqueCountryNameList.filter((countryName: string) => {\r\n\t\t\t\t\tif (Boolean(countryName) && currentCountryName === countryName) {\r\n\t\t\t\t\t\treturn countryName;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (!Boolean(isCountryNameInUniqueCountryNameList.length)) {\r\n\t\t\t\t\tuniqueCountryNameList.push(currentCountryName);\r\n\t\t\t\t\tconst statisticCountryName: string = currentCountryName.split(' ').slice(0, takeNumberWordsInCountryName).join(' ');\r\n\t\t\t\t\tlet currentCountryTreeAmount: number = 0;\r\n\t\t\t\t\t[...state.donationList].map((currentDonation: Donation) => {\r\n\t\t\t\t\t\tif (currentDonation.country.name === currentCountryName) {\r\n\t\t\t\t\t\t\tcurrentCountryTreeAmount += Number(currentDonation.treeDonation.amount);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: statisticCountryName,\r\n\t\t\t\t\t\tpoints: currentCountryTreeAmount,\r\n\t\t\t\t\t\tbullet: donation.country.flag\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}).filter((donation: DonationStatisticInterface) => Boolean(donation));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...donationsStatisticDataByTree],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: false,\r\n\t\t\t\tisInitedStatisticDataByTree: true,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerDonationStatisticList(\r\n\tstate: IDonationStatisticListState | undefined,\r\n\taction: DonationStatisticListActions\r\n): IDonationStatisticListState {\r\n\treturn donationStatisticListReducer(state, action);\r\n}\r\n","export * from './donation-statistic-list.reducer';\r\n","import { ActionReducerMap } from '@ngrx/store';\r\nimport {\r\n\tcountryListFeatureKey,\r\n\tStateReducerCountryList,\r\n\tICountryListState\r\n} from './country-list/country-list.reducer';\r\nimport {\r\n\tITreeListState,\r\n\tStateReducerTreeList,\r\n\ttreeListFeatureKey\r\n} from './tree-list/tree-list.reducer';\r\nimport {\r\n\tIUserListState,\r\n\tStateReducerUserList,\r\n\tuserListFeatureKey\r\n} from './user-list/user-list.reducer';\r\nimport {\r\n\tIDonationListState,\r\n\tdonationListFeatureKey,\r\n\tStateReducerDonationList\r\n} from './donation-list/donation-list.reducer';\r\nimport {\r\n\tdonationStatisticListFeatureKey,\r\n\tStateReducerDonationStatisticList,\r\n\tIDonationStatisticListState\r\n} from './donation-statistic-list/donation-statistic-list.reducer';\r\n\r\nexport * from './country-list';\r\nexport * from './tree-list';\r\nexport * from './user-list';\r\nexport * from './donation-list';\r\nexport * from './donation-statistic-list';\r\n\r\nexport interface IAppState {\r\n\t[countryListFeatureKey]: ICountryListState;\r\n\t[treeListFeatureKey]: ITreeListState;\r\n\t[userListFeatureKey]: IUserListState;\r\n\t[donationListFeatureKey]: IDonationListState;\r\n\t[donationStatisticListFeatureKey]: IDonationStatisticListState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<IAppState> = {\r\n\t[countryListFeatureKey]: StateReducerCountryList,\r\n\t[treeListFeatureKey]: StateReducerTreeList,\r\n\t[userListFeatureKey]: StateReducerUserList,\r\n\t[donationListFeatureKey]: StateReducerDonationList,\r\n\t[donationStatisticListFeatureKey]: StateReducerDonationStatisticList\r\n};\r\n","export * from './tree-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { Tree } from 'src/app/models/tree-list/tree';\r\n\r\nexport enum treeListActionsType {\r\n\tinitTrees = '[TREE-LIST/API] Init-Trees Tree-List',\r\n\tinitTreesSuccess = '[TREE-LIST/API] Init-Trees-Success Tree-List',\r\n\tisTreesLoadingSuccess = '[TREE-LIST/API] Is-Loading-Success Tree-List',\r\n\tsearchTreeCategoryTrees = '[TREE-LIST/API] Search-Tree-Category-Trees Tree-list',\r\n\tsearchTree = '[TREE-LIST/API] Search-Tree Tree-List',\r\n\tsearchTreeSuccess = '[TREE-LIST/API] Search-Tree-Success Tree-List',\r\n\ttreeRouterMode = '[TREE-LIST/API] Tree-Router-Mode Tree-List',\r\n\tgoFromTreeRouterMode = '[TREE-LIST/API] Go-From-Tree-Router-Mode Tree-List'\r\n}\r\n\r\nexport class InitTreeListAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.initTrees;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitTreeListSuccessAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.initTreesSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\ttreeList: Tree[]\r\n\t}) { }\r\n\r\n\tpublic get treeList(): Tree[] {\r\n\t\treturn this._payload.treeList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class IsTreesLoadingSuccessAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.isTreesLoadingSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchTreeCategoryTreesAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.searchTreeCategoryTrees;\r\n\r\n\tconstructor(private _payload: {\r\n\t\ttreeCategory: string\r\n\t}) { }\r\n\r\n\tpublic get treeCategory(): string {\r\n\t\treturn this._payload.treeCategory;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchTreeAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.searchTree;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchTreeSuccessAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.searchTreeSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class TreeRouterModeAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.treeRouterMode;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class GoFromTreeRouterAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.goFromTreeRouterMode;\r\n}\r\n\r\nexport type TreeListActions =\r\n\tInitTreeListAction\r\n\t| InitTreeListSuccessAction\r\n\t| IsTreesLoadingSuccessAction\r\n\t| SearchTreeCategoryTreesAction\r\n\t| SearchTreeAction\r\n\t| SearchTreeSuccessAction\r\n\t| TreeRouterModeAction\r\n\t| GoFromTreeRouterAction;\r\n","import { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Injectable } from '@angular/core';\r\nimport { TreeListDataService } from 'src/app/services/tree-data.service';\r\nimport { treeListActionsType, InitTreeListSuccessAction } from './tree-list.actions';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { Tree } from 'src/app/models/tree-list/tree';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TreeListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _treeListDataService: TreeListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadTreeList(): Observable<InitTreeListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(treeListActionsType.initTrees),\r\n\t\t\tswitchMap(() => this._treeListDataService.loadTreeList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((treeList: Tree[]) => {\r\n\t\t\t\t\t\treturn new InitTreeListSuccessAction({ treeList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport {\r\n\tSearchTreeAction,\r\n\tTreeRouterModeAction,\r\n\tSearchTreeSuccessAction,\r\n\tSearchTreeCategoryTreesAction,\r\n\tGoFromTreeRouterAction,\r\n\tInitTreeListAction,\r\n\tIsTreesLoadingSuccessAction\r\n} from './tree-list.actions';\r\n\r\n@Injectable()\r\nexport class FacadeServiceTreeList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic searchTree(name: string): void {\r\n\t\tthis._store$.dispatch(new SearchTreeAction({ name }));\r\n\t}\r\n\r\n\tpublic goToTreeRouterMode(): void {\r\n\t\tthis._store$.dispatch(new TreeRouterModeAction());\r\n\t}\r\n\r\n\tpublic searchTreeSuccess(): void {\r\n\t\tthis._store$.dispatch(new SearchTreeSuccessAction());\r\n\t}\r\n\r\n\tpublic searchTreeCategoryTrees(treeCategory: string): void {\r\n\t\tthis._store$.dispatch(new SearchTreeCategoryTreesAction({ treeCategory }));\r\n\t}\r\n\r\n\tpublic goFromTreeRouter(): void {\r\n\t\tthis._store$.dispatch(new GoFromTreeRouterAction());\r\n\t}\r\n\r\n\tpublic initTreeList(): void {\r\n\t\tthis._store$.dispatch(new InitTreeListAction());\r\n\t}\r\n\r\n\tpublic treesLoadingSuccess(): void {\r\n\t\tthis._store$.dispatch(new IsTreesLoadingSuccessAction());\r\n\t}\r\n\r\n}\r\n","import { Tree } from 'src/app/models/tree-list/tree';\r\nimport { TreeListActions, treeListActionsType } from './tree-list.actions';\r\n\r\nexport interface ITreeListState {\r\n\tisLoading: boolean;\r\n\tisInitedTrees: boolean;\r\n\ttreeList: Tree[];\r\n\ttreeCategoryTrees: Tree[];\r\n\tisSearchLoading: boolean;\r\n\tsearchTree: Tree;\r\n\tisTreeRouterMode: boolean;\r\n}\r\n\r\nexport const treeListFeatureKey: 'TREE-LIST' = 'TREE-LIST';\r\n\r\nconst initialState: ITreeListState = {\r\n\tisLoading: true,\r\n\tisInitedTrees: false,\r\n\ttreeList: null,\r\n\ttreeCategoryTrees: null,\r\n\tisSearchLoading: false,\r\n\tsearchTree: null,\r\n\tisTreeRouterMode: false\r\n};\r\n\r\nexport function treeListReducer(\r\n\tstate: ITreeListState = initialState,\r\n\taction: any\r\n): ITreeListState {\r\n\tswitch (action.type) {\r\n\t\tcase treeListActionsType.initTrees: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.initTreesSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedTrees: true,\r\n\t\t\t\ttreeList: [...action.treeList].filter((tree: Tree) => Boolean(tree))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.isTreesLoadingSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.searchTreeCategoryTrees: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttreeCategoryTrees: [...state.treeList].filter((tree: Tree) => {\r\n\t\t\t\t\tif (tree.type === action.treeCategory) {\r\n\t\t\t\t\t\treturn tree;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.searchTree: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: true,\r\n\t\t\t\tsearchTree: [...state.treeList].find((tree: Tree) => {\r\n\t\t\t\t\tconst currentTreeRouterName: string = tree.name.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t.join('-')\r\n\t\t\t\t\t\t.toLowerCase();\r\n\t\t\t\t\tif (Boolean(tree) && action.name === currentTreeRouterName) {\r\n\t\t\t\t\t\treturn tree;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.searchTreeSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.treeRouterMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTreeRouterMode: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.goFromTreeRouterMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTreeRouterMode: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerTreeList(\r\n\tstate: ITreeListState | undefined,\r\n\taction: TreeListActions\r\n): ITreeListState {\r\n\treturn treeListReducer(state, action);\r\n}\r\n","import { ITreeListState, treeListFeatureKey } from './tree-list.reducer';\r\nimport {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tMemoizedSelector,\r\n\tDefaultProjectorFn\r\n} from '@ngrx/store';\r\nimport { Tree } from 'src/app/models/tree-list/tree';\r\n\r\nexport const selectStateTreeList: MemoizedSelector<\r\n\tobject,\r\n\tITreeListState,\r\n\tDefaultProjectorFn<ITreeListState>\r\n> = createFeatureSelector<ITreeListState>(treeListFeatureKey);\r\n\r\nexport const selectTreeListIsLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isLoading\r\n);\r\n\r\nexport const selectTreeList: MemoizedSelector<\r\n\tobject,\r\n\tTree[],\r\n\tDefaultProjectorFn<Tree[]>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): Tree[] => state.treeList\r\n);\r\n\r\nexport const selectIsInitedTrees: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isInitedTrees\r\n);\r\n\r\nexport const selectTreeCategoryTrees: MemoizedSelector<\r\n\tobject,\r\n\tTree[],\r\n\tDefaultProjectorFn<Tree[]>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): Tree[] => state.treeCategoryTrees\r\n);\r\n\r\nexport const selectSearchTree: MemoizedSelector<\r\n\tobject,\r\n\tTree,\r\n\tDefaultProjectorFn<Tree>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): Tree => state.searchTree\r\n);\r\n\r\nexport const selectIsTreeSearchLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isSearchLoading\r\n);\r\n\r\nexport const selectIsTreeRouterModeAction: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isTreeRouterMode\r\n);\r\n","export * from './user-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport enum userListActionsType {\r\n\tinitUser = '[USER-LIST/API] Init-User User-List',\r\n\tinitNewUser = '[USER-LIST/API] Init-New-User User-List',\r\n\tinitUserList = '[USER-LIST/API] Init-User-List User-List',\r\n\tinitUserListSuccess = '[USER-LIST/API] Init-User-List-Success User-List',\r\n\tinitNewUserProfileImage = '[USER-LIST/API] Init-New-User-Profile-Image User-List',\r\n\tpickUpPointsFromUser = '[USER-LIST/API] Pick-Up-Points-From-User User-List',\r\n\taddMedicalPointsForCurrentUser = '[USER-LIST/API] Add-Medical-Points-For-Current-User User-List',\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initUserList;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserListSuccessAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initUserListSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuser: User\r\n\t}) { }\r\n\r\n\tpublic get user(): User {\r\n\t\treturn this._payload.user;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewUserAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initNewUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuser: User\r\n\t}) { }\r\n\r\n\tpublic get user(): User {\r\n\t\treturn this._payload.user;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewUserProfileImageUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initNewUserProfileImage;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tnewImage: string\r\n\t}) { }\r\n\r\n\tpublic get newImage(): string {\r\n\t\treturn this._payload.newImage;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class PickUpPointsFromUserUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.pickUpPointsFromUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserId: string,\r\n\t\tmedicalPoints: number\r\n\t}) { }\r\n\r\n\tpublic get userId(): string {\r\n\t\treturn this._payload.userId;\r\n\t}\r\n\r\n\tpublic get medicalPoints(): number {\r\n\t\treturn this._payload.medicalPoints;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class AddMedicalPointsForCurrentUserUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.addMedicalPointsForCurrentUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tmedicalPoints: number\r\n\t}) { }\r\n\r\n\tpublic get medicalPoints(): number {\r\n\t\treturn this._payload.medicalPoints;\r\n\t}\r\n}\r\n\r\nexport type UserListActions =\r\n\tInitUserAction\r\n\t| InitNewUserAction\r\n\t| InitUserListAction\r\n\t| InitUserListSuccessAction\r\n\t| InitNewUserProfileImageUserListAction\r\n\t| AddMedicalPointsForCurrentUserUserListAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { UserListDataService } from 'src/app/services/user-data.service';\r\nimport { Effect, ofType, Actions } from '@ngrx/effects';\r\nimport { userListActionsType, InitUserListSuccessAction } from './user-list.actions';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _userListDataService: UserListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadUserList(): Observable<InitUserListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(userListActionsType.initUserList),\r\n\t\t\tswitchMap(() => this._userListDataService.loadUserList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((userList: User[]) => {\r\n\t\t\t\t\t\treturn new InitUserListSuccessAction({ userList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n\tInitNewUserProfileImageUserListAction,\r\n\tPickUpPointsFromUserUserListAction,\r\n\tAddMedicalPointsForCurrentUserUserListAction,\r\n\tInitUserAction,\r\n\tInitNewUserAction,\r\n\tInitUserListAction\r\n} from './user-list.actions';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\n@Injectable()\r\nexport class FacadeServiceUserList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic changeCurrentUserImage(image: string): void {\r\n\t\tthis._store$.dispatch(new InitNewUserProfileImageUserListAction({ newImage: image }));\r\n\t}\r\n\r\n\tpublic pickUpPointsFromUser(userId: string, medicalPoints: number): void {\r\n\t\tthis._store$.dispatch(new PickUpPointsFromUserUserListAction({ userId, medicalPoints }));\r\n\t}\r\n\r\n\tpublic addMedicalPointsForCurrentUser(medicalPoints: number): void {\r\n\t\tthis._store$.dispatch(new AddMedicalPointsForCurrentUserUserListAction({ medicalPoints }));\r\n\t}\r\n\r\n\tpublic initUser(user: User): void {\r\n\t\tthis._store$.dispatch(new InitUserAction({ user }));\r\n\t}\r\n\r\n\tpublic initNewUser(user: User): void {\r\n\t\tthis._store$.dispatch(new InitNewUserAction({ user }));\r\n\t}\r\n\r\n\tpublic initUserList(): void {\r\n\t\tthis._store$.dispatch(new InitUserListAction());\r\n\t}\r\n}\r\n","import { userListActionsType, UserListActions } from './user-list.actions';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport interface IUserListState {\r\n\tisLoading: boolean;\r\n\tuserList: User[];\r\n\tuser: User;\r\n}\r\n\r\nexport const userListFeatureKey: 'USER-LIST' = 'USER-LIST';\r\n\r\nconst initialState: IUserListState = {\r\n\tisLoading: true,\r\n\tuserList: null,\r\n\tuser: null\r\n};\r\n\r\nexport function userListReducer(state: IUserListState = initialState, action: any): IUserListState {\r\n\tswitch (action.type) {\r\n\t\tcase userListActionsType.initUserList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initUserListSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tuserList: [...action.userList]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initUser: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.user.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initNewUser: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...state.userList, action.user.clone()]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initNewUserProfileImage: {\r\n\t\t\tconst newUser: User = state.user.clone();\r\n\t\t\tnewUser.profileImage = action.newImage;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: newUser.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.pickUpPointsFromUser: {\r\n\t\t\tconst currentUser: User = [...state.userList].find((user: User) => user.id === action.userId).clone();\r\n\t\t\tcurrentUser.medicalPoints = currentUser.medicalPoints - action.medicalPoints;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...state.userList].map((user: User) => {\r\n\t\t\t\t\tif (user.id === action.userId) {\r\n\t\t\t\t\t\treturn currentUser.clone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn user.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tuser: currentUser.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.addMedicalPointsForCurrentUser: {\r\n\t\t\tconst currentUser: User = state.user.clone();\r\n\t\t\tcurrentUser.medicalPoints = currentUser.medicalPoints + action.medicalPoints;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...state.userList].map((user: User) => {\r\n\t\t\t\t\tif (user.id === currentUser.id) {\r\n\t\t\t\t\t\treturn currentUser.clone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn user.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tuser: currentUser.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerUserList(\r\n\tstate: IUserListState | undefined,\r\n\taction: UserListActions\r\n): IUserListState {\r\n\treturn userListReducer(state, action);\r\n}\r\n","import { IUserListState, userListFeatureKey } from './user-list.reducer';\r\nimport {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tMemoizedSelector,\r\n\tDefaultProjectorFn\r\n} from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport const selectStateUserList: MemoizedSelector<\r\n\tobject,\r\n\tIUserListState,\r\n\tDefaultProjectorFn<IUserListState>\r\n> = createFeatureSelector<IUserListState>(userListFeatureKey);\r\n\r\nexport const selectUser: MemoizedSelector<\r\n\tobject,\r\n\tUser,\r\n\tDefaultProjectorFn<User>\r\n> = createSelector(\r\n\tselectStateUserList,\r\n\t(state: IUserListState): User => state.user\r\n);\r\n\r\nexport const selectUserList: MemoizedSelector<\r\n\tobject,\r\n\tUser[],\r\n\tDefaultProjectorFn<User[]>\r\n> = createSelector(\r\n\tselectStateUserList,\r\n\t(state: IUserListState): User[] => state.userList\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment: {\r\n  production: boolean;\r\n} = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch((err: Error) => console.error(err));\r\n"]}