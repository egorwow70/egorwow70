{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/country-list/capital-list-snapshot.ts","./src/app/models/country-list/capital.ts","./src/app/models/country-list/country.ts","./src/app/models/donation-list/donation.ts","./src/app/models/donation-statistic-list/statistic-element-type.ts","./src/app/models/donation-statistic-list/statistic-sub-category-type.ts","./src/app/models/tree-list/tree-donation.ts","./src/app/models/tree-list/tree-type.ts","./src/app/models/tree-list/tree.ts","./src/app/models/user-list/user.ts","./src/app/my-error-handler/my-error-handler.module.ts","./src/app/not-found/not-found-routing.module.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/not-found/not-found.module.ts","./src/app/services/country-data.service.ts","./src/app/services/donation-list-data.service.ts","./src/app/services/tree-data.service.ts","./src/app/services/user-data.service.ts","./src/app/store/country-list/country-list.actions.ts","./src/app/store/country-list/country-list.effects.ts","./src/app/store/country-list/country-list.facade.ts","./src/app/store/country-list/country-list.reducer.ts","./src/app/store/country-list/country-list.selectors.ts","./src/app/store/country-list/index.ts","./src/app/store/donation-list/donation-list.actions.ts","./src/app/store/donation-list/donation-list.effects.ts","./src/app/store/donation-list/donation-list.facade.ts","./src/app/store/donation-list/donation-list.reducer.ts","./src/app/store/donation-list/donation-list.selectors.ts","./src/app/store/donation-list/index.ts","./src/app/store/donation-statistic-list/donation-statistic-list.actions.ts","./src/app/store/donation-statistic-list/donation-statistic-list.facade.ts","./src/app/store/donation-statistic-list/donation-statistic-list.reducer.ts","./src/app/store/donation-statistic-list/index.ts","./src/app/store/index.ts","./src/app/store/tree-list/index.ts","./src/app/store/tree-list/tree-list.actions.ts","./src/app/store/tree-list/tree-list.effects.ts","./src/app/store/tree-list/tree-list.facade.ts","./src/app/store/tree-list/tree-list.reducer.ts","./src/app/store/tree-list/tree-list.selectors.ts","./src/app/store/user-list/index.ts","./src/app/store/user-list/user-list.actions.ts","./src/app/store/user-list/user-list.effects.ts","./src/app/store/user-list/user-list.facade.ts","./src/app/store/user-list/user-list.reducer.ts","./src/app/store/user-list/user-list.selectors.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tpathMatch: 'full',\r\n\t\tredirectTo: 'home'\r\n\t},\r\n\t{\r\n\t\tpath: 'home',\r\n\t\tloadChildren: () => import('./country-map/country-map.module').then((m: any) => m.CountryMapModule),\r\n\t},\r\n\t{\r\n\t\tpath: 'countries',\r\n\t\tloadChildren: () => import('./country-list/country-list.module').then((m: any) => m.CountryListModule),\r\n\t},\r\n\t{\r\n\t\tpath: 'trees',\r\n\t\tloadChildren: () => import('./tree-list/tree-list.module').then((m: any) => m.TreeListModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'donation-statistic',\r\n\t\tloadChildren: () => import('./donation-statistic/donation-statistic.module').then((m: any) => m.DonationStatisticModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'user-profile',\r\n\t\tloadChildren: () => import('./user-profile/user-profile.module').then((m: any) => m.UserProfileModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'registration',\r\n\t\tloadChildren: () => import('./registration/registration.module').then((m: any) => m.RegistrationModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'donation',\r\n\t\tloadChildren: () => import('./donation-list-before-registration/donation-list-before-registration.module')\r\n\t\t\t.then((m: any) => m.DonationListBeforeRegistrationModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'about',\r\n\t\tloadChildren: () => import('./about/about.module').then((m: any) => m.AboutModule)\r\n\t},\r\n\t{\r\n\t\tpath: 'contacts',\r\n\t\tloadChildren: () => import('./contacts/contacts.module').then((m: any) => m.ContactsModule)\r\n\t},\r\n\t{\r\n\t\tpath: '**',\r\n\t\tredirectTo: 'not-found'\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport {\r\n\tselectCountryListIsLoading,\r\n\tselectCountryListIsInitedCountries,\r\n\tselectIsInitedCountriesForestAreaData,\r\n\tselectIsInitedCapitalsCoordinatesData,\r\n\tselectCountryList,\r\n\tselectCapitalsCoordinatesData\r\n} from './store/country-list/country-list.selectors';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { Country } from './models/country-list/country';\r\nimport { FacadeServiceCountryList } from './store/country-list/country-list.facade';\r\nimport { Capital } from './models/country-list/capital';\r\nimport { selectTreeList, selectIsInitedTrees } from './store/tree-list/tree-list.selectors';\r\nimport { Tree } from './models/tree-list/tree';\r\nimport { selectUserList } from './store/user-list/user-list.selectors';\r\nimport { User } from './models/user-list/user';\r\nimport { Donation } from './models/donation-list/donation';\r\nimport { selectDonationList } from './store/donation-list/donation-list.selectors';\r\nimport { FacadeServiceUserList } from './store/user-list/user-list.facade';\r\nimport { FacadeServiceDonationList } from './store/donation-list/donation-list.facade';\r\nimport { FacadeServiceTreeList } from './store/tree-list/tree-list.facade';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n\tprivate _destroySubject$: Subject<boolean> = new Subject();\r\n\r\n\tprivate _countryList: Country[] = null;\r\n\r\n\tpublic title: string = 'save-our-planet-project';\r\n\tpublic menuMode: boolean;\r\n\tpublic isLoading: boolean = true;\r\n\r\n\tconstructor(\r\n\t\tprivate store$: Store,\r\n\t\tprivate _facadeCountryListService: FacadeServiceCountryList,\r\n\t\tprivate _facadeTreeListService: FacadeServiceTreeList,\r\n\t\tprivate _facadeUserListService: FacadeServiceUserList,\r\n\t\tprivate _facadeDonationListService: FacadeServiceDonationList,\r\n\t) {\r\n\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\r\n\t\tthis.store$.select(selectUserList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((userList: User[]) => {\r\n\t\t\t\tif (!Boolean(userList)) {\r\n\t\t\t\t\tthis._facadeUserListService.initUserList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCountryList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((countryList: Country[]) => {\r\n\t\t\t\tif (Boolean(countryList)) {\r\n\t\t\t\t\tthis._countryList = countryList;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._facadeCountryListService.initCountryList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCapitalsCoordinatesData)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((capitalsCoordinatesData: Capital[]) => {\r\n\t\t\t\tif (capitalsCoordinatesData) {\r\n\t\t\t\t\tthis._facadeCountryListService.saveCapitalsCoordinatesData(capitalsCoordinatesData);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCountryListIsLoading)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isLoading: boolean) => {\r\n\t\t\t\tthis.isLoading = isLoading;\r\n\t\t\t});\r\n\t\tthis.store$.select(selectCountryListIsInitedCountries)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedCountries: boolean) => {\r\n\t\t\t\tif (isInitedCountries) {\r\n\t\t\t\t\tthis._facadeCountryListService.initCapitalsCoordinatesData(this._countryList);\r\n\t\t\t\t\tthis._facadeCountryListService.initCountriesForestAreaData();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectIsInitedCountriesForestAreaData)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedCountriesForestAreaData: boolean) => {\r\n\t\t\t\tif (isInitedCountriesForestAreaData) {\r\n\t\t\t\t\tthis._facadeCountryListService.initCountriesForestArea();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectIsInitedCapitalsCoordinatesData)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedCapitalsCoordinatesData: boolean) => {\r\n\t\t\t\tif (isInitedCapitalsCoordinatesData) {\r\n\t\t\t\t\tthis._facadeCountryListService.initCapitalsCoordinates();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tcombineLatest([\r\n\t\t\tthis.store$.select(selectIsInitedCountriesForestAreaData)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t\t),\r\n\t\t\tthis.store$.select(selectIsInitedCapitalsCoordinatesData)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t\t)\r\n\t\t]).subscribe(([isInitedCountriesForestAreaData, isInitedCapitalsCoordinatesData]: [boolean, boolean]) => {\r\n\t\t\tif (isInitedCountriesForestAreaData && isInitedCapitalsCoordinatesData) {\r\n\t\t\t\tthis._facadeCountryListService.countriesLoadingSuccess();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.store$.select(selectIsInitedTrees)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((isInitedTrees: boolean) => {\r\n\t\t\t\tif (isInitedTrees) {\r\n\t\t\t\t\tthis._facadeTreeListService.treesLoadingSuccess();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectTreeList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((treeList: Tree[]) => {\r\n\t\t\t\tif (!Boolean(treeList)) {\r\n\t\t\t\t\tthis._facadeTreeListService.initTreeList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.store$.select(selectDonationList)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._destroySubject$)\r\n\t\t\t).subscribe((donationList: Donation[]) => {\r\n\t\t\t\tif (!Boolean(donationList)) {\r\n\t\t\t\t\tthis._facadeDonationListService.initDonationList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroySubject$.next(true);\r\n\t\tthis._destroySubject$.complete();\r\n\t}\r\n\r\n\tpublic toggleMenuMode(): void {\r\n\t\tthis.menuMode = !this.menuMode;\r\n\t}\r\n}\r\n","<div \r\n    class=\"-app\" \r\n    *ngIf=\"!isLoading\">\r\n    <div \r\n        class=\"-app-navigation\" \r\n        [class.-app-navigation_menu-mode]=\"menuMode\">\r\n        <a \r\n            class=\"-app-navigation__profile-button\"\r\n            [class.-app-navigation__profile-button_menu-mode]=\"menuMode\"\r\n            title=\"profile\"\r\n            routerLink=\"/user-profile\">\r\n        </a>\r\n        <a \r\n            class=\"-app-navigation__donation-button\"\r\n            [class.-app-navigation__donation-button_menu-mode]=\"menuMode\"\r\n            title=\"donate\"\r\n            routerLink=\"/donation\">\r\n        </a>\r\n        <a \r\n            class=\"-app-navigation__statistic-button\"\r\n            [class.-app-navigation__statistic-button_menu-mode]=\"menuMode\"\r\n            title=\"donation statistic\"\r\n            routerLink=\"/donation-statistic\">\r\n        </a>\r\n        <div \r\n            class=\"-app-navigation__button\" \r\n            (click)=\"toggleMenuMode()\">\r\n            <span class=\"-app-navigation__button-line -app-navigation__button-line_top\">\r\n            </span>\r\n            <span class=\"-app-navigation__button-line -app-navigation__button-line_middle\">\r\n            </span>\r\n            <span class=\"-app-navigation__button-line -app-navigation__button-line_bottom\">\r\n            </span>\r\n        </div>\r\n        <ng-container *ngIf=\"menuMode\">\r\n            <div class=\"-app-navigation__menu\">\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\"\r\n                        (click)=\"toggleMenuMode()\"\r\n                        routerLink=\"/home\"\r\n                        routerLinkActive=\"active\"\r\n                        [routerLinkActiveOptions]=\"{ exact: true }\">\r\n                        Home\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/about\" \r\n                        routerLinkActive=\"active\">\r\n                        About\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/countries\" \r\n                        routerLinkActive=\"active\">\r\n                        Countries\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/trees\" \r\n                        routerLinkActive=\"active\">\r\n                        Trees\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/registration\" \r\n                        routerLinkActive=\"active\">\r\n                        Registration\r\n                    </a>\r\n                </div>\r\n                <div class=\"-app-navigation__item\">\r\n                    <a \r\n                        class=\"-app-navigation__item-link\" \r\n                        (click)=\"toggleMenuMode()\" \r\n                        routerLink=\"/contacts\" \r\n                        routerLinkActive=\"active\">\r\n                        Contacts\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"-app-router-outlet\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"-app-loading__representation -app-loading__representation_cinema\">\r\n    <div class=\"-app-loading__present-title\">\r\n        Egor Samuilionak presents\r\n    </div>\r\n    <div class=\"-app-loading__sub-title\">\r\n        <div  class=\"-app-loading__sub-title_first\">\r\n            <div class=\"-app-loading__sub-title_first-s\">\r\n                s\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_first-a\">\r\n                a\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_first-v\">\r\n                v\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_first-e\">\r\n                e\r\n            </div>\r\n        </div>\r\n        <div  class=\"-app-loading__sub-title_second\">\r\n            <div class=\"-app-loading__sub-title_second-o\">\r\n                o\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_second-u\">\r\n                u\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_second-r\">\r\n                r\r\n            </div>\r\n        </div>\r\n        <div  class=\"-app-loading__sub-title_third\">\r\n            <div class=\"-app-loading__sub-title_third-p\">\r\n                p\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-l\">\r\n                l\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-a\">\r\n                a\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-n\">\r\n                n\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-e\">\r\n                e\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_third-t\">\r\n                t\r\n            </div>\r\n        </div>\r\n        <div  class=\"-app-loading__sub-title_fourth\">\r\n            <div class=\"-app-loading__sub-title_fourth-p\">\r\n                p\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-r\">\r\n                r\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-o\">\r\n                o\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-j\">\r\n                j\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-e\">\r\n                e\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-c\">\r\n                c\r\n            </div>\r\n            <div class=\"-app-loading__sub-title_fourth-t\">\r\n                t\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div\r\n    class=\"-app-loading\" \r\n    *ngIf=\"isLoading\">\r\n    <div class=\"-app-loading__title\">\r\n        Now loading\r\n    </div>\r\n    <div class=\"-app-loading__line\">\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../environments/environment';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { reducers } from './store/';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { CountryListEffects } from './store/country-list/country-list.effects';\r\nimport { TreeListEffects } from './store/tree-list/tree-list.effects';\r\nimport { UserListEffects } from './store/user-list/user-list.effects';\r\nimport { DonationListEffects } from './store/donation-list/donation-list.effects';\r\nimport { NotFoundModule } from './not-found/not-found.module';\r\nimport { TreeListDataService } from './services/tree-data.service';\r\nimport { UserListDataService } from './services/user-data.service';\r\nimport { DonationListDataService } from './services/donation-list-data.service';\r\nimport { CountryListDataService } from './services/country-data.service';\r\nimport { MyErrorHandler } from './my-error-handler/my-error-handler.module';\r\nimport { FacadeServiceCountryList } from './store/country-list/country-list.facade';\r\nimport { FacadeServiceDonationList } from './store/donation-list/donation-list.facade';\r\nimport { FacadeServiceDonationStatisticList } from './store/donation-statistic-list/donation-statistic-list.facade';\r\nimport { FacadeServiceTreeList } from './store/tree-list/tree-list.facade';\r\nimport { FacadeServiceUserList } from './store/user-list/user-list.facade';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tAppRoutingModule,\r\n\t\tHttpClientModule,\r\n\t\tStoreModule.forRoot(reducers),\r\n\t\tStoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n\t\tEffectsModule.forRoot([CountryListEffects, TreeListEffects, UserListEffects, DonationListEffects]),\r\n\t\tStoreRouterConnectingModule.forRoot(),\r\n\t\tNotFoundModule\r\n\t],\r\n\tproviders: [\r\n\t\tCountryListDataService,\r\n\t\tTreeListDataService,\r\n\t\tUserListDataService,\r\n\t\tDonationListDataService,\r\n\t\tFacadeServiceCountryList,\r\n\t\tFacadeServiceDonationList,\r\n\t\tFacadeServiceDonationStatisticList,\r\n\t\tFacadeServiceTreeList,\r\n\t\tFacadeServiceUserList,\r\n\t\t{ provide: ErrorHandler, useClass: MyErrorHandler },\r\n\t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { Capital } from './capital';\r\n\r\nexport class CapitalListSnapshot {\r\n\r\n\tconstructor(\r\n\t\tpublic capitalList: Capital[]\r\n\t) { }\r\n\r\n\tpublic static fromJSON(json: any): CapitalListSnapshot {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new CapitalListSnapshot(\r\n\t\t\t\t(json.capitalList || []).filter(Boolean).map(Capital.fromJSON)\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic static toJSON(capitalListSnapshot: CapitalListSnapshot): any {\r\n\t\treturn Boolean(capitalListSnapshot)\r\n\t\t\t? {\r\n\t\t\t\tcapitalList: (capitalListSnapshot.capitalList || []).filter(Boolean).map(Capital.toJSON)\r\n\t\t\t}\r\n\t\t\t: {};\r\n\t}\r\n}\r\n","export class Capital {\r\n\tprivate _latitude: number;\r\n\tprivate _longitude: number;\r\n\tprivate _name: string;\r\n\r\n\tconstructor(\r\n\t\tlatitude: number,\r\n\t\tlongitude: number,\r\n\t\tname: string\r\n\t) {\r\n\t\tthis._latitude = latitude;\r\n\t\tthis._longitude = longitude;\r\n\t\tthis._name = name;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Capital {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Capital(\r\n\t\t\t\tjson.latitude,\r\n\t\t\t\tjson.longitude,\r\n\t\t\t\tjson.name,\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic static toJSON(capital: Capital): any {\r\n\t\treturn Boolean(capital)\r\n\t\t\t? {\r\n\t\t\t\tlatitude: capital.latitude,\r\n\t\t\t\tlongitude: capital.longitude,\r\n\t\t\t\tname: capital.name\r\n\t\t\t}\r\n\t\t\t: {};\r\n\t}\r\n\r\n\tpublic set latitude(newlatitude: number) {\r\n\t\tthis._latitude = newlatitude;\r\n\t}\r\n\r\n\tpublic get latitude(): number {\r\n\t\treturn this._latitude;\r\n\t}\r\n\r\n\tpublic set longitude(newlongitude: number) {\r\n\t\tthis._longitude = newlongitude;\r\n\t}\r\n\r\n\tpublic get longitude(): number {\r\n\t\treturn this._longitude;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic clone(): Capital {\r\n\t\treturn new Capital(\r\n\t\t\tthis.latitude,\r\n\t\t\tthis.longitude,\r\n\t\t\tthis.name,\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Capital } from './capital';\r\n\r\nexport class Country {\r\n\tprivate _id: string;\r\n\tprivate _name: string;\r\n\tprivate _nativeName: string;\r\n\tprivate _region: string;\r\n\tprivate _subRegion: string;\r\n\tprivate _capital: Capital;\r\n\tprivate _population: number;\r\n\tprivate _area: number;\r\n\tprivate _forestArea: number;\r\n\tprivate _flag: string;\r\n\tprivate _timeZone: string;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tname: string,\r\n\t\tnativeName: string,\r\n\t\tregion: string,\r\n\t\tsubRegion: string,\r\n\t\tcapital: Capital,\r\n\t\tpopulation: number,\r\n\t\tarea: number,\r\n\t\tforestArea: number,\r\n\t\tflag: string,\r\n\t\ttimeZone: string\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._name = name;\r\n\t\tthis._nativeName = nativeName;\r\n\t\tthis._region = region;\r\n\t\tthis._subRegion = subRegion;\r\n\t\tthis._capital = capital;\r\n\t\tthis._population = population;\r\n\t\tthis._area = area;\r\n\t\tthis._forestArea = forestArea;\r\n\t\tthis._flag = flag;\r\n\t\tthis._timeZone = timeZone;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set nativeName(newNativeName: string) {\r\n\t\tthis._nativeName = newNativeName;\r\n\t}\r\n\r\n\tpublic get nativeName(): string {\r\n\t\treturn this._nativeName;\r\n\t}\r\n\r\n\tpublic set region(newRegion: string) {\r\n\t\tthis._region = newRegion;\r\n\t}\r\n\r\n\tpublic get region(): string {\r\n\t\treturn this._region;\r\n\t}\r\n\r\n\tpublic set subRegion(newSubRegion: string) {\r\n\t\tthis._subRegion = newSubRegion;\r\n\t}\r\n\r\n\tpublic get subRegion(): string {\r\n\t\treturn this._subRegion;\r\n\t}\r\n\r\n\tpublic set capital(newCapital: Capital) {\r\n\t\tthis._capital = newCapital;\r\n\t}\r\n\r\n\tpublic get capital(): Capital {\r\n\t\treturn this._capital;\r\n\t}\r\n\r\n\tpublic set population(newPopulation: number) {\r\n\t\tthis._population = newPopulation;\r\n\t}\r\n\r\n\tpublic get population(): number {\r\n\t\treturn this._population;\r\n\t}\r\n\r\n\tpublic set area(newArea: number) {\r\n\t\tthis._area = newArea;\r\n\t}\r\n\r\n\tpublic get area(): number {\r\n\t\treturn this._area;\r\n\t}\r\n\r\n\tpublic set forestArea(newForestArea: number) {\r\n\t\tthis._forestArea = newForestArea;\r\n\t}\r\n\r\n\tpublic get forestArea(): number {\r\n\t\treturn this._forestArea;\r\n\t}\r\n\r\n\tpublic set flag(newFlag: string) {\r\n\t\tthis._flag = newFlag;\r\n\t}\r\n\r\n\tpublic get flag(): string {\r\n\t\treturn this._flag;\r\n\t}\r\n\r\n\tpublic set timeZone(newTimeZone: string) {\r\n\t\tthis._timeZone = newTimeZone;\r\n\t}\r\n\r\n\tpublic get timeZone(): string {\r\n\t\treturn this._timeZone;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Country {\r\n\t\tconst timezones: string = (Boolean(json.timezones) ?? json.timezones.length > 0)\r\n\t\t\t? json.timezones[0]\r\n\t\t\t: undefined;\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Country(\r\n\t\t\t\tjson.alpha2Code,\r\n\t\t\t\tjson.name,\r\n\t\t\t\tjson.nativeName,\r\n\t\t\t\tjson.region,\r\n\t\t\t\tjson.subregion,\r\n\t\t\t\tnew Capital(\r\n\t\t\t\t\tjson.latitude,\r\n\t\t\t\t\tjson.longitude,\r\n\t\t\t\t\tjson.capital\r\n\t\t\t\t),\r\n\t\t\t\tjson.population,\r\n\t\t\t\tjson.area,\r\n\t\t\t\tjson.forestArea,\r\n\t\t\t\tjson.flag,\r\n\t\t\t\ttimezones,\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic clone(): Country {\r\n\t\treturn new Country(\r\n\t\t\tthis.id,\r\n\t\t\tthis.name,\r\n\t\t\tthis.nativeName,\r\n\t\t\tthis.region,\r\n\t\t\tthis.subRegion,\r\n\t\t\tthis.capital.clone(),\r\n\t\t\tthis.population,\r\n\t\t\tthis.area,\r\n\t\t\tthis.forestArea,\r\n\t\t\tthis.flag,\r\n\t\t\tthis.timeZone\r\n\t\t);\r\n\t}\r\n\r\n\tpublic equals(country: Country): boolean {\r\n\t\treturn (Boolean(country)\r\n\t\t\t&& JSON.stringify(country) === JSON.stringify(this));\r\n\t}\r\n}\r\n","import { Country } from '../country-list/country';\r\nimport { TreeDonation } from '../tree-list/tree-donation';\r\nimport { Tree } from '../tree-list/tree';\r\nimport { TreeType } from '../tree-list/tree-type';\r\n\r\nexport class Donation {\r\n\tprivate _id: string;\r\n\tprivate _country: Country;\r\n\tprivate _treeDonation: TreeDonation;\r\n\tprivate _date: Date;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tcountry: Country,\r\n\t\ttreeDonation: TreeDonation,\r\n\t\tdate: Date,\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._country = country;\r\n\t\tthis._treeDonation = treeDonation;\r\n\t\tthis._date = date;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Donation {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Donation(\r\n\t\t\t\tjson.id,\r\n\t\t\t\tjson.country,\r\n\t\t\t\tnew TreeDonation(\r\n\t\t\t\t\tjson.treeDonation.id,\r\n\t\t\t\t\tjson.treeDonation.amount,\r\n\t\t\t\t\tjson.treeDonation.cost,\r\n\t\t\t\t\tnew Tree(\r\n\t\t\t\t\t\tjson.treeDonation.tree.id,\r\n\t\t\t\t\t\tjson.treeDonation.tree.name,\r\n\t\t\t\t\t\tjson.treeDonation.tree.description,\r\n\t\t\t\t\t\tjson.treeDonation.tree.picture,\r\n\t\t\t\t\t\tjson.treeDonation.tree.size,\r\n\t\t\t\t\t\tjson.treeDonation.tree.environment,\r\n\t\t\t\t\t\tjson.treeDonation.tree.keyFeature,\r\n\t\t\t\t\t\tNumber(json.treeDonation.tree.cost),\r\n\t\t\t\t\t\tTreeType[json.treeDonation.tree.id]\r\n\t\t\t\t\t)\r\n\t\t\t\t),\r\n\t\t\t\tjson.date,\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set country(newCountry: Country) {\r\n\t\tthis._country = newCountry;\r\n\t}\r\n\r\n\tpublic get country(): Country {\r\n\t\treturn this._country;\r\n\t}\r\n\r\n\tpublic set treeDonation(newTreeDonation: TreeDonation) {\r\n\t\tthis._treeDonation = newTreeDonation;\r\n\t}\r\n\r\n\tpublic get treeDonation(): TreeDonation {\r\n\t\treturn this._treeDonation;\r\n\t}\r\n\r\n\tpublic set date(newDate: Date) {\r\n\t\tthis._date = newDate;\r\n\t}\r\n\r\n\tpublic get date(): Date {\r\n\t\treturn this._date;\r\n\t}\r\n\r\n\tpublic equals(donation: Donation): boolean {\r\n\t\treturn (Boolean(donation)\r\n\t\t\t&& JSON.stringify(donation) === JSON.stringify(this));\r\n\t}\r\n\r\n\tpublic clone(): Donation {\r\n\t\treturn new Donation(\r\n\t\t\tthis.id,\r\n\t\t\tthis.country,\r\n\t\t\tthis.treeDonation.clone(),\r\n\t\t\tthis.date\r\n\t\t);\r\n\t}\r\n}\r\n","export enum StatisticElementType {\r\n\tBC = 'by-cost',\r\n\tBT = 'by-tree'\r\n}\r\n","export enum StatisticSubCategoryType {\r\n\tAD = 'all-donators',\r\n\tTD = 'top-10-donators',\r\n\tAC = 'all-countries',\r\n\tTC = 'top-10-countries'\r\n}\r\n","import { Tree } from './tree';\r\n\r\nexport class TreeDonation {\r\n\tprivate _id: string;\r\n\tprivate _amont: number;\r\n\tprivate _cost: number;\r\n\tprivate _tree: Tree;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tamount: number,\r\n\t\tcost: number,\r\n\t\ttree: Tree\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._amont = amount;\r\n\t\tthis._cost = cost;\r\n\t\tthis._tree = tree;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set amount(newAmount: number) {\r\n\t\tthis._amont = newAmount;\r\n\t}\r\n\r\n\tpublic get amount(): number {\r\n\t\treturn this._amont;\r\n\t}\r\n\r\n\tpublic set cost(newCost: number) {\r\n\t\tthis._cost = newCost;\r\n\t}\r\n\r\n\tpublic get cost(): number {\r\n\t\treturn this._cost;\r\n\t}\r\n\r\n\tpublic set tree(newTree: Tree) {\r\n\t\tthis._tree = newTree;\r\n\t}\r\n\r\n\tpublic get tree(): Tree {\r\n\t\treturn this._tree;\r\n\t}\r\n\r\n\tpublic clone(): TreeDonation {\r\n\t\treturn new TreeDonation(\r\n\t\t\tthis.id,\r\n\t\t\tthis.amount,\r\n\t\t\tthis.cost,\r\n\t\t\tthis.tree.clone()\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","export enum TreeType {\r\n   NT = 'native-trees',\r\n   AS = 'arboretum-species',\r\n   PF = 'patio-fruit-trees',\r\n   EG = 'evergreen',\r\n   PG = 'pot-grown-trees',\r\n   SH = 'shrubs'\r\n}\r\n","import { TreeType } from './tree-type';\r\n\r\nexport class Tree {\r\n\tprivate _id: string;\r\n\tprivate _name: string;\r\n\tprivate _description: string;\r\n\tprivate _picture: string;\r\n\tprivate _size: string;\r\n\tprivate _environment: string;\r\n\tprivate _keyFeature: string;\r\n\tprivate _cost: number;\r\n\tprivate _type: TreeType;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tname: string,\r\n\t\tdescription: string,\r\n\t\tpicture: string,\r\n\t\tsize: string,\r\n\t\tenvironment: string,\r\n\t\tkeyFeature: string,\r\n\t\tcost: number,\r\n\t\ttype: TreeType,\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._name = name;\r\n\t\tthis._description = description;\r\n\t\tthis._picture = picture;\r\n\t\tthis._size = size;\r\n\t\tthis._environment = environment;\r\n\t\tthis._keyFeature = keyFeature;\r\n\t\tthis._cost = cost;\r\n\t\tthis._type = type;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set description(newDescription: string) {\r\n\t\tthis._description = newDescription;\r\n\t}\r\n\r\n\tpublic get description(): string {\r\n\t\treturn this._description;\r\n\t}\r\n\r\n\tpublic set picture(newPicture: string) {\r\n\t\tthis._picture = newPicture;\r\n\t}\r\n\r\n\tpublic get picture(): string {\r\n\t\treturn this._picture;\r\n\t}\r\n\r\n\tpublic set size(newSize: string) {\r\n\t\tthis._size = newSize;\r\n\t}\r\n\r\n\tpublic get size(): string {\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic set environment(newEnvironment: string) {\r\n\t\tthis._environment = newEnvironment;\r\n\t}\r\n\r\n\tpublic get environment(): string {\r\n\t\treturn this._environment;\r\n\t}\r\n\r\n\tpublic set keyFeature(newKeyFeature: string) {\r\n\t\tthis._keyFeature = newKeyFeature;\r\n\t}\r\n\r\n\tpublic get keyFeature(): string {\r\n\t\treturn this._keyFeature;\r\n\t}\r\n\r\n\tpublic set cost(newCost: number) {\r\n\t\tthis._cost = newCost;\r\n\t}\r\n\r\n\tpublic get cost(): number {\r\n\t\treturn this._cost;\r\n\t}\r\n\r\n\tpublic set type(newType: TreeType) {\r\n\t\tthis._type = newType;\r\n\t}\r\n\r\n\tpublic get type(): TreeType {\r\n\t\treturn this._type;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): Tree {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new Tree(\r\n\t\t\t\tjson.id,\r\n\t\t\t\tjson.name,\r\n\t\t\t\tjson.description,\r\n\t\t\t\tjson.picture,\r\n\t\t\t\tjson.size,\r\n\t\t\t\tjson.environment,\r\n\t\t\t\tjson.keyFeature,\r\n\t\t\t\tNumber(json.cost),\r\n\t\t\t\tTreeType[json.id],\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic clone(): Tree {\r\n\t\treturn new Tree(\r\n\t\t\tthis.id,\r\n\t\t\tthis.name,\r\n\t\t\tthis.description,\r\n\t\t\tthis.picture,\r\n\t\t\tthis.size,\r\n\t\t\tthis.environment,\r\n\t\t\tthis.keyFeature,\r\n\t\t\tthis.cost,\r\n\t\t\tthis.type,\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Country } from '../country-list/country';\r\nimport { Donation } from '../donation-list/donation';\r\n\r\nexport class User {\r\n\tprivate _id: string;\r\n\tprivate _name: string;\r\n\tprivate _surName: string;\r\n\tprivate _password: string;\r\n\tprivate _email: string;\r\n\tprivate _profileImage: string;\r\n\tprivate _age: number;\r\n\tprivate _date: Date;\r\n\tprivate _country: Country;\r\n\tprivate _donationList: Donation[];\r\n\tprivate _medicalPoints: number;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tname: string,\r\n\t\tsurName: string,\r\n\t\tpassword: string,\r\n\t\temail?: string,\r\n\t\tprofileImage?: string,\r\n\t\tage?: number,\r\n\t\tdate?: Date,\r\n\t\tcountry?: Country,\r\n\t\tdonationList?: Donation[],\r\n\t\tmedicalPoints?: number\r\n\t) {\r\n\t\tthis._id = id;\r\n\t\tthis._name = name;\r\n\t\tthis._surName = surName;\r\n\t\tthis._password = password;\r\n\t\tthis._email = email;\r\n\t\tthis._profileImage = profileImage;\r\n\t\tthis._age = age;\r\n\t\tthis._date = date;\r\n\t\tthis._country = country;\r\n\t\tthis._donationList = donationList;\r\n\t\tthis._medicalPoints = medicalPoints;\r\n\t}\r\n\r\n\tpublic set id(newId: string) {\r\n\t\tthis._id = newId;\r\n\t}\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic set name(newName: string) {\r\n\t\tthis._name = newName;\r\n\t}\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set surName(newSurname: string) {\r\n\t\tthis._surName = newSurname;\r\n\t}\r\n\r\n\tpublic get surName(): string {\r\n\t\treturn this._surName;\r\n\t}\r\n\r\n\tpublic set password(newPassword: string) {\r\n\t\tthis._password = newPassword;\r\n\t}\r\n\r\n\tpublic get password(): string {\r\n\t\treturn this._password;\r\n\t}\r\n\r\n\tpublic set email(newEmail: string) {\r\n\t\tthis._email = newEmail;\r\n\t}\r\n\r\n\tpublic get email(): string {\r\n\t\treturn this._email;\r\n\t}\r\n\r\n\tpublic set profileImage(newProfileImage: string) {\r\n\t\tthis._profileImage = newProfileImage;\r\n\t}\r\n\r\n\tpublic get profileImage(): string {\r\n\t\treturn this._profileImage;\r\n\t}\r\n\r\n\tpublic set age(newAge: number) {\r\n\t\tthis._age = newAge;\r\n\t}\r\n\r\n\tpublic get age(): number {\r\n\t\treturn this._age;\r\n\t}\r\n\r\n\tpublic set date(newDate: Date) {\r\n\t\tthis._date = newDate;\r\n\t}\r\n\r\n\tpublic get date(): Date {\r\n\t\treturn this._date;\r\n\t}\r\n\r\n\tpublic set country(newCountry: Country) {\r\n\t\tthis._country = newCountry;\r\n\t}\r\n\r\n\tpublic get country(): Country {\r\n\t\treturn this._country;\r\n\t}\r\n\r\n\tpublic set donationList(newDonationList: Donation[]) {\r\n\t\tthis._donationList = newDonationList;\r\n\t}\r\n\r\n\tpublic get donationList(): Donation[] {\r\n\t\treturn this._donationList;\r\n\t}\r\n\r\n\tpublic set medicalPoints(newMedicalPoints: number) {\r\n\t\tthis._medicalPoints = newMedicalPoints;\r\n\t}\r\n\r\n\tpublic get medicalPoints(): number {\r\n\t\treturn this._medicalPoints;\r\n\t}\r\n\r\n\tpublic static fromJSON(json: any): User {\r\n\t\treturn Boolean(json)\r\n\t\t\t? new User(\r\n\t\t\t\tjson.id,\r\n\t\t\t\tjson.name,\r\n\t\t\t\tjson.surname,\r\n\t\t\t\tjson.password,\r\n\t\t\t\tjson.email,\r\n\t\t\t\tjson.profileImage,\r\n\t\t\t\tNumber(json.age),\r\n\t\t\t\tjson.date,\r\n\t\t\t\tCountry.fromJSON(json.country),\r\n\t\t\t\tjson.donationList,\r\n\t\t\t\tNumber(json.medicalPoints)\r\n\t\t\t)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tpublic clone(): User {\r\n\t\tconst donationListClone: Donation[] = (Boolean(this.donationList))\r\n\t\t\t? [...this.donationList]\r\n\t\t\t: null;\r\n\t\tconst countryListClone: Country = (Boolean(this.country))\r\n\t\t\t? this.country.clone()\r\n\t\t\t: null;\r\n\t\treturn new User(\r\n\t\t\tthis.id,\r\n\t\t\tthis.name,\r\n\t\t\tthis.surName,\r\n\t\t\tthis.password,\r\n\t\t\tthis.email,\r\n\t\t\tthis.profileImage,\r\n\t\t\tthis.age,\r\n\t\t\tthis.date,\r\n\t\t\tcountryListClone,\r\n\t\t\tdonationListClone,\r\n\t\t\tthis.medicalPoints\r\n\t\t);\r\n\t}\r\n\r\n\tpublic loginEquals(user: User): boolean {\r\n\t\treturn this.name === user.name\r\n\t\t\t&& this.surName === user.surName\r\n\t\t\t&& this.password === user.password\r\n\t\t\t&& Boolean(user);\r\n\t}\r\n\r\n}\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class MyErrorHandler implements ErrorHandler {\r\n\tconstructor(\r\n\t\tprivate _router: Router\r\n\t) {\r\n\r\n\t}\r\n\tpublic handleError(error: Error): void {\r\n\t\tconsole.log(error.message);\r\n\t\tthis._router.navigate(['/not-found']);\r\n\t}\r\n}\r\n","import { NotFoundComponent } from './not-found.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: 'not-found',\r\n\t\tcomponent: NotFoundComponent\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class NotFoundRoutingModule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-not-found',\r\n\ttemplateUrl: './not-found.component.html',\r\n\tstyleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent {\r\n\r\n\tconstructor(\r\n\t\tprivate _router: Router\r\n\t) { }\r\n\r\n\tpublic goHome(): void {\r\n\t\tthis._router.navigate(['']);\r\n\t}\r\n\r\n}\r\n","<div class=\"-app-not-found\">\r\n    <div class=\"-app-not-found__title\">\r\n        <div class=\"-app-not-found__title-letter-wrapper\">\r\n            <div class=\"-app-not-found__title-letter -app-not-found__title-letter_left\">\r\n                4\r\n            </div>\r\n        </div>\r\n        <div class=\"-app-not-found__title-letter-wrapper\">\r\n            <div class=\"-app-not-found__title-letter -app-not-found__title-letter_middle\">\r\n                0\r\n            </div>\r\n        </div>\r\n        <div class=\"-app-not-found__title-letter-wrapper\">\r\n            <div class=\"-app-not-found__title-letter -app-not-found__title-letter_right\">\r\n                4\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"-app-not-found__info\">\r\n        <div class=\"-app-not-found__info-sub-title\">\r\n            not found\r\n        </div>\r\n        <button \r\n            class=\"-app-not-found__info-button\"\r\n            (click)=\"goHome()\">\r\n            go home\r\n        </button>\r\n    </div>\r\n    \r\n \r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { NotFoundComponent } from './not-found.component';\r\nimport { NotFoundRoutingModule } from './not-found-routing.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tNotFoundComponent\r\n\t],\r\n\timports: [\r\n\t\tNotFoundRoutingModule\r\n\t],\r\n\tproviders: [],\r\n\tbootstrap: [NotFoundComponent]\r\n})\r\nexport class NotFoundModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { Country } from '../models/country-list/country';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { Capital } from '../models/country-list/capital';\r\nimport { CapitalListSnapshot } from '../models/country-list/capital-list-snapshot';\r\n\r\n@Injectable()\r\nexport class CountryListDataService {\r\n\r\n\tprivate static countryListLSKey: string = '-app-country-list';\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\tprivate _countryUrl: string = 'https://restcountries.eu/rest/v2/all';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) {\r\n\r\n\t}\r\n\r\n\tpublic loadCountriesList(): Observable<Country[]> {\r\n\t\treturn this._httpClient.get<any>(this._countryUrl)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(Country.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tpublic loadCapitalsCoordinatesData(countryList: Country[]): any {\r\n\t\tconst LSData: string = localStorage.getItem(CountryListDataService.countryListLSKey);\r\n\t\tif (Boolean(LSData)) {\r\n\t\t\treturn of([...(CapitalListSnapshot.fromJSON(JSON.parse(LSData))).capitalList]);\r\n\t\t} else {\r\n\t\t\tconst countryList$: Array<Observable<any>> = [...countryList].map((currentCountry: Country) => {\r\n\t\t\t\tconst currentCountryCapitalName: string = currentCountry.capital.name;\r\n\t\t\t\tif (Boolean(currentCountryCapitalName)) {\r\n\t\t\t\t\treturn this._httpClient.get<any>(`https://geocode-maps.yandex.ru/1.x/?format=json&apikey=cf12cc60-e991-460b-8057-553e3de62bf8&geocode=${currentCountryCapitalName}`)\r\n\t\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\t\t\t\tconst newCountry: Country = currentCountry.clone();\r\n\t\t\t\t\t\t\t\tif (Boolean(json.response.GeoObjectCollection.featureMember[0])) {\r\n\t\t\t\t\t\t\t\t\tif (json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos) {\r\n\t\t\t\t\t\t\t\t\t\tconst location: string = json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\r\n\t\t\t\t\t\t\t\t\t\tconst coordinates: string[] = location.split(' ');\r\n\t\t\t\t\t\t\t\t\t\tconst newCountryCapitalName: string = newCountry.capital.name;\r\n\t\t\t\t\t\t\t\t\t\tif (Boolean(coordinates[0]) && Boolean(coordinates[1]) && Boolean(newCountryCapitalName)) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn new Capital(\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(coordinates[1]),\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(coordinates[0]),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewCountryCapitalName\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn of(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn forkJoin([...countryList$]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic loadCountriesForestAreaData(): Observable<any> {\r\n\t\tconst loadForestAreaDataDelay: number = 5500;\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/countries-forest-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tdelay(loadForestAreaDataDelay),\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map((forestAreaObject: any) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: `${forestAreaObject.id}`,\r\n\t\t\t\t\t\t\tvalue: Number(forestAreaObject.value)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tpublic saveCapitalsCoordinatesData(capitalListSnapshot: CapitalListSnapshot): void {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tCountryListDataService.countryListLSKey,\r\n\t\t\tJSON.stringify(\r\n\t\t\t\tCapitalListSnapshot.toJSON(capitalListSnapshot)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Donation } from '../models/donation-list/donation';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DonationListDataService {\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) { }\r\n\r\n\tpublic loadDonationList(): Observable<Donation[]> {\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/donations-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(Donation.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Tree } from '../models/tree-list/tree';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TreeListDataService {\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) { }\r\n\r\n\tpublic loadTreeList(): Observable<Tree[]> {\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/trees-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tfirst(),\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(Tree.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user-list/user';\r\nimport { first, map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserListDataService {\r\n\r\n\tprivate _baseUrl: string = 'assets';\r\n\r\n\tconstructor(\r\n\t\tprivate _httpClient: HttpClient\r\n\t) { }\r\n\r\n\tpublic loadUserList(): Observable<User[]> {\r\n\t\treturn this._httpClient.get<any>(`${this._baseUrl}/users-data.json`)\r\n\t\t\t.pipe(\r\n\t\t\t\tfirst(),\r\n\t\t\t\tmap((json: any) => {\r\n\t\t\t\t\treturn (json || []).filter(Boolean).map(User.fromJSON);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\n\r\nexport enum countryListActionsType {\r\n\tinitCountries = '[COUNTRY-LIST/API] Init-Countries Country-List',\r\n\tinitCountriesSuccess = '[COUNTRY-LIST/API] Init-Countries-Success Country-List',\r\n\tinitCapitalsCoordinatesData = '[COUNTRY-LIST/API] Init-Capitals-Coordinates-Data Country-List',\r\n\tinitCapitalsCoordinatesDataSuccess = '[COUNTRY-LIST/API] Init-Capitals-Coordinates-Data-Success Country-List',\r\n\tinitCountriesForestArea = '[COUNTRY-LIST/API] Init-Countries-Forest-Area Country-List',\r\n\tinitCountriesForestAreaData = '[COUNTRY-LIST/API] Init-Countries-Forest-Area-Data Country-List',\r\n\tinitCountriesForestAreaDataSuccess = '[COUNTRY-LIST/API] Init-Countries-Forest-Area-Data-Success Country-List',\r\n\tisCountriesLoadingSuccess = '[COUNTRY-LIST/API] Is-Loading-Success Country-List',\r\n\tinitCapitalsCoordinates = '[COUNTRY-LIST/API] Init-Capitals-Coordinates Country-List',\r\n\tsearchSubRegionCountries = '[COUNTRY-LIST/API] Search-Sub-Region-Countries Country-List',\r\n\tsearchCountry = '[COUNTRY-LIST/API] Search-Country Country-List',\r\n\tsearchCountrySuccess = '[COUNTRY-LIST/API] Search-Country-Success Country-List',\r\n\tsearchPreviousCountry = '[COUNTRY-LIST/API] Search-Previous-Country Country-List',\r\n\tsearchNextCountry = '[COUNTRY-LIST/API] Search-Next-Country Country-List',\r\n\ttoggleMapMode = '[COUNTRY-LIST/API] Toggle-Map-Mode Country-List',\r\n\ttoggleShowCapitalsMode = '[COUNTRY-LIST/API] Toggle-Is-Show-Capitals-Mode Country-List'\r\n}\r\n\r\nexport class InitCountryListAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountries;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountryListSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountryList: Country[]\r\n\t}) { }\r\n\r\n\tpublic get countryList(): Country[] {\r\n\t\treturn this._payload.countryList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCapitalsCoordinatesAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCapitalsCoordinates;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCapitalsCoordinatesDataAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCapitalsCoordinatesData;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountryList: Country[]\r\n\t}) { }\r\n\r\n\tpublic get countryList(): Country[] {\r\n\t\treturn this._payload.countryList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCapitalsCoordinatesDataSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCapitalsCoordinatesDataSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcapitalsCoordinatesData: Capital[]\r\n\t}) { }\r\n\r\n\tpublic get capitalsCoordinatesData(): Capital[] {\r\n\t\treturn this._payload.capitalsCoordinatesData;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountriesForestAreaAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesForestArea;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountriesForestAreaDataAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesForestAreaData;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitCountriesForestAreaDataSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.initCountriesForestAreaDataSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountriesForestAreaData: any\r\n\t}) { }\r\n\r\n\tpublic get countriesForestAreaData(): any {\r\n\t\treturn this._payload.countriesForestAreaData;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class IsCountriesLoadingSuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.isCountriesLoadingSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchSubRegionCountriesAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchSubRegionCountries;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tsubRegionName: string\r\n\t\tregionName: string\r\n\t}) { }\r\n\r\n\tpublic get subRegionName(): string {\r\n\t\treturn this._payload.subRegionName;\r\n\t}\r\n\r\n\tpublic get regionName(): string {\r\n\t\treturn this._payload.regionName;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchCountryAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchCountrySuccessAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchCountrySuccess;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchPreviousCountryAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchPreviousCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchNextCountryAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.searchNextCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ToggleMapModeCountryListAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.toggleMapMode;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ToggleShowCapitalsModeCountryListAction implements Action {\r\n\tpublic readonly type: string = countryListActionsType.toggleShowCapitalsMode;\r\n}\r\n\r\nexport type CountryListActions =\r\n\tInitCountryListAction\r\n\t| InitCountryListSuccessAction\r\n\t| InitCapitalsCoordinatesAction\r\n\t| InitCapitalsCoordinatesDataAction\r\n\t| InitCapitalsCoordinatesDataSuccessAction\r\n\t| InitCountriesForestAreaAction\r\n\t| InitCountriesForestAreaDataAction\r\n\t| InitCountriesForestAreaDataSuccessAction\r\n\t| IsCountriesLoadingSuccessAction\r\n\t| SearchSubRegionCountriesAction\r\n\t| SearchCountryAction\r\n\t| SearchCountrySuccessAction\r\n\t| ToggleMapModeCountryListAction\r\n\t| ToggleShowCapitalsModeCountryListAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType, Effect } from '@ngrx/effects';\r\nimport { CountryListDataService } from 'src/app/services/country-data.service';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport {\r\n\tcountryListActionsType,\r\n\tInitCountryListSuccessAction,\r\n\tInitCountriesForestAreaDataSuccessAction,\r\n\tInitCapitalsCoordinatesDataSuccessAction\r\n} from './country-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CountryListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _countryListDataService: CountryListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadCountryList(): Observable<InitCountryListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(countryListActionsType.initCountries),\r\n\t\t\tswitchMap(() => this._countryListDataService.loadCountriesList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((currentCountryList: Country[]) => {\r\n\t\t\t\t\t\treturn new InitCountryListSuccessAction({ countryList: currentCountryList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadCountriesForestAreaData(): Observable<InitCountriesForestAreaDataSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(countryListActionsType.initCountriesForestAreaData),\r\n\t\t\tswitchMap(() => this._countryListDataService.loadCountriesForestAreaData()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((countriesForestData: any) => {\r\n\t\t\t\t\t\treturn new InitCountriesForestAreaDataSuccessAction({ countriesForestAreaData: countriesForestData });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadCapitalsCoordinates(): Observable<unknown> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(countryListActionsType.initCapitalsCoordinatesData),\r\n\t\t\tswitchMap((payload: { countryList: Country[] }) => this._countryListDataService.loadCapitalsCoordinatesData(payload.countryList)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((currentCapitalsData: Capital[]) => {\r\n\t\t\t\t\t\treturn new InitCapitalsCoordinatesDataSuccessAction({ capitalsCoordinatesData: currentCapitalsData });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { CountryListDataService } from 'src/app/services/country-data.service';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\nimport { CapitalListSnapshot } from 'src/app/models/country-list/capital-list-snapshot';\r\nimport {\r\n\tToggleMapModeCountryListAction,\r\n\tToggleShowCapitalsModeCountryListAction,\r\n\tSearchCountrySuccessAction,\r\n\tSearchCountryAction,\r\n\tSearchPreviousCountryAction,\r\n\tSearchNextCountryAction,\r\n\tSearchSubRegionCountriesAction,\r\n\tInitCountryListAction,\r\n\tInitCapitalsCoordinatesDataAction,\r\n\tInitCountriesForestAreaDataAction,\r\n\tInitCountriesForestAreaAction,\r\n\tInitCapitalsCoordinatesAction,\r\n\tIsCountriesLoadingSuccessAction\r\n} from './country-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\n@Injectable()\r\nexport class FacadeServiceCountryList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t\tprivate _countryListDataService: CountryListDataService\r\n\t) { }\r\n\r\n\tpublic saveCapitalsCoordinatesData(capitalsData: Capital[]): void {\r\n\t\tthis._countryListDataService.saveCapitalsCoordinatesData(\r\n\t\t\tnew CapitalListSnapshot(\r\n\t\t\t\tcapitalsData\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tpublic toggleMapMode(): void {\r\n\t\tthis._store$.dispatch(new ToggleMapModeCountryListAction());\r\n\t}\r\n\r\n\tpublic toggleCapitalsMode(): void {\r\n\t\tthis._store$.dispatch(new ToggleShowCapitalsModeCountryListAction());\r\n\t}\r\n\r\n\tpublic searchCurrentCountry(countryName: string): void {\r\n\t\tthis._store$.dispatch(new SearchCountryAction({ name: countryName }));\r\n\t}\r\n\r\n\tpublic searchPreviousCountry(countryName: string): void {\r\n\t\tthis._store$.dispatch(new SearchPreviousCountryAction({ name: countryName }));\r\n\t}\r\n\r\n\tpublic searchNextCountry(countryName: string): void {\r\n\t\tthis._store$.dispatch(new SearchNextCountryAction({ name: countryName }));\r\n\t}\r\n\r\n\tpublic searchCountry(countryName: string): void {\r\n\t\tthis.searchCurrentCountry(countryName);\r\n\t\tthis.searchPreviousCountry(countryName);\r\n\t\tthis.searchNextCountry(countryName);\r\n\t}\r\n\r\n\tpublic searchCountrySuccess(): void {\r\n\t\tthis._store$.dispatch(new SearchCountrySuccessAction());\r\n\t}\r\n\r\n\tpublic searchSubRegionCountries(regionName: string, subRegionName: string): void {\r\n\t\tthis._store$.dispatch(new SearchSubRegionCountriesAction({ regionName, subRegionName }));\r\n\t}\r\n\r\n\tpublic initCountryList(): void {\r\n\t\tthis._store$.dispatch(new InitCountryListAction());\r\n\t}\r\n\r\n\tpublic initCapitalsCoordinatesData(countryList: Country[]): void {\r\n\t\tthis._store$.dispatch(new InitCapitalsCoordinatesDataAction({ countryList }));\r\n\t}\r\n\r\n\tpublic initCountriesForestAreaData(): void {\r\n\t\tthis._store$.dispatch(new InitCountriesForestAreaDataAction());\r\n\t}\r\n\r\n\tpublic initCountriesForestArea(): void {\r\n\t\tthis._store$.dispatch(new InitCountriesForestAreaAction());\r\n\t}\r\n\r\n\tpublic initCapitalsCoordinates(): void {\r\n\t\tthis._store$.dispatch(new InitCapitalsCoordinatesAction());\r\n\t}\r\n\r\n\tpublic countriesLoadingSuccess(): void {\r\n\t\tthis._store$.dispatch(new IsCountriesLoadingSuccessAction());\r\n\t}\r\n\r\n}\r\n","import { Country } from 'src/app/models/country-list/country';\r\nimport { Capital } from 'src/app/models/country-list/capital';\r\nimport { countryListActionsType, CountryListActions } from './country-list.actions';\r\nimport { CountryCapitalInterface } from 'src/app/models/country-list/country-capital-interface';\r\nimport { CountryForestAreaInterface } from 'src/app/models/country-list/country-forest-area-interface';\r\n\r\nexport interface ICountryListState {\r\n\tisLoading: boolean;\r\n\tisSearchLoading: boolean;\r\n\tisInitedCountries: boolean;\r\n\tisInitedCapitalsCoordinatesData: boolean;\r\n\tisInitedCountriesForestAreaData: boolean;\r\n\tisMapMode: boolean;\r\n\tisGlobeMode: boolean;\r\n\tisShowCapitalsMode: boolean;\r\n\tcountryList: Country[];\r\n\tcapitalsCoordinatesData: CountryCapitalInterface[];\r\n\tcountriesForestAreaData: CountryForestAreaInterface[];\r\n\tsubRegionsCountries: Country[];\r\n\tsearchPreviousCountry: Country;\r\n\tsearchCountry: Country;\r\n\tsearchNextCountry: Country;\r\n}\r\n\r\nexport const countryListFeatureKey: 'COUNTRY-LIST' = 'COUNTRY-LIST';\r\n\r\nconst initialState: ICountryListState = {\r\n\tisLoading: true,\r\n\tisSearchLoading: false,\r\n\tisInitedCountries: false,\r\n\tisInitedCapitalsCoordinatesData: false,\r\n\tisInitedCountriesForestAreaData: false,\r\n\tisMapMode: true,\r\n\tisGlobeMode: false,\r\n\tisShowCapitalsMode: true,\r\n\tcountryList: null,\r\n\tcapitalsCoordinatesData: null,\r\n\tcountriesForestAreaData: null,\r\n\tsubRegionsCountries: null,\r\n\tsearchPreviousCountry: null,\r\n\tsearchCountry: null,\r\n\tsearchNextCountry: null\r\n};\r\n\r\nexport function countryListReducer(\r\n\tstate: ICountryListState = initialState,\r\n\taction: any\r\n): ICountryListState {\r\n\tswitch (action.type) {\r\n\t\tcase countryListActionsType.initCountries: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCountries: true,\r\n\t\t\t\tcountryList: [...action.countryList].filter((country: Country) => Boolean(country))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCapitalsCoordinatesData: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCapitalsCoordinatesDataSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCapitalsCoordinatesData: true,\r\n\t\t\t\tcapitalsCoordinatesData: [...action.capitalsCoordinatesData].filter((capital: Capital) => {\r\n\t\t\t\t\tif (Boolean(capital)) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tlatitude: capital.latitude,\r\n\t\t\t\t\t\t\tlongitude: capital.longitude,\r\n\t\t\t\t\t\t\tname: capital.name\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCapitalsCoordinates: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountryList: [...state.capitalsCoordinatesData].filter(Boolean).map((capital: Capital) => {\r\n\t\t\t\t\tif (Boolean(capital)) {\r\n\t\t\t\t\t\tconst currentCountry: Country = state.countryList.find((country: Country) => {\r\n\t\t\t\t\t\t\treturn country.capital.name === capital.name;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (Boolean(currentCountry)) {\r\n\t\t\t\t\t\t\tconst newCountry: Country = currentCountry.clone();\r\n\t\t\t\t\t\t\tnewCountry.capital = capital.clone();\r\n\t\t\t\t\t\t\treturn newCountry;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesForestAreaData: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesForestAreaDataSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCountriesForestAreaData: true,\r\n\t\t\t\tcountriesForestAreaData: [...action.countriesForestAreaData]\r\n\t\t\t\t\t.filter((forestArea: CountryForestAreaInterface) => Boolean(forestArea))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.initCountriesForestArea: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountryList: [...state.countriesForestAreaData].filter(Boolean).map((forestArea: CountryForestAreaInterface) => {\r\n\t\t\t\t\tif (Boolean(forestArea)) {\r\n\t\t\t\t\t\tconst currentCountry: Country = state.countryList.find((country: Country) => country.id === forestArea.id);\r\n\t\t\t\t\t\tif (Boolean(currentCountry)) {\r\n\t\t\t\t\t\t\tconst newCountry: Country = currentCountry.clone();\r\n\t\t\t\t\t\t\tnewCountry.forestArea = Number(forestArea.value);\r\n\t\t\t\t\t\t\treturn newCountry;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.isCountriesLoadingSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchSubRegionCountries: {\r\n\t\t\tconst currentRegionCountries: Country[] = [...state.countryList].filter((country: Country) => {\r\n\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\tif (country.region.toLowerCase() === action.regionName) {\r\n\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsubRegionsCountries: [...currentRegionCountries].filter((country: Country) => {\r\n\t\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\t\tconst countrySubRegionInfo: string[] = country.subRegion.toLowerCase().split(' ');\r\n\t\t\t\t\t\tif (countrySubRegionInfo[0] === action.subRegionName) {\r\n\t\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchCountry: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: true,\r\n\t\t\t\tsearchCountry: [...state.subRegionsCountries].find((country: Country) => {\r\n\t\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\r\n\t\t\t\t\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t\t.join('-');\r\n\t\t\t\t\t\tif (action.name === currentCountryRouterName) {\r\n\t\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchCountrySuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: false,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.searchPreviousCountry: {\r\n\t\t\tconst previousCountryIndex: number = [...state.subRegionsCountries].findIndex((country: Country) => {\r\n\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\r\n\t\t\t\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t.join('-');\r\n\t\t\t\t\tif (action.name === currentCountryRouterName) {\r\n\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}) - 1;\r\n\t\t\tif (previousCountryIndex >= 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchPreviousCountry: state.subRegionsCountries[previousCountryIndex].clone()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchPreviousCountry: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase countryListActionsType.searchNextCountry: {\r\n\t\t\tconst nextCountryIndex: number = [...state.subRegionsCountries].findIndex((country: Country) => {\r\n\t\t\t\tif (Boolean(country)) {\r\n\t\t\t\t\tconst currentCountryRouterName: string = country.name.replace(/\\./g, '')\r\n\t\t\t\t\t\t.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t.join('-');\r\n\t\t\t\t\tif (action.name === currentCountryRouterName) {\r\n\t\t\t\t\t\treturn country;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}) + 1;\r\n\t\t\tif (nextCountryIndex < state.subRegionsCountries.length) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchNextCountry: state.subRegionsCountries[nextCountryIndex].clone()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tsearchNextCountry: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase countryListActionsType.toggleMapMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisMapMode: !state.isMapMode,\r\n\t\t\t\tisGlobeMode: !state.isGlobeMode\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase countryListActionsType.toggleShowCapitalsMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisShowCapitalsMode: !state.isShowCapitalsMode,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerCountryList(\r\n\tstate: ICountryListState | undefined,\r\n\taction: CountryListActions\r\n): ICountryListState {\r\n\treturn countryListReducer(state, action);\r\n}\r\n","import { ICountryListState, countryListFeatureKey } from './country-list.reducer';\r\nimport {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tMemoizedSelector,\r\n\tDefaultProjectorFn\r\n} from '@ngrx/store';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { CountryCapitalInterface } from 'src/app/models/country-list/country-capital-interface';\r\nimport { CountryForestAreaInterface } from 'src/app/models/country-list/country-forest-area-interface';\r\n\r\nexport const selectStateCountryList: MemoizedSelector<\r\n\tobject, ICountryListState,\r\n\tDefaultProjectorFn<ICountryListState>\r\n> = createFeatureSelector<ICountryListState>(countryListFeatureKey);\r\n\r\nexport const selectCountryListIsLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isLoading\r\n);\r\n\r\nexport const selectCountryList: MemoizedSelector<\r\n\tobject,\r\n\tCountry[],\r\n\tDefaultProjectorFn<Country[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country[] => state.countryList\r\n);\r\n\r\nexport const selectCountryListIsInitedCountries: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isInitedCountries\r\n);\r\n\r\nexport const selectCountriesForestAreaData: MemoizedSelector<\r\n\tobject,\r\n\tCountryForestAreaInterface[],\r\n\tDefaultProjectorFn<CountryForestAreaInterface[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): CountryForestAreaInterface[] => state.countriesForestAreaData\r\n);\r\n\r\nexport const selectIsInitedCountriesForestAreaData: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isInitedCountriesForestAreaData\r\n);\r\n\r\nexport const selectCapitalsCoordinatesData: MemoizedSelector<\r\n\tobject,\r\n\tCountryCapitalInterface[],\r\n\tDefaultProjectorFn<CountryCapitalInterface[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): CountryCapitalInterface[] => state.capitalsCoordinatesData\r\n);\r\n\r\nexport const selectIsInitedCapitalsCoordinatesData: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isInitedCapitalsCoordinatesData\r\n);\r\n\r\nexport const selectSubRegionsCountries: MemoizedSelector<\r\n\tobject,\r\n\tCountry[],\r\n\tDefaultProjectorFn<Country[]>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country[] => state.subRegionsCountries\r\n);\r\n\r\nexport const selectSearchCountry: MemoizedSelector<\r\n\tobject,\r\n\tCountry,\r\n\tDefaultProjectorFn<Country>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country => state.searchCountry\r\n);\r\n\r\nexport const selectSearchPreviousCountry: MemoizedSelector<\r\n\tobject,\r\n\tCountry,\r\n\tDefaultProjectorFn<Country>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country => state.searchPreviousCountry\r\n);\r\n\r\nexport const selectSearchNextCountry: MemoizedSelector<\r\n\tobject,\r\n\tCountry,\r\n\tDefaultProjectorFn<Country>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): Country => state.searchNextCountry\r\n);\r\n\r\nexport const selectIsCountrySearchLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isSearchLoading\r\n);\r\n\r\nexport const selectIsMapMode: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isMapMode\r\n);\r\n\r\nexport const selectIsGlobeMode: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isGlobeMode\r\n);\r\n\r\nexport const selectIsShowCapitalsMode: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateCountryList,\r\n\t(state: ICountryListState): boolean => state.isShowCapitalsMode\r\n);\r\n","export * from './country-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { Country } from 'src/app/models/country-list/country';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport enum donationListActionsType {\r\n\tinitDonationList = '[DONATION-LIST/API] Init-Donation-List Donation-List',\r\n\tInitDonationListSuccess = '[DONATION-LIST/API] Init-Donation-List-Success Donation-List',\r\n\tinitNewUserDonationBeforeRegistration = '[DONATION-LIST/API] Init-New-User-Donation Donation-List',\r\n\tmakeDonation = '[DONATION-LIST/API] Make-Donation Donation-List',\r\n\tdeleteDonation = '[DONATION-LIST/API] Delete-Donation Donation-List',\r\n\tinitNewCountryForDonation = '[DONATION-LIST/API] Init-New-Country-For-Donation Donation-List',\r\n\tdeleteNewCountryForDonation = '[DONATION-LIST/API] Delete-New-Country-For-Donation Donation-List',\r\n\tinitDonationCurrentCountry = '[DONATION-LIST/API] Init-Donation-Current-Country Donation-List',\r\n\tinitUserDonationList = '[DONATION-LIST/API] Init-User-Donation-List Donation-List',\r\n\tinitUserDonationListSuccess = '[DONATION-LIST/API]  Init-User-Donation-List-Success Donation-List',\r\n\tinitAllDonatorsDataByCost = '[DONATION-LIST/API] Init-All-Donators-Data-By-Cost Donation-List',\r\n\tinitAllDonatorsDataByTree = '[DONATION-LIST/API] Init-All-Donators-Data-By-Tree Donation-List'\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationListAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initDonationList;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationListSuccessAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.InitDonationListSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonationList: Donation[]\r\n\t}) { }\r\n\r\n\tpublic get donationList(): Donation[] {\r\n\t\treturn this._payload.donationList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewUserDonationBeforeRegistrationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initNewUserDonationBeforeRegistration;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation\r\n\t}) { }\r\n\r\n\tpublic get newDonation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class MakeDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.makeDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation,\r\n\t\tuserId: string\r\n\t}) { }\r\n\r\n\tpublic get donation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n\r\n\tpublic get userId(): string {\r\n\t\treturn this._payload.userId;\r\n\t}\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class DeleteDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.deleteDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation\r\n\t}) { }\r\n\r\n\tpublic get donation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewCountryForDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initNewCountryForDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountry: Country\r\n\t}) { }\r\n\r\n\tpublic get newCountry(): Country {\r\n\t\treturn this._payload.country;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class DeleteNewCountryForDonationAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.deleteNewCountryForDonation;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tcountry: Country\r\n\t}) { }\r\n\r\n\tpublic get newCountry(): Country {\r\n\t\treturn this._payload.country;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationCurrentCountryAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initDonationCurrentCountry;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonation: Donation,\r\n\t\tcountry: Country\r\n\t}) { }\r\n\r\n\tpublic get donation(): Donation {\r\n\t\treturn this._payload.donation;\r\n\t}\r\n\tpublic get country(): Country {\r\n\t\treturn this._payload.country;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserDonationListAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initUserDonationList;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tid: string\r\n\t}) { }\r\n\r\n\tpublic get id(): string {\r\n\t\treturn this._payload.id;\r\n\t}\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserDonationListSuccessAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initUserDonationListSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByCostAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initAllDonatorsDataByCost;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByTreeAction implements Action {\r\n\tpublic readonly type: string = donationListActionsType.initAllDonatorsDataByTree;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\nexport type DonationListActions =\r\n\tInitDonationListAction\r\n\t| InitDonationListSuccessAction\r\n\t| InitNewUserDonationBeforeRegistrationAction\r\n\t| MakeDonationAction\r\n\t| DeleteDonationAction\r\n\t| InitNewCountryForDonationAction\r\n\t| DeleteNewCountryForDonationAction\r\n\t| InitUserDonationListAction\r\n\t| InitDonationCurrentCountryAction\r\n\t| InitUserDonationListSuccessAction\r\n\t| InitAllDonatorsDataByCostAction\r\n\t| InitAllDonatorsDataByTreeAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { InitDonationListSuccessAction, donationListActionsType } from './donation-list.actions';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { DonationListDataService } from 'src/app/services/donation-list-data.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DonationListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _donationListDataService: DonationListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadDonationList(): Observable<InitDonationListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(donationListActionsType.initDonationList),\r\n\t\t\tswitchMap(() => this._donationListDataService.loadDonationList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((donationList: Donation[]) => {\r\n\t\t\t\t\t\treturn new InitDonationListSuccessAction({ donationList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { Store } from '@ngrx/store';\r\nimport {\r\n\tInitNewUserDonationBeforeRegistrationAction,\r\n\tMakeDonationAction,\r\n\tDeleteDonationAction,\r\n\tInitNewCountryForDonationAction,\r\n\tInitDonationCurrentCountryAction,\r\n\tInitUserDonationListAction,\r\n\tInitUserDonationListSuccessAction,\r\n\tInitDonationListAction,\r\n\tDeleteNewCountryForDonationAction,\r\n} from './donation-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\n@Injectable()\r\nexport class FacadeServiceDonationList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic initNewUserDonationBeforeRegistration(donation: Donation): void {\r\n\t\tthis._store$.dispatch(new InitNewUserDonationBeforeRegistrationAction({ donation }));\r\n\t}\r\n\r\n\tpublic makeDonation(donation: Donation, userId: string): void {\r\n\t\tthis._store$.dispatch(new MakeDonationAction({ donation, userId }));\r\n\t}\r\n\r\n\tpublic deleteDonation(donation: Donation): void {\r\n\t\tthis._store$.dispatch(new DeleteDonationAction({ donation }));\r\n\t}\r\n\r\n\tpublic initNewCountryForDonation(country: Country): void {\r\n\t\tthis._store$.dispatch(new InitNewCountryForDonationAction({ country }));\r\n\t}\r\n\r\n\tpublic initDonationCurrentCountry(donation: Donation, country: Country): void {\r\n\t\tthis._store$.dispatch(new InitDonationCurrentCountryAction({ donation, country }));\r\n\t}\r\n\r\n\tpublic initUserDonationList(id: string): void {\r\n\t\tthis._store$.dispatch(new InitUserDonationListAction({ id }));\r\n\t}\r\n\r\n\tpublic initUserDonationListSuccess(): void {\r\n\t\tthis._store$.dispatch(new InitUserDonationListSuccessAction());\r\n\t}\r\n\r\n\tpublic initDonationList(): void {\r\n\t\tthis._store$.dispatch(new InitDonationListAction());\r\n\t}\r\n\r\n\tpublic deleteNewCountryForDonation(country: Country): void {\r\n\t\tthis._store$.dispatch(new DeleteNewCountryForDonationAction({ country }));\r\n\t}\r\n\r\n}\r\n","import { Donation } from 'src/app/models/donation-list/donation';\r\nimport { donationListActionsType, DonationListActions } from './donation-list.actions';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\nexport interface IDonationListState {\r\n\tisLoading: boolean;\r\n\tisInitedDonationList: boolean;\r\n\tisInitedDonationListBeforRegistration: boolean;\r\n\tisInitedCountriesForDonation: boolean;\r\n\tisInitedUserDonationList: boolean;\r\n\tdonationList: Donation[];\r\n\tbeforeRegistrationUserDonationList: Donation[];\r\n\tcountriesForDonation: Country[];\r\n\tuserDonationList: Donation[];\r\n}\r\n\r\nexport const donationListFeatureKey: 'DONATION-LIST' = 'DONATION-LIST';\r\n\r\nconst initialState: IDonationListState = {\r\n\tisLoading: true,\r\n\tisInitedDonationList: false,\r\n\tisInitedDonationListBeforRegistration: false,\r\n\tisInitedCountriesForDonation: false,\r\n\tisInitedUserDonationList: false,\r\n\tdonationList: null,\r\n\tbeforeRegistrationUserDonationList: null,\r\n\tcountriesForDonation: null,\r\n\tuserDonationList: null,\r\n};\r\n\r\nexport function donationListReducer(\r\n\tstate: IDonationListState = initialState,\r\n\taction: any\r\n): IDonationListState {\r\n\tswitch (action.type) {\r\n\t\tcase donationListActionsType.initDonationList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.InitDonationListSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tisInitedDonationList: true,\r\n\t\t\t\tdonationList: [...action.donationList].filter((donation: Donation) => Boolean(donation))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initNewUserDonationBeforeRegistration: {\r\n\t\t\tconst newDonationListBeforeRegistration: Donation[] = (Boolean(state.beforeRegistrationUserDonationList)) ?\r\n\t\t\t\t[...state.beforeRegistrationUserDonationList, action.newDonation.clone()]\r\n\t\t\t\t: [action.newDonation.clone()];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedDonationListBeforRegistration: true,\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newDonationListBeforeRegistration]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.makeDonation: {\r\n\t\t\tconst newCurrentUserDonation: Donation = action.donation.clone();\r\n\t\t\tnewCurrentUserDonation.id = action.userId;\r\n\t\t\tconst newDonationList: Donation[] = (Boolean(state.donationList)) ?\r\n\t\t\t\t[...state.donationList, newCurrentUserDonation.clone()]\r\n\t\t\t\t: [newCurrentUserDonation.clone()];\r\n\t\t\tconst newUserDonationList: Donation[] = (Boolean(state.userDonationList)) ?\r\n\t\t\t\t[...state.userDonationList, newCurrentUserDonation.clone()]\r\n\t\t\t\t: [newCurrentUserDonation.clone()];\r\n\t\t\tconst newBeforeRegistrationUserDonationList: Donation[] = [...state.beforeRegistrationUserDonationList].filter((donation: Donation) => {\r\n\t\t\t\tif (!donation.equals(action.donation)) {\r\n\t\t\t\t\treturn donation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst isInitedDonationListAfterMakeDonation: boolean = (Boolean(newBeforeRegistrationUserDonationList.length))\r\n\t\t\t\t? true : false;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdonationList: [...newDonationList],\r\n\t\t\t\tuserDonationList: [...newUserDonationList],\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newBeforeRegistrationUserDonationList],\r\n\t\t\t\tisInitedDonationListBeforRegistration: isInitedDonationListAfterMakeDonation\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.deleteDonation: {\r\n\t\t\tconst newBeforeRegistrationUserDonationList: Donation[] = [...state.beforeRegistrationUserDonationList].filter((donation: Donation) => {\r\n\t\t\t\tif (!donation.equals(action.donation)) {\r\n\t\t\t\t\treturn donation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst isInitedDonationListAfterDeleteDonation: boolean = (Boolean(newBeforeRegistrationUserDonationList.length))\r\n\t\t\t\t? true\r\n\t\t\t\t: false;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newBeforeRegistrationUserDonationList],\r\n\t\t\t\tisInitedDonationListBeforRegistration: isInitedDonationListAfterDeleteDonation\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initNewCountryForDonation: {\r\n\t\t\tif (Boolean(state.countriesForDonation)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcountriesForDonation: [...state.countriesForDonation, action.newCountry.clone()]\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisInitedCountriesForDonation: true,\r\n\t\t\t\t\tcountriesForDonation: [action.newCountry.clone()]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase donationListActionsType.deleteNewCountryForDonation: {\r\n\t\t\tconst searchNewCountryList: Country[] = [...state.countriesForDonation].filter((country: Country) => {\r\n\t\t\t\treturn !country.equals(action.newCountry);\r\n\t\t\t});\r\n\t\t\tif (Boolean(searchNewCountryList.length)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcountriesForDonation: [...searchNewCountryList]\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisInitedCountriesForDonation: false,\r\n\t\t\t\t\tcountriesForDonation: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase donationListActionsType.initDonationCurrentCountry: {\r\n\t\t\tconst newBeforeRegistrationUserDonationList: Donation[] = [...state.beforeRegistrationUserDonationList].map((donation: Donation) => {\r\n\t\t\t\tif (donation.equals(action.donation)) {\r\n\t\t\t\t\tconst newDonation: Donation = donation.clone();\r\n\t\t\t\t\tnewDonation.country = action.country;\r\n\t\t\t\t\treturn newDonation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn donation;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedCountriesForDonation: true,\r\n\t\t\t\tbeforeRegistrationUserDonationList: [...newBeforeRegistrationUserDonationList]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initUserDonationList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserDonationList: [...state.donationList].filter((donation: Donation) => {\r\n\t\t\t\t\tif (donation.id === action.id) {\r\n\t\t\t\t\t\treturn donation.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationListActionsType.initUserDonationListSuccess: {\r\n\t\t\tlet isUserDonationListInited: boolean;\r\n\t\t\tif (Boolean(state.userDonationList)) {\r\n\t\t\t\tisUserDonationListInited = (Boolean(state.userDonationList.length))\r\n\t\t\t\t\t? true\r\n\t\t\t\t\t: false;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedUserDonationList: isUserDonationListInited\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerDonationList(\r\n\tstate: IDonationListState | undefined,\r\n\taction: DonationListActions\r\n): IDonationListState {\r\n\treturn donationListReducer(state, action);\r\n}\r\n","import {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tDefaultProjectorFn,\r\n\tMemoizedSelector\r\n} from '@ngrx/store';\r\nimport { IDonationListState, donationListFeatureKey } from './donation-list.reducer';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { Country } from 'src/app/models/country-list/country';\r\n\r\nexport const selectStateDonationList: MemoizedSelector<\r\n\tobject,\r\n\tIDonationListState,\r\n\tDefaultProjectorFn<IDonationListState>\r\n> = createFeatureSelector<IDonationListState>(donationListFeatureKey);\r\n\r\nexport const selectDonationListBeforeRegistration: MemoizedSelector<\r\n\tobject,\r\n\tDonation[],\r\n\tDefaultProjectorFn<Donation[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Donation[] => state.beforeRegistrationUserDonationList\r\n);\r\n\r\nexport const selectCountriesForDonation: MemoizedSelector<\r\n\tobject,\r\n\tCountry[],\r\n\tDefaultProjectorFn<Country[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Country[] => state.countriesForDonation\r\n);\r\n\r\nexport const selectIsInitedDonationListBeforeRegistration: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): boolean => state.isInitedDonationListBeforRegistration\r\n);\r\n\r\nexport const selectIsInitedCountriesForDonation: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): boolean => state.isInitedCountriesForDonation\r\n);\r\n\r\nexport const selectDonationList: MemoizedSelector<\r\n\tobject,\r\n\tDonation[],\r\n\tDefaultProjectorFn<Donation[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Donation[] => state.donationList\r\n);\r\n\r\nexport const selectUserDonationList: MemoizedSelector<\r\n\tobject,\r\n\tDonation[],\r\n\tDefaultProjectorFn<Donation[]>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): Donation[] => state.userDonationList\r\n);\r\n\r\nexport const selectIsInitedUserDonationList: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateDonationList,\r\n\t(state: IDonationListState): boolean => state.isInitedUserDonationList\r\n);\r\n","export * from './donation-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\n\r\nexport enum donationStatisticListActionsType {\r\n\tinitUserList = '[DONATION-STATISTIC-LIST/API] Init-User-List Donation-Statistic-List',\r\n\tinitDonationList = '[DONATION-STATISTIC-LIST/API] Init-Donation-List Donation-Statistic-List',\r\n\tinitAllDonatorsDataByCost = '[DONATION-STATISTIC-LIST/API] Init-All-Donators-Data-By-Cost Donation-Statistic-List',\r\n\tinitAllDonatorsDataByTree = '[DONATION-STATISTIC-LIST/API] Init-All-Donators-Data-By-Tree Donation-Statistic-List',\r\n\tinitTopTenDataStatistic = '[DONATION-STATISTIC-LIST/API] Init-Top-10-Data-Statistic Donation-Statistic-List',\r\n\tsortTop = '[DONATION-STATISTIC-LIST/API] Sort-Top Donation-Statistic-List',\r\n\tsortBottom = '[DONATION-STATISTIC-LIST/API] Sort-Bottom Donation-Statistic-List',\r\n\tinitAllCountriesDataByCost = '[DONATION-STATISTIC-LIST/API] Init-All-Countries-Data-By-Cost Donation-Statistic-List',\r\n\tinitAllCountriesDataByTree = '[DONATION-STATISTIC-LIST/API] Init-All-Countries-Data-By-Tree Donation-Statistic-List'\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserListDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initUserList;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitDonationListDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initDonationList;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tdonationList: Donation[]\r\n\t}) { }\r\n\r\n\tpublic get donationList(): Donation[] {\r\n\t\treturn this._payload.donationList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByCostDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllDonatorsDataByCost;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllDonatorsDataByTreeDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllDonatorsDataByTree;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SortTopDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.sortTop;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SortBottomDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.sortBottom;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllCountriesDataByCostDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllCountriesDataByCost;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitAllCountriesDataByTreeDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initAllCountriesDataByTree;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitTopTenDataStatisticDonationStatisticListAction implements Action {\r\n\tpublic readonly type: string = donationStatisticListActionsType.initTopTenDataStatistic;\r\n}\r\n\r\nexport type DonationStatisticListActions =\r\n\tInitUserListDonationStatisticListAction\r\n\t| InitDonationListDonationStatisticListAction\r\n\t| InitAllDonatorsDataByCostDonationStatisticListAction\r\n\t| InitAllDonatorsDataByTreeDonationStatisticListAction\r\n\t| InitTopTenDataStatisticDonationStatisticListAction\r\n\t| SortTopDonationStatisticListAction\r\n\t| SortBottomDonationStatisticListAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport {\r\n\tInitUserListDonationStatisticListAction,\r\n\tInitDonationListDonationStatisticListAction,\r\n\tInitAllDonatorsDataByCostDonationStatisticListAction,\r\n\tInitAllDonatorsDataByTreeDonationStatisticListAction,\r\n\tSortTopDonationStatisticListAction,\r\n\tSortBottomDonationStatisticListAction,\r\n\tInitTopTenDataStatisticDonationStatisticListAction,\r\n\tInitAllCountriesDataByCostDonationStatisticListAction,\r\n\tInitAllCountriesDataByTreeDonationStatisticListAction\r\n} from './donation-statistic-list.actions';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { StatisticElementType } from 'src/app/models/donation-statistic-list/statistic-element-type';\r\nimport { StatisticSubCategoryType } from 'src/app/models/donation-statistic-list/statistic-sub-category-type';\r\n\r\n@Injectable()\r\nexport class FacadeServiceDonationStatisticList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic initUserList(userList: User[]): void {\r\n\t\tthis._store$.dispatch(new InitUserListDonationStatisticListAction({ userList }));\r\n\t}\r\n\r\n\tpublic initDonationList(donationList: Donation[]): void {\r\n\t\tthis._store$.dispatch(new InitDonationListDonationStatisticListAction({ donationList }));\r\n\t}\r\n\r\n\tpublic initAllDonatorsDataByCost(): void {\r\n\t\tthis._store$.dispatch(new InitAllDonatorsDataByCostDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initAllDonatorsDataByTree(): void {\r\n\t\tthis._store$.dispatch(new InitAllDonatorsDataByTreeDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initTopTenDataStatistic(): void {\r\n\t\tthis._store$.dispatch(new InitTopTenDataStatisticDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic sortTopDonationStatisticList(): void {\r\n\t\tthis._store$.dispatch(new SortTopDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic sortBottomDonationStatisticList(): void {\r\n\t\tthis._store$.dispatch(new SortBottomDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initAllCountriesDataByCost(): void {\r\n\t\tthis._store$.dispatch(new InitAllCountriesDataByCostDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initAllCountriesDataByTree(): void {\r\n\t\tthis._store$.dispatch(new InitAllCountriesDataByTreeDonationStatisticListAction());\r\n\t}\r\n\r\n\tpublic initDonatorsData(statisticSubCategory: string, statisticElement: string): void {\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.AD) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllDonatorsDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t\tif (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllDonatorsDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.TD) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllDonatorsDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t}\r\n\t\t\tif (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllDonatorsDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic initCountriesData(statisticSubCategory: string, statisticElement: string): void {\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.AC) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllCountriesDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t\tif (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllCountriesDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (statisticSubCategory === StatisticSubCategoryType.TC) {\r\n\t\t\tif (statisticElement === StatisticElementType.BC) {\r\n\t\t\t\tthis.initAllCountriesDataByCost();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t} if (statisticElement === StatisticElementType.BT) {\r\n\t\t\t\tthis.initAllCountriesDataByTree();\r\n\t\t\t\tthis.sortTopDonationStatisticList();\r\n\t\t\t\tthis.initTopTenDataStatistic();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { donationStatisticListActionsType, DonationStatisticListActions } from './donation-statistic-list.actions';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport { Donation } from 'src/app/models/donation-list/donation';\r\nimport { DonationStatisticInterface } from 'src/app/models/donation-statistic-list/donation-statistic-interface';\r\n\r\nexport interface IDonationStatisticListState {\r\n\tisInitedUserList: boolean;\r\n\tisInitedDonationList: boolean;\r\n\tisInitedAllDataStatistic: boolean;\r\n\tisInitedTopTenDataStatistic: boolean;\r\n\tisInitedStatisticDataByCost: boolean;\r\n\tisInitedStatisticDataByTree: boolean;\r\n\tisSortedByIncrease: boolean;\r\n\tisSortedByDecrease: boolean;\r\n\tuserList: User[];\r\n\tdonationList: Donation[];\r\n\tstatisticData: DonationStatisticInterface[];\r\n}\r\n\r\nexport const donationStatisticListFeatureKey: 'DONATION-STATISTIC-LIST' = 'DONATION-STATISTIC-LIST';\r\n\r\nconst initialState: IDonationStatisticListState = {\r\n\tisInitedUserList: false,\r\n\tisInitedDonationList: false,\r\n\tisInitedAllDataStatistic: false,\r\n\tisInitedTopTenDataStatistic: false,\r\n\tisInitedStatisticDataByCost: false,\r\n\tisInitedStatisticDataByTree: false,\r\n\tisSortedByIncrease: false,\r\n\tisSortedByDecrease: false,\r\n\tuserList: null,\r\n\tdonationList: null,\r\n\tstatisticData: null\r\n};\r\n\r\nexport function donationStatisticListReducer(\r\n\tstate: IDonationStatisticListState = initialState,\r\n\taction: any\r\n): IDonationStatisticListState {\r\n\tswitch (action.type) {\r\n\t\tcase donationStatisticListActionsType.initUserList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...action.userList],\r\n\t\t\t\tisInitedUserList: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initDonationList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdonationList: [...action.donationList],\r\n\t\t\t\tisInitedDonationList: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllDonatorsDataByCost: {\r\n\t\t\tconst allDonatorsStatisticDataByCost: DonationStatisticInterface[] = [...state.userList].map((user: User) => {\r\n\t\t\t\tconst space: string = ' ';\r\n\t\t\t\tconst userFullName: string = user.name + space + user.surName;\r\n\t\t\t\tlet userTotalDonationCost: number = 0;\r\n\t\t\t\tconst userProfileImage: string = user.profileImage;\r\n\t\t\t\t[...state.donationList].map((donation: Donation) => {\r\n\t\t\t\t\tif (user.id === donation.id) {\r\n\t\t\t\t\t\tuserTotalDonationCost += Number(donation.treeDonation.cost);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (Boolean(userTotalDonationCost)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: userFullName,\r\n\t\t\t\t\t\tpoints: userTotalDonationCost,\r\n\t\t\t\t\t\tbullet: userProfileImage\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}).filter((donator: DonationStatisticInterface) => Boolean(donator));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...allDonatorsStatisticDataByCost],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: true,\r\n\t\t\t\tisInitedStatisticDataByTree: false,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllDonatorsDataByTree: {\r\n\t\t\tconst allDonatorsStatisticDataByTree: DonationStatisticInterface[] = [...state.userList].map((user: User) => {\r\n\t\t\t\tconst space: string = ' ';\r\n\t\t\t\tconst userFullName: string = user.name + space + user.surName;\r\n\t\t\t\tlet userTotalDonationTreeAmount: number = 0;\r\n\t\t\t\tconst userProfileImage: string = user.profileImage;\r\n\t\t\t\t[...state.donationList].map((donation: Donation) => {\r\n\t\t\t\t\tif (user.id === donation.id) {\r\n\t\t\t\t\t\tuserTotalDonationTreeAmount += Number(donation.treeDonation.amount);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (Boolean(userTotalDonationTreeAmount)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: userFullName,\r\n\t\t\t\t\t\tpoints: userTotalDonationTreeAmount,\r\n\t\t\t\t\t\tbullet: userProfileImage\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}).filter((donator: DonationStatisticInterface) => Boolean(donator));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...allDonatorsStatisticDataByTree],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: false,\r\n\t\t\t\tisInitedStatisticDataByTree: true,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initTopTenDataStatistic: {\r\n\t\t\tconst dataStatisticNumber: number = 11;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...state.statisticData].reverse()\r\n\t\t\t\t\t.slice(0, dataStatisticNumber).reverse(),\r\n\t\t\t\tisInitedAllDataStatistic: false,\r\n\t\t\t\tisInitedTopTenDataStatistic: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.sortTop: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...state.statisticData].sort((\r\n\t\t\t\t\tstatistic: DonationStatisticInterface,\r\n\t\t\t\t\tcurrentStatistic: DonationStatisticInterface\r\n\t\t\t\t) => {\r\n\t\t\t\t\treturn (statistic.points > currentStatistic.points) ? 1 : -1;\r\n\t\t\t\t}),\r\n\t\t\t\tisSortedByIncrease: true,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.sortBottom: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...state.statisticData].sort((\r\n\t\t\t\t\tstatistic: DonationStatisticInterface,\r\n\t\t\t\t\tcurrentStatistic: DonationStatisticInterface\r\n\t\t\t\t) => {\r\n\t\t\t\t\treturn (statistic.points > currentStatistic.points) ? -1 : 1;\r\n\t\t\t\t}),\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllCountriesDataByCost: {\r\n\t\t\tconst uniqueCountryNameList: string[] = [];\r\n\t\t\tconst donationsStatisticDataByTree: DonationStatisticInterface[] = [...state.donationList].map((donation: Donation) => {\r\n\t\t\t\tconst takeNumberWordsInCountryName: number = 2;\r\n\t\t\t\tconst currentCountryName: string = donation.country.name;\r\n\t\t\t\tconst isCountryNameInUniqueCountryNameList: string[] = uniqueCountryNameList.filter((countryName: string) => {\r\n\t\t\t\t\tif (Boolean(countryName) && currentCountryName === countryName) {\r\n\t\t\t\t\t\treturn countryName;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (!Boolean(isCountryNameInUniqueCountryNameList.length)) {\r\n\t\t\t\t\tuniqueCountryNameList.push(currentCountryName);\r\n\t\t\t\t\tconst statisticCountryName: string = currentCountryName.split(' ').slice(0, takeNumberWordsInCountryName).join(' ');\r\n\t\t\t\t\tlet currentCountryCostAmount: number = 0;\r\n\t\t\t\t\t[...state.donationList].map((currentDonation: Donation) => {\r\n\t\t\t\t\t\tif (currentDonation.country.name === currentCountryName) {\r\n\t\t\t\t\t\t\tcurrentCountryCostAmount += Number(currentDonation.treeDonation.cost);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: statisticCountryName,\r\n\t\t\t\t\t\tpoints: currentCountryCostAmount,\r\n\t\t\t\t\t\tbullet: donation.country.flag\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}).filter((donation: DonationStatisticInterface) => Boolean(donation));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...donationsStatisticDataByTree],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: true,\r\n\t\t\t\tisInitedStatisticDataByTree: false,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase donationStatisticListActionsType.initAllCountriesDataByTree: {\r\n\t\t\tconst uniqueCountryNameList: string[] = [];\r\n\t\t\tconst donationsStatisticDataByTree: DonationStatisticInterface[] = [...state.donationList].map((donation: Donation) => {\r\n\t\t\t\tconst takeNumberWordsInCountryName: number = 2;\r\n\t\t\t\tconst currentCountryName: string = donation.country.name;\r\n\t\t\t\tconst isCountryNameInUniqueCountryNameList: string[] = uniqueCountryNameList.filter((countryName: string) => {\r\n\t\t\t\t\tif (Boolean(countryName) && currentCountryName === countryName) {\r\n\t\t\t\t\t\treturn countryName;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (!Boolean(isCountryNameInUniqueCountryNameList.length)) {\r\n\t\t\t\t\tuniqueCountryNameList.push(currentCountryName);\r\n\t\t\t\t\tconst statisticCountryName: string = currentCountryName.split(' ').slice(0, takeNumberWordsInCountryName).join(' ');\r\n\t\t\t\t\tlet currentCountryTreeAmount: number = 0;\r\n\t\t\t\t\t[...state.donationList].map((currentDonation: Donation) => {\r\n\t\t\t\t\t\tif (currentDonation.country.name === currentCountryName) {\r\n\t\t\t\t\t\t\tcurrentCountryTreeAmount += Number(currentDonation.treeDonation.amount);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: statisticCountryName,\r\n\t\t\t\t\t\tpoints: currentCountryTreeAmount,\r\n\t\t\t\t\t\tbullet: donation.country.flag\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}).filter((donation: DonationStatisticInterface) => Boolean(donation));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatisticData: [...donationsStatisticDataByTree],\r\n\t\t\t\tisInitedAllDataStatistic: true,\r\n\t\t\t\tisInitedTopTenDataStatistic: false,\r\n\t\t\t\tisInitedStatisticDataByCost: false,\r\n\t\t\t\tisInitedStatisticDataByTree: true,\r\n\t\t\t\tisSortedByIncrease: false,\r\n\t\t\t\tisSortedByDecrease: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerDonationStatisticList(\r\n\tstate: IDonationStatisticListState | undefined,\r\n\taction: DonationStatisticListActions\r\n): IDonationStatisticListState {\r\n\treturn donationStatisticListReducer(state, action);\r\n}\r\n","export * from './donation-statistic-list.reducer';\r\n","import { ActionReducerMap } from '@ngrx/store';\r\nimport {\r\n\tcountryListFeatureKey,\r\n\tStateReducerCountryList,\r\n\tICountryListState\r\n} from './country-list/country-list.reducer';\r\nimport {\r\n\tITreeListState,\r\n\tStateReducerTreeList,\r\n\ttreeListFeatureKey\r\n} from './tree-list/tree-list.reducer';\r\nimport {\r\n\tIUserListState,\r\n\tStateReducerUserList,\r\n\tuserListFeatureKey\r\n} from './user-list/user-list.reducer';\r\nimport {\r\n\tIDonationListState,\r\n\tdonationListFeatureKey,\r\n\tStateReducerDonationList\r\n} from './donation-list/donation-list.reducer';\r\nimport {\r\n\tdonationStatisticListFeatureKey,\r\n\tStateReducerDonationStatisticList,\r\n\tIDonationStatisticListState\r\n} from './donation-statistic-list/donation-statistic-list.reducer';\r\n\r\nexport * from './country-list';\r\nexport * from './tree-list';\r\nexport * from './user-list';\r\nexport * from './donation-list';\r\nexport * from './donation-statistic-list';\r\n\r\nexport interface IAppState {\r\n\t[countryListFeatureKey]: ICountryListState;\r\n\t[treeListFeatureKey]: ITreeListState;\r\n\t[userListFeatureKey]: IUserListState;\r\n\t[donationListFeatureKey]: IDonationListState;\r\n\t[donationStatisticListFeatureKey]: IDonationStatisticListState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<IAppState> = {\r\n\t[countryListFeatureKey]: StateReducerCountryList,\r\n\t[treeListFeatureKey]: StateReducerTreeList,\r\n\t[userListFeatureKey]: StateReducerUserList,\r\n\t[donationListFeatureKey]: StateReducerDonationList,\r\n\t[donationStatisticListFeatureKey]: StateReducerDonationStatisticList\r\n};\r\n","export * from './tree-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { Tree } from 'src/app/models/tree-list/tree';\r\n\r\nexport enum treeListActionsType {\r\n\tinitTrees = '[TREE-LIST/API] Init-Trees Tree-List',\r\n\tinitTreesSuccess = '[TREE-LIST/API] Init-Trees-Success Tree-List',\r\n\tisTreesLoadingSuccess = '[TREE-LIST/API] Is-Loading-Success Tree-List',\r\n\tsearchTreeCategoryTrees = '[TREE-LIST/API] Search-Tree-Category-Trees Tree-list',\r\n\tsearchTree = '[TREE-LIST/API] Search-Tree Tree-List',\r\n\tsearchTreeSuccess = '[TREE-LIST/API] Search-Tree-Success Tree-List',\r\n\ttreeRouterMode = '[TREE-LIST/API] Tree-Router-Mode Tree-List',\r\n\tgoFromTreeRouterMode = '[TREE-LIST/API] Go-From-Tree-Router-Mode Tree-List'\r\n}\r\n\r\nexport class InitTreeListAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.initTrees;\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitTreeListSuccessAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.initTreesSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\ttreeList: Tree[]\r\n\t}) { }\r\n\r\n\tpublic get treeList(): Tree[] {\r\n\t\treturn this._payload.treeList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class IsTreesLoadingSuccessAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.isTreesLoadingSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchTreeCategoryTreesAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.searchTreeCategoryTrees;\r\n\r\n\tconstructor(private _payload: {\r\n\t\ttreeCategory: string\r\n\t}) { }\r\n\r\n\tpublic get treeCategory(): string {\r\n\t\treturn this._payload.treeCategory;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchTreeAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.searchTree;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tname: string\r\n\t}) { }\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._payload.name;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SearchTreeSuccessAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.searchTreeSuccess;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class TreeRouterModeAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.treeRouterMode;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class GoFromTreeRouterAction implements Action {\r\n\tpublic readonly type: string = treeListActionsType.goFromTreeRouterMode;\r\n}\r\n\r\nexport type TreeListActions =\r\n\tInitTreeListAction\r\n\t| InitTreeListSuccessAction\r\n\t| IsTreesLoadingSuccessAction\r\n\t| SearchTreeCategoryTreesAction\r\n\t| SearchTreeAction\r\n\t| SearchTreeSuccessAction\r\n\t| TreeRouterModeAction\r\n\t| GoFromTreeRouterAction;\r\n","import { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Injectable } from '@angular/core';\r\nimport { TreeListDataService } from 'src/app/services/tree-data.service';\r\nimport { treeListActionsType, InitTreeListSuccessAction } from './tree-list.actions';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { Tree } from 'src/app/models/tree-list/tree';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TreeListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _treeListDataService: TreeListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadTreeList(): Observable<InitTreeListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(treeListActionsType.initTrees),\r\n\t\t\tswitchMap(() => this._treeListDataService.loadTreeList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((treeList: Tree[]) => {\r\n\t\t\t\t\t\treturn new InitTreeListSuccessAction({ treeList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport {\r\n\tSearchTreeAction,\r\n\tTreeRouterModeAction,\r\n\tSearchTreeSuccessAction,\r\n\tSearchTreeCategoryTreesAction,\r\n\tGoFromTreeRouterAction,\r\n\tInitTreeListAction,\r\n\tIsTreesLoadingSuccessAction\r\n} from './tree-list.actions';\r\n\r\n@Injectable()\r\nexport class FacadeServiceTreeList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic searchTree(name: string): void {\r\n\t\tthis._store$.dispatch(new SearchTreeAction({ name }));\r\n\t}\r\n\r\n\tpublic goToTreeRouterMode(): void {\r\n\t\tthis._store$.dispatch(new TreeRouterModeAction());\r\n\t}\r\n\r\n\tpublic searchTreeSuccess(): void {\r\n\t\tthis._store$.dispatch(new SearchTreeSuccessAction());\r\n\t}\r\n\r\n\tpublic searchTreeCategoryTrees(treeCategory: string): void {\r\n\t\tthis._store$.dispatch(new SearchTreeCategoryTreesAction({ treeCategory }));\r\n\t}\r\n\r\n\tpublic goFromTreeRouter(): void {\r\n\t\tthis._store$.dispatch(new GoFromTreeRouterAction());\r\n\t}\r\n\r\n\tpublic initTreeList(): void {\r\n\t\tthis._store$.dispatch(new InitTreeListAction());\r\n\t}\r\n\r\n\tpublic treesLoadingSuccess(): void {\r\n\t\tthis._store$.dispatch(new IsTreesLoadingSuccessAction());\r\n\t}\r\n\r\n}\r\n","import { Tree } from 'src/app/models/tree-list/tree';\r\nimport { TreeListActions, treeListActionsType } from './tree-list.actions';\r\n\r\nexport interface ITreeListState {\r\n\tisLoading: boolean;\r\n\tisInitedTrees: boolean;\r\n\ttreeList: Tree[];\r\n\ttreeCategoryTrees: Tree[];\r\n\tisSearchLoading: boolean;\r\n\tsearchTree: Tree;\r\n\tisTreeRouterMode: boolean;\r\n}\r\n\r\nexport const treeListFeatureKey: 'TREE-LIST' = 'TREE-LIST';\r\n\r\nconst initialState: ITreeListState = {\r\n\tisLoading: true,\r\n\tisInitedTrees: false,\r\n\ttreeList: null,\r\n\ttreeCategoryTrees: null,\r\n\tisSearchLoading: false,\r\n\tsearchTree: null,\r\n\tisTreeRouterMode: false\r\n};\r\n\r\nexport function treeListReducer(\r\n\tstate: ITreeListState = initialState,\r\n\taction: any\r\n): ITreeListState {\r\n\tswitch (action.type) {\r\n\t\tcase treeListActionsType.initTrees: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.initTreesSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitedTrees: true,\r\n\t\t\t\ttreeList: [...action.treeList].filter((tree: Tree) => Boolean(tree))\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.isTreesLoadingSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.searchTreeCategoryTrees: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttreeCategoryTrees: [...state.treeList].filter((tree: Tree) => {\r\n\t\t\t\t\tif (tree.type === action.treeCategory) {\r\n\t\t\t\t\t\treturn tree;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.searchTree: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: true,\r\n\t\t\t\tsearchTree: [...state.treeList].find((tree: Tree) => {\r\n\t\t\t\t\tconst currentTreeRouterName: string = tree.name.replace(/\\(|\\)/g, '')\r\n\t\t\t\t\t\t.split(' ')\r\n\t\t\t\t\t\t.join('-')\r\n\t\t\t\t\t\t.toLowerCase();\r\n\t\t\t\t\tif (Boolean(tree) && action.name === currentTreeRouterName) {\r\n\t\t\t\t\t\treturn tree;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.searchTreeSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchLoading: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.treeRouterMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTreeRouterMode: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase treeListActionsType.goFromTreeRouterMode: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTreeRouterMode: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerTreeList(\r\n\tstate: ITreeListState | undefined,\r\n\taction: TreeListActions\r\n): ITreeListState {\r\n\treturn treeListReducer(state, action);\r\n}\r\n","import { ITreeListState, treeListFeatureKey } from './tree-list.reducer';\r\nimport {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tMemoizedSelector,\r\n\tDefaultProjectorFn\r\n} from '@ngrx/store';\r\nimport { Tree } from 'src/app/models/tree-list/tree';\r\n\r\nexport const selectStateTreeList: MemoizedSelector<\r\n\tobject,\r\n\tITreeListState,\r\n\tDefaultProjectorFn<ITreeListState>\r\n> = createFeatureSelector<ITreeListState>(treeListFeatureKey);\r\n\r\nexport const selectTreeListIsLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isLoading\r\n);\r\n\r\nexport const selectTreeList: MemoizedSelector<\r\n\tobject,\r\n\tTree[],\r\n\tDefaultProjectorFn<Tree[]>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): Tree[] => state.treeList\r\n);\r\n\r\nexport const selectIsInitedTrees: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isInitedTrees\r\n);\r\n\r\nexport const selectTreeCategoryTrees: MemoizedSelector<\r\n\tobject,\r\n\tTree[],\r\n\tDefaultProjectorFn<Tree[]>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): Tree[] => state.treeCategoryTrees\r\n);\r\n\r\nexport const selectSearchTree: MemoizedSelector<\r\n\tobject,\r\n\tTree,\r\n\tDefaultProjectorFn<Tree>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): Tree => state.searchTree\r\n);\r\n\r\nexport const selectIsTreeSearchLoading: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isSearchLoading\r\n);\r\n\r\nexport const selectIsTreeRouterModeAction: MemoizedSelector<\r\n\tobject,\r\n\tboolean,\r\n\tDefaultProjectorFn<boolean>\r\n> = createSelector(\r\n\tselectStateTreeList,\r\n\t(state: ITreeListState): boolean => state.isTreeRouterMode\r\n);\r\n","export * from './user-list.reducer';\r\n","import { Action } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport enum userListActionsType {\r\n\tinitUser = '[USER-LIST/API] Init-User User-List',\r\n\tinitNewUser = '[USER-LIST/API] Init-New-User User-List',\r\n\tinitUserList = '[USER-LIST/API] Init-User-List User-List',\r\n\tinitUserListSuccess = '[USER-LIST/API] Init-User-List-Success User-List',\r\n\tinitNewUserProfileImage = '[USER-LIST/API] Init-New-User-Profile-Image User-List',\r\n\tpickUpPointsFromUser = '[USER-LIST/API] Pick-Up-Points-From-User User-List',\r\n\taddMedicalPointsForCurrentUser = '[USER-LIST/API] Add-Medical-Points-For-Current-User User-List',\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initUserList;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserListSuccessAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initUserListSuccess;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserList: User[]\r\n\t}) { }\r\n\r\n\tpublic get userList(): User[] {\r\n\t\treturn this._payload.userList;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitUserAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuser: User\r\n\t}) { }\r\n\r\n\tpublic get user(): User {\r\n\t\treturn this._payload.user;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewUserAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initNewUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuser: User\r\n\t}) { }\r\n\r\n\tpublic get user(): User {\r\n\t\treturn this._payload.user;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class InitNewUserProfileImageUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.initNewUserProfileImage;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tnewImage: string\r\n\t}) { }\r\n\r\n\tpublic get newImage(): string {\r\n\t\treturn this._payload.newImage;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class PickUpPointsFromUserUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.pickUpPointsFromUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tuserId: string,\r\n\t\tmedicalPoints: number\r\n\t}) { }\r\n\r\n\tpublic get userId(): string {\r\n\t\treturn this._payload.userId;\r\n\t}\r\n\r\n\tpublic get medicalPoints(): number {\r\n\t\treturn this._payload.medicalPoints;\r\n\t}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class AddMedicalPointsForCurrentUserUserListAction implements Action {\r\n\tpublic readonly type: string = userListActionsType.addMedicalPointsForCurrentUser;\r\n\r\n\tconstructor(private _payload: {\r\n\t\tmedicalPoints: number\r\n\t}) { }\r\n\r\n\tpublic get medicalPoints(): number {\r\n\t\treturn this._payload.medicalPoints;\r\n\t}\r\n}\r\n\r\nexport type UserListActions =\r\n\tInitUserAction\r\n\t| InitNewUserAction\r\n\t| InitUserListAction\r\n\t| InitUserListSuccessAction\r\n\t| InitNewUserProfileImageUserListAction\r\n\t| AddMedicalPointsForCurrentUserUserListAction;\r\n","import { Injectable } from '@angular/core';\r\nimport { UserListDataService } from 'src/app/services/user-data.service';\r\nimport { Effect, ofType, Actions } from '@ngrx/effects';\r\nimport { userListActionsType, InitUserListSuccessAction } from './user-list.actions';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { User } from 'src/app/models/user-list/user';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserListEffects {\r\n\tconstructor(\r\n\t\tprivate _actions$: Actions,\r\n\t\tprivate _userListDataService: UserListDataService\r\n\t) {\r\n\r\n\t}\r\n\r\n\t@Effect()\r\n\tpublic loadUserList(): Observable<InitUserListSuccessAction> {\r\n\t\treturn this._actions$.pipe(\r\n\t\t\tofType(userListActionsType.initUserList),\r\n\t\t\tswitchMap(() => this._userListDataService.loadUserList()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((userList: User[]) => {\r\n\t\t\t\t\t\treturn new InitUserListSuccessAction({ userList });\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n\tInitNewUserProfileImageUserListAction,\r\n\tPickUpPointsFromUserUserListAction,\r\n\tAddMedicalPointsForCurrentUserUserListAction,\r\n\tInitUserAction,\r\n\tInitNewUserAction,\r\n\tInitUserListAction\r\n} from './user-list.actions';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\n@Injectable()\r\nexport class FacadeServiceUserList {\r\n\r\n\tconstructor(\r\n\t\tprivate _store$: Store,\r\n\t) { }\r\n\r\n\tpublic changeCurrentUserImage(image: string): void {\r\n\t\tthis._store$.dispatch(new InitNewUserProfileImageUserListAction({ newImage: image }));\r\n\t}\r\n\r\n\tpublic pickUpPointsFromUser(userId: string, medicalPoints: number): void {\r\n\t\tthis._store$.dispatch(new PickUpPointsFromUserUserListAction({ userId, medicalPoints }));\r\n\t}\r\n\r\n\tpublic addMedicalPointsForCurrentUser(medicalPoints: number): void {\r\n\t\tthis._store$.dispatch(new AddMedicalPointsForCurrentUserUserListAction({ medicalPoints }));\r\n\t}\r\n\r\n\tpublic initUser(user: User): void {\r\n\t\tthis._store$.dispatch(new InitUserAction({ user }));\r\n\t}\r\n\r\n\tpublic initNewUser(user: User): void {\r\n\t\tthis._store$.dispatch(new InitNewUserAction({ user }));\r\n\t}\r\n\r\n\tpublic initUserList(): void {\r\n\t\tthis._store$.dispatch(new InitUserListAction());\r\n\t}\r\n}\r\n","import { userListActionsType, UserListActions } from './user-list.actions';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport interface IUserListState {\r\n\tisLoading: boolean;\r\n\tuserList: User[];\r\n\tuser: User;\r\n}\r\n\r\nexport const userListFeatureKey: 'USER-LIST' = 'USER-LIST';\r\n\r\nconst initialState: IUserListState = {\r\n\tisLoading: true,\r\n\tuserList: null,\r\n\tuser: null\r\n};\r\n\r\nexport function userListReducer(state: IUserListState = initialState, action: any): IUserListState {\r\n\tswitch (action.type) {\r\n\t\tcase userListActionsType.initUserList: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initUserListSuccess: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tuserList: [...action.userList]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initUser: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.user.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initNewUser: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...state.userList, action.user.clone()]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.initNewUserProfileImage: {\r\n\t\t\tconst newUser: User = state.user.clone();\r\n\t\t\tnewUser.profileImage = action.newImage;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: newUser.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.pickUpPointsFromUser: {\r\n\t\t\tconst currentUser: User = [...state.userList].find((user: User) => user.id === action.userId).clone();\r\n\t\t\tcurrentUser.medicalPoints = currentUser.medicalPoints - action.medicalPoints;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...state.userList].map((user: User) => {\r\n\t\t\t\t\tif (user.id === action.userId) {\r\n\t\t\t\t\t\treturn currentUser.clone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn user.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tuser: currentUser.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase userListActionsType.addMedicalPointsForCurrentUser: {\r\n\t\t\tconst currentUser: User = state.user.clone();\r\n\t\t\tcurrentUser.medicalPoints = currentUser.medicalPoints + action.medicalPoints;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: [...state.userList].map((user: User) => {\r\n\t\t\t\t\tif (user.id === currentUser.id) {\r\n\t\t\t\t\t\treturn currentUser.clone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn user.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tuser: currentUser.clone()\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function StateReducerUserList(\r\n\tstate: IUserListState | undefined,\r\n\taction: UserListActions\r\n): IUserListState {\r\n\treturn userListReducer(state, action);\r\n}\r\n","import { IUserListState, userListFeatureKey } from './user-list.reducer';\r\nimport {\r\n\tcreateFeatureSelector,\r\n\tcreateSelector,\r\n\tMemoizedSelector,\r\n\tDefaultProjectorFn\r\n} from '@ngrx/store';\r\nimport { User } from 'src/app/models/user-list/user';\r\n\r\nexport const selectStateUserList: MemoizedSelector<\r\n\tobject,\r\n\tIUserListState,\r\n\tDefaultProjectorFn<IUserListState>\r\n> = createFeatureSelector<IUserListState>(userListFeatureKey);\r\n\r\nexport const selectUser: MemoizedSelector<\r\n\tobject,\r\n\tUser,\r\n\tDefaultProjectorFn<User>\r\n> = createSelector(\r\n\tselectStateUserList,\r\n\t(state: IUserListState): User => state.user\r\n);\r\n\r\nexport const selectUserList: MemoizedSelector<\r\n\tobject,\r\n\tUser[],\r\n\tDefaultProjectorFn<User[]>\r\n> = createSelector(\r\n\tselectStateUserList,\r\n\t(state: IUserListState): User[] => state.userList\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment: {\r\n  production: boolean;\r\n} = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch((err: Error) => console.error(err));\r\n"],"sourceRoot":"webpack:///"}